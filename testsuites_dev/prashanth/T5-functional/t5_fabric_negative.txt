== T5 Fabric/L2 Bugs Test suite==

*Settings
Documentation    T5 Fabric/L2 bugs test suite
Suite Setup      base suite setup
Suite Teardown   base suite teardown
Test Setup       T5 test setup
Test Teardown    T5 test teardown
Force Tags       T5 
Library          keywords/BsnCommon.py
Library          keywords/T5.py
Library          keywords/T5Platform.py
Library			 keywords/SwitchLight.py
Library			 keywords/Ixia.py
Library			 keywords/Host.py
Resource         testsuites/T5/t5_dualleaf_three_rack_physical_resource.txt
Resource         testsuites/T5/t5_physical_variables.txt

*Test Case

Setup Three Rack Dual Leaf Topology
	[Tags]  bugs  run
	base suite setup   
    add fabric switch
    bring up h1 bond0
    bring up h2 bond0
    bring up h3 bond0
    bring up h4 bond0
    bring up h5 bond0
    bring up h6 bond0
    sleep  5
    rest verify fabric switch all
	rest verify fabric link common 	

With 2k mac entries , Remove the Leaf switch and Readd the leaf switch
    [Tags]  bugs   
    rest add tenant  t1
    rest add vns  t1  v1
    rest add interface to vns  t1  v1  leaf0-a  ${leaf0a_ixia_intf}  -1
    rest add interface to vns  t1  v1  leaf2-a  ${leaf2a_ixia_intf}  -1
    ${stream}=             L3 add  no_arp=True  flow=a<->e  src_mac=00:00:01:00:00:01  dst_mac=00:00:02:00:00:01  src_cnt=1000  dst_cnt=1000   frame_rate=1000  frame_size=68  name=a_e_flow
    start traffic  ${stream}
    rest verify endpoint in system  2000
    verify traffic rate  tx_rate  rx_rate  a  e
    verify traffic rate  tx_rate  rx_rate  e  a
    rest verify fabric link common
    rest delete fabric switch  leaf0-a
    sleep  2
    rest verify endpoint in system  1000
    rest add switch  leaf0-a
    rest add dpid  leaf0-a  ${leaf0a_dpid}
    rest add fabric role  leaf0-a  leaf
    rest add leaf group  leaf0-a  rack0
    sleep  5
    rest verify fabric switch  leaf0-a
    rest verify fabric link common
    rest verify forwarding vlan fabric tag members  leaf0-a
    sleep  5
    verify traffic rate  tx_rate  rx_rate  a  e
    verify traffic rate  tx_rate  rx_rate  e  a
    rest verify endpoint in system  2000
    stop traffic  ${stream}
    rest delete tenant  t1               
     
shut/no shut the switch with traffic forward
	[Tags]  bugs     
	rest add tenant  t1
	rest add vns  t1  v1
	rest add portgroup  p4 
    rest add interface to portgroup  leaf1-a  ${h4_intf0}  p4
    rest add interface to portgroup  leaf1-b  ${h4_intf1}  p4
    rest add portgroup lacp  p4  
    rest add portgroup  p5 
    rest add interface to portgroup  leaf2-a  ${h5_intf0}  p5
    rest add interface to portgroup  leaf2-b  ${h5_intf1}  p5
    rest add portgroup lacp  p5
    rest add portgroup to vns  t1  v1  p4  -1
    rest add portgroup to vns  t1  v1  p5  -1
    sleep  3
    rest verify fabric link common
    rest verify fabric interface lacp  leaf1-a  ${h4_intf0}
    rest verify fabric interface lacp  leaf2-a  ${h5_intf0}  
    ${loss}=  bash ping  h5  ${h4_ip}  source_if=bond0
    Should Be True  ${loss} < 50
    rest add shutdown fabric switch  leaf2-a   
    sleep  3
    rest verify fabric link common  13 
    ${loss}=  bash ping  h5  ${h4_ip}  source_if=bond0
    Should Be True  ${loss} < 50
    rest delete shutdown fabric switch  leaf2-a
    sleep  5
    rest verify fabric switch  leaf2-a 
    rest verify fabric link common 
    ${loss}=  bash ping  h5  ${h4_ip}  source_if=bond0
    Should Be True  ${loss} < 50
    rest delete portgroup  p4
    rest delete portgroup  p5
    rest delete tenant  t1 

reboot both the controllers to make sure all the switches indeed connected
	[Tags]  bugs   
	rest verify fabric link common
	cli verify cluster master reboot
	sleep  3
	rest verify fabric link common
	sleep  15
	cli verify cluster master reboot
	sleep  3
	rest verify fabric link common

Test Data center falls below 50% link verify forwarding table for the switch removal update
	[Tags]  bugs  
	rest verify fabric link common
	rest delete fabric switch  spine1
	sleep  2
	rest verify forwarding lag  ${leaf2a_dpid}  leaf2-a
	rest delete fabric switch  spine0
	sleep  2
	rest verify forwarding lag  ${leaf2a_dpid}  leaf2-a
	rest delete fabric switch  leaf2-b
	sleep  2
	${result}=  rest verify forwarding lag  ${leaf2a_dpid}  leaf2-a  
	Should not be True  ${result}
	rest add switch  spine0
    rest add dpid  spine0  ${spine0_dpid}
    rest add fabric role  spine0  spine
    rest add switch  spine1
    rest add dpid  spine1  ${spine1_dpid}
    rest add fabric role  spine1  spine
    rest add switch  leaf2-b
    rest add dpid  leaf2-b  ${leaf2b_dpid}
    rest add fabric role  leaf2-b  leaf 
    rest add leaf group  leaf2-b  rack2
    sleep  10
    rest verify fabric link common

Test VFT push to when system has not connected switches
	[Tags]  bugs  run    
	cli delete controller  spine0  c1
	cli delete controller  spine0  c2
	cli delete controller  spine1  c1
	cli delete controller  spine1  c2 
	cli delete controller  leaf0-a  c1
	cli delete controller  leaf0-a  c2
	cli delete controller  leaf0-b  c1
	cli delete controller  leaf0-b  c2
	cli delete controller  leaf1-a  c1
	cli delete controller  leaf1-a  c2
	cli delete controller  leaf1-b  c1
	cli delete controller  leaf1-b  c2
	cli delete controller  leaf2-a  c1
	cli delete controller  leaf2-a  c2
	cli delete controller  leaf2-b  c1
	cli delete controller  leaf2-b  c2
	sleep  10
	cli add controller  spine0  c1
	cli add controller  spine0  c2
	cli add controller  spine1  c1
	cli add controller  spine1  c2
	cli add controller  leaf2-a  c1
	cli add controller  leaf2-a  c2
	cli add controller  leaf2-b  c1
	cli add controller  leaf2-b  c2
	sleep  5
	rest verify fabric switch  spine0
	rest verify fabric switch  spine1
	rest verify fabric switch  leaf2-a
	rest verify fabric switch  leaf2-b
	rest verify fabric link common  5
	rest add tenant  t1
	rest add vns  t1  v1
	rest add portgroup  p5 
    rest add interface to portgroup  leaf2-a  ${h5_intf0}  p5
    rest add interface to portgroup  leaf2-b  ${h5_intf1}  p5
    rest add portgroup lacp  p5  
    rest add portgroup  p6 
    rest add interface to portgroup  leaf2-a  ${h6_intf0}  p6
    rest add interface to portgroup  leaf2-b  ${h6_intf1}  p6
    rest add portgroup lacp  p6
    rest add portgroup to vns  t1  v1  p5  -1
    rest add portgroup to vns  t1  v1  p6  -1
    sleep  8
    rest verify fabric interface lacp  leaf2-a  ${h5_intf0}
    rest verify fabric interface lacp  leaf2-b  ${h6_intf0}
    ${result}=  bash execute command  leaf2-a  ofad-ctl ft PORT | grep ENABLED | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 0
    ${result}=  bash execute command  leaf2-a  ofad-ctl ft PORT | grep ENABLED | grep 52 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 0
    ${result}=  bash execute command  leaf2-a  ofad-ctl ft PORT | grep ENABLED | grep 39 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} = 0
    ${loss}=  bash ping  h5  ${h6_ip}  source_if=bond0
    Should Be True  ${loss} < 50
    rest delete tenant  t1
	
check forwarding port/lag table consisteny after switch mgmt remove/add
	[Tags]  bugs  
	cli delete controller  spine0  c1
	cli delete controller  spine0  c2
	cli delete controller  spine1  c1
	cli delete controller  spine1  c2 
	cli delete controller  leaf2-a  c1
	cli delete controller  leaf2-a  c2
	cli delete controller  leaf2-b  c1
	cli delete controller  leaf2-b  c2
	cli delete controller  leaf0-a  c1
	cli delete controller  leaf0-a  c2
	cli delete controller  leaf0-b  c1
	cli delete controller  leaf0-b  c2
	cli delete controller  leaf1-a  c1
	cli delete controller  leaf1-a  c2
	cli delete controller  leaf1-b  c1
	cli delete controller  leaf1-b  c2
	sleep  10
	cli add controller  spine0  c1
	cli add controller  spine0  c2
	cli add controller  spine1  c1
	cli add controller  spine1  c2
	cli add controller  leaf2-a  c1
	cli add controller  leaf2-a  c2
	cli add controller  leaf2-b  c1
	cli add controller  leaf2-b  c2
	sleep  2
	rest verify fabric switch  spine0
	rest verify fabric switch  spine1
	rest verify fabric switch  leaf2-a
	rest verify fabric switch  leaf2-b
	rest verify fabric link common  5  
	rest verify forwarding port source mac check  leaf2-a
	rest verify forwarding port source mac check  leaf2-b
	${result}=  bash execute command  leaf2-a  ofad-ctl ft PORT | grep ENABLED | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 0
    ${result}=  bash execute command  leaf2-a  ofad-ctl ft PORT | grep ENABLED | grep 52 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 0
    ${result}=  bash execute command  leaf2-a  ofad-ctl ft PORT | grep ENABLED | grep 39 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 0
	${result}=  bash execute command  leaf2-a  ofad-ctl gt LAG | grep 81 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 2

check forwarding vlan table consistency after switch mgmt remove/add
	[Tags]  bugs   
	rest add tenant  t1
	rest add vns  t1  v1
	${result}=  bash execute command  leaf2-a  ofad-ctl ft VLAN | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} = 2
	cli delete controller  leaf2-a  c1
	cli delete controller  leaf2-a  c2
	sleep  5
	rest add vns  t1  v2
	cli add controller  leaf2-a  c1
	cli add controller  leaf2-a  c2
	sleep  5
	${result}=  bash execute command  leaf2-a  ofad-ctl ft VLAN | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 3
    ${result}=  bash execute command  leaf2-b  ofad-ctl ft VLAN | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 3
    ${result}=  bash execute command  spine0  ofad-ctl ft VLAN | grep 31 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 2   

verifying flow reconsilation when new switch is connected to the fabric
	[Tags]  bugs  
	rest add tenant  t1
	rest add vns  t1  v1
    rest add interface to vns  t1  v1  leaf2-a  ${leaf2a_ixia_intf}  -1 
    sleep  3
    ${result}=  bash execute command  leaf2-a  ofad-ctl ft VLAN | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 2
	cli delete controller  leaf2-a  c1
	cli delete controller  leaf2-a  c2
	sleep  5
	${result}=  bash execute command  leaf2-a  ofad-ctl ft VLAN | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 2
    clean configuration
    sleep  3
    rest add switch  leaf2-a
    rest add dpid  leaf2-a  ${leaf2a_dpid}
    rest add fabric role  leaf2-a  leaf
    rest add leaf group  leaf2-a  rack2
    sleep  2
    cli add controller  leaf2-a  c1
    cli add controller  leaf2-a  c2
    sleep  2
    rest verify fabric switch  leaf2-a
	${result}=  bash execute command  leaf2-a  ofad-ctl ft VLAN | grep 49 | wc -l
    ${count}=	Convert to integer  ${result}   
    Should be True  ${count} == 0
	
Tear down config and Topology
	[Tags]  bugs  run      
	clean configuration
    base suite teardown
 

* Keywords  
	
verify traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log  ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    ixia verify traffic rate  ${tx_value}  ${rx_value}
    
verify traffic rate negative   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    Should Not be equal  ${tx_value}  ${rx_value}
    
T5 test teardown
	delete traffic
	rest delete portgroup  p5
	rest delete portgroup  p6
	rest delete portgroup  p4
	rest delete tenant  t1
	rest delete tenant  t2
	base test teardown

T5 test setup
	base test setup
	add fabric switch
	bring up 1 gig interface
	
bring up 1 gig interface
	bash execute command  leaf0-a  ofad-ctl autoneg 24
	bash execute command  leaf0-a  ofad-ctl autoneg 25
	bash execute command  leaf0-a  ofad-ctl autoneg 26
	bash execute command  leaf0-b  ofad-ctl autoneg 24
	bash execute command  leaf1-a  ofad-ctl autoneg 24
	bash execute command  leaf1-a  ofad-ctl autoneg 25
	bash execute command  leaf1-a  ofad-ctl autoneg 26
	bash execute command  leaf1-b  ofad-ctl autoneg 24
	bash execute command  leaf2-a  ofad-ctl autoneg 24
	bash execute command  leaf2-b  ofad-ctl autoneg 24

bring up h1 bond0
	bash init intf  h1  bond0.10
    bash add ip address  h1  ${h1_tag_ip}/24  bond0.10
    bash ifup intf  h1  bond0 
bring up h2 bond0
	bash init intf  h2  bond0.10
    bash add ip address  h2  ${h2_tag_ip}/24  bond0.10
    bash ifup intf  h2  bond0
bring up h3 bond0
	bash init intf  h3  bond0.10
    bash add ip address  h3  ${h3_tag_ip}/24  bond0.10
    bash ifup intf  h3  bond0 
bring up h4 bond0
	bash init intf  h4  bond0
    bash add ip address  h4  ${h4_ip}/24  bond0
    bash ifup intf  h4  bond0
bring up h5 bond0
	bash init intf  h5  bond0
    bash add ip address  h5  ${h5_ip}/24  bond0
    bash ifup intf  h5  bond0
bring up h6 bond0
	bash init intf  h6  bond0
    bash add ip address  h6  ${h6_ip}/24  bond0
    bash ifup intf  h6  bond0  
