== T5 Functional CLI Test Suite ==

* Setting
Documentation    T5 BVS APP Functional VNS forwarding Test Suite for Tag
Suite Setup      base suite setup
Suite Teardown   base suite teardown
Test Setup       base test setup
Test Teardown    base test teardown
Force Tags       T5 
Library          keywords/BsnCommon.py
Library          keywords_dev/T5.py
Library	         keywords_dev/T5Fabric.py
Library          keywords/Mininet.py
Library	         keywords/Host.py
Library		     keywords/Ixia.py
Resource	     keywords_dev/t5_dualleaf_three_rack_physical_resource.txt

* Variables
${leaf0a_spine0_intf0}	ethernet33
${leaf0a_leaf0b_intf0}	ethernet39
${leaf0a_spine1_intf0}	ethernet32
${leaf0a_ixia_intf}		ethernet24
${leaf0b_ixia_intf}		ethernet24
${leaf1a_ixia_intf}		ethernet24
${leaf1b_ixia_intf}		ethernet24
${leaf1a_leaf1b_intf0}	ethernet39
${leaf1a_leaf1b_intf1}	ethernet40
${leaf2a_leaf2b_intf0}  ethernet39
${leaf2a_ixia_intf}		ethernet24
${leaf2b_ixia_intf}		ethernet24
${leaf2a_spine0_intf}	ethernet31
${leaf2a_spine1_intf}	ethernet32
${h4_ip}  192.168.0.11
${h5_ip}  192.168.0.30
${h6_ip}  192.168.0.31
${h4_mac}	00:10:18:f0:e9:70
${h5_mac}	90:e2:ba:4f:80:dc
${h6_mac}	90:e2:ba:4e:bb:90
${h1_intf0}  ethernet48
${h1_intf1}  ethernet48
${h2_intf0}  ethernet47
${h2_intf1}  ethernet47
${h3_intf0}  ethernet1
${h3_intf1}  ethernet1
${h4_intf0}  ethernet2
${h4_intf1}  ethernet2
${h5_intf0}  ethernet48
${h5_intf1}  ethernet48
${h6_intf0}  ethernet47
${h6_intf1}  ethernet47
${h1_tag_ip}	192.168.4.20
${h2_tag_ip}	192.168.4.21
${h3_tag_ip}	192.168.4.10
${h1_tag_mac}  90:e2:ba:4e:bc:98
${h2_tag_mac}  90:e2:ba:4f:80:b1
${h3_tag_mac}  00:10:18:f0:eb:e0
${leaf0b_spine0_intf0}	ethernet31
${leaf0b_spine1_intf0}	ethernet32


* Test Case 

add Single Leaf Three Rack setup
   [Tags]  feature
   base suite setup
   add fabric switch
   sleep  5
   rest verify fabric switch connectivity
   rest verify fabric link
   rest add tenant  t1
   rest add tenant  t2
   rest add vns  t1  v1
   rest add vns  t1  v2
   rest add vns  t2  v1
   rest add tenant  t3
   rest add vns  t3  v3
   rest add interface to vns  t1  v1  leaf0-b  ${leaf0b_ixia_intf}  -1
   rest add interface to vns  t1  v1  leaf1-b  ${leaf1b_ixia_intf}  -1
   rest add interface to vns  t1  v1  leaf2-b  ${leaf2b_ixia_intf}  300
   rest add interface to vns  t1  v2  leaf0-b  ${leaf0b_ixia_intf}  150
   rest add interface to vns  t1  v2  leaf1-a  ${leaf1a_ixia_intf}  100
   rest add interface to vns  t1  v2  leaf2-a  ${leaf2a_ixia_intf}  -1
   rest add interface to vns  t1  v2  leaf2-b  ${leaf2b_ixia_intf}  200
   rest add interface to vns  t2  v1  leaf0-a  ${leaf0a_ixia_intf}  500
   rest add interface to vns  t2  v1  leaf2-a  ${leaf2a_ixia_intf}  500
   rest add portgroup  p5
   rest add interface to portgroup  leaf2-a  ${h5_intf0}  p5
   rest add interface to portgroup  leaf2-b  ${h5_intf1}  p5
   rest add portgroup lacp  p5
   rest add portgroup to vns  t3  v3  p5  -1
   sleep  5  
   
check forwarding table for vlan 
   [Tags]   feature
   rest verify forwarding vlan table  leaf0-b
   rest verify forwarding vlan table  leaf2-b
   rest verify forwarding vlan table  leaf1-a
   
check the forwarding vlan translation table for all the switches
	[Tags]  feature
    rest verify forwarding vlan xlate  leaf0-b  150  ${leaf0b_ixia_intf}	    
    rest verify forwarding vlan xlate  leaf2-b  300  ${leaf2b_ixia_intf}  
    rest verify forwarding vlan xlate  leaf2-b  200  ${leaf0b_ixia_intf}
    rest verify forwarding vlan xlate  leaf1-a  100  ${leaf1a_ixia_intf}

check fabric ports members in the vlan-table with link up/down
	[Tags]  feature
	rest verify forwarding vlan fabric tag members  leaf0-a
	rest verify forwarding vlan fabric tag members  leaf1-a
	rest verify forwarding vlan fabric tag members  leaf2-a 
	cli disable interface  leaf0-a  ${leaf0a_leaf0b_intf0}
	sleep  3
	rest verify forwarding vlan fabric tag members  leaf0-a
	cli enable interface  leaf0-a  ${leaf0a_leaf0b_intf0}
	sleep  3
	rest verify forwarding vlan fabric tag members  leaf0-a
	rest verify forwarding vlan fabric tag members  leaf0-b
	cli disable interface  leaf0-a  ${leaf0a_spine0_intf0}
	sleep  3
	rest verify forwarding vlan fabric tag members  leaf0-a
	rest verify forwarding vlan fabric tag members  leaf0-b
	rest verify forwarding vlan fabric tag members  leaf1-a
	rest verify forwarding vlan fabric tag members  leaf2-a
	cli enable interface  leaf0-a  ${leaf0a_spine0_intf0}         

check edge port members in the vlan-table with linkup/down 
	[Tags]  feature
	rest verify forwarding vlan edge untag members  leaf0-b  ${leaf0b_ixia_intf}  
	rest verify forwarding vlan edge untag members  leaf1-b  ${leaf1b_ixia_intf}
	cli disable interface  leaf0-b  ${leaf0b_ixia_intf}
	sleep  2 
	rest verify forwarding vlan edge untag members  leaf0-b  ${leaf0b_ixia_intf}
	cli enable interface  leaf0-b  ${leaf0b_ixia_intf}
	sleep  2
	rest verify forwarding vlan edge untag members  leaf0-b  ${leaf0b_ixia_intf} 
	cli disable interface  leaf0-a  ${leaf0a_ixia_intf}
	rest verify forwarding vlan edge tag members  leaf0-a  ${leaf0a_ixia_intf}
	cli enable interface  leaf0-a  ${leaf0a_ixia_intf}
	sleep  3
	rest verify forwarding vlan edge tagged members  leaf0-a  ${leaf0a_ixia_intf}
	
Traffic forwarding between multiple tag on the same interface
	[Tags]  feature
	IXIA initialize        tg1
    ${stream}=             IXIA L2 add  flow=b->d  src_mac=00:02:02:00:00:24  dst_mac=00:02:04:00:00:24  ethertype=0800  frame_rate=1000  frame_size=68  name=b_d_flow
    IXIA start L2 traffic  ${stream}
    sleep  10
    rest verify forwarding layer2 table  leaf0-b  ${leaf0b_ixia_intf}
    verify traffic rate  tx_rate  rx_rate  b  d  
    sleep  5
    ${stream1}=             IXIA L2 add  flow=b->f  src_mac=00:02:02:00:01:24  dst_mac=00:02:06:00:00:24  tag=150  ethertype=0800  frame_rate=1000  frame_size=68  name=b_f_flow
    IXIA start L2 traffic  ${stream1}
    sleep  10
    rest verify forwarding layer2 table  leaf0-b  ${leaf0b_ixia_intf}
    verify traffic rate  tx_rate  rx_rate  b  f
    verify traffic rate  tx_rate  rx_rate  b  c
    ${stream2}=             IXIA L2 add  flow=f->b  src_mac=00:02:06:00:00:24  dst_mac=00:02:02:00:01:24  tag=200  ethertype=0800  frame_rate=1000  frame_size=68  name=f_b_flow
    IXIA start L2 traffic  ${stream2}
    sleep  10
    rest verify forwarding layer2 table  leaf2-b  ${leaf2b_ixia_intf}
    verify traffic rate  tx_rate  rx_rate  f  b
    verify traffic rate negative  tx_rate  rx_rate  b  c
    verify traffic rate negative  tx_rate  rx_rate  f  c
    verify traffic rate  tx_rate  rx_rate  b  d
    IXIA stop L2 traffic  ${stream}
    IXIA stop L2 traffic  ${stream1}
    IXIA stop L2 traffic  ${stream2}
    sleep  5
    
Traffic forward ingress wrong vlan id
	[Tags]  feature
    IXIA initialize        tg1
    ${stream}=             IXIA L2 add  flow=b->c  src_mac=00:02:02:00:00:24  dst_mac=00:02:04:00:00:24  tag=350  ethertype=0800  frame_rate=1000  frame_size=68  name=f_c_flow
    IXIA start L2 traffic  ${stream}
    sleep  10
    ${result}=  rest verify forwarding layer2 table  leaf0-b  ${leaf0b_ixia_intf}
    verify traffic rate negative  tx_rate  rx_rate  b  d
    IXIA stop L2 traffic  ${stream}
   
Traffic forwarding with edge port flap
	[Tags]  feature
	IXIA initialize        tg1
    ${stream}=             IXIA L2 add  flow=b->f  src_mac=00:02:02:00:00:24  dst_mac=00:02:06:00:00:24  tag=150  ethertype=0800  frame_rate=1000  frame_size=68  name=b_f_flow
    ${stream}=             IXIA L2 add  flow=f->b  src_mac=00:02:06:00:00:24  dst_mac=00:02:02:00:00:24  tag=200  ethertype=0800  frame_rate=1000  frame_size=68  name=f_b_flow
    sleep  3
    IXIA start L2 traffic  ${stream}
    sleep  10
    rest verify forwarding layer2 table  leaf0-b  ${leaf0b_ixia_intf}
    rest verify forwarding layer2 table  leaf2-b  ${leaf2b_ixia_intf}
    verify traffic rate  tx_rate  rx_rate  b  f
    verify traffic rate  tx_rate  rx_rate  f  b
    cli disable interface  leaf0-b  ${leaf0b_ixia_intf}
    sleep  5
    verify traffic rate negative  tx_rate  rx_rate  f  b    
    cli enable interface  leaf0-b  ${leaf0b_ixia_intf}  
    sleep  5
    verify traffic rate  tx_rate  rx_rate  b  f
    verify traffic rate  tx_rate  rx_rate  f  b
    cli disable interface  leaf2-b  ${leaf2b_ixia_intf}
    sleep  5
    verify traffic rate negative  tx_rate  rx_rate  b  f
    cli enable interface  leaf2-b  ${leaf2b_ixia_intf}
    sleep  5
    verify traffic rate  tx_rate  rx_rate  b  f
    verify traffic rate  tx_rate  rx_rate  f  b
    IXIA stop L2 traffic  ${stream}  
         
Testing flooding to within a VNS when the peer-lag down..
	[Tags]  feature
	IXIA initialize        tg1
	${stream}=             IXIA L2 add  flow=e<->f  src_mac=00:02:05:00:00:24  dst_mac=00:02:06:00:00:24  tag=500  ethertype=0800  frame_rate=1000  frame_size=68  name=e_f_flow
	sleep  3
	IXIA start L2 traffic  ${stream}
	sleep  10
	verify traffic rate  tx_rate  rx_rate  e  f
    verify traffic rate  tx_rate  rx_rate  f  e
    cli disable interface  leaf2-a  ${leaf2a_leaf2b_intf0}
    sleep  5
    cli verify interface stats  leaf2-a  ${h5_intf0}
    cli enable interface  leaf2-a  ${leaf2a_leaf2b_intf0}
    verify traffic rate  tx_rate  rx_rate  e  f
    verify traffic rate  tx_rate  rx_rate  f  e 
    
Verify forwarding vlan table with deleting tenants and vns
	[Tags]  feature
	rest delete tenant  t3
	rest verify forwarding vlan table  leaf2-a
	rest verify forwarding vlan table  leaf2-b
	rest delete vns  t1  v1
	rest verify forwarding vlan table  leaf0-a
	rest verify forwarding vlan table  leaf0-b
	rest delete tenant  t2
	rest delete tenant  t1
	sleep  2
	rest verify forwarding vlan table  leaf0-a
	rest verify forwarding vlan table  leaf0-b
	rest verify forwarding vlan table  leaf1-a
	rest verify forwarding vlan table  leaf1-b
	rest verify forwarding vlan table  leaf2-a
	rest verify forwarding vlan table  leaf2-b 
        
Tear down the config
   [Tags]  smoke  sanity 
   delete fabric switch
   rest delete portgroup  p5
   base suite teardown

* Keywords      
   
add a tenant  [Arguments]  ${tenant} 
  REST add tenant  ${tenant}    

delete a tenant  [Arguments]  ${tenant} 
  	REST delete tenant  ${tenant}    

add a vns  [Arguments]  ${tenant}  ${vns}  
	REST add vns  ${tenant}  ${vns}   

delete a vns  [Arguments]  ${tenant}  ${vns} 
  	REST delete vns  ${tenant}  ${vns}   

add a portgroup  [Arguments]  ${pg}
  	REST add portgroup  ${pg}    

delete a portgroup  [Arguments]  ${pg}
  	REST delete portgroup  ${pg}    

add a endpoint  [Arguments]  ${tenant}  ${vns}  ${endpoint} 
  	REST add endpoint  ${tenant}  ${vns}  ${endpoint}  

delete a endpoint  [Arguments]  ${tenant}  ${vns}  ${endpoint}
  	REST delete endpoint  ${tenant}  ${vns}  ${endpoint}  

add interface to portgroup  [Arguments]  ${switch}  ${intf}  ${pg} 
  	REST add interface to portgroup  ${switch}  ${intf}  ${pg}  

delete interface from portgroup  [Arguments]  ${switch}  ${intf}  ${pg} 
  	REST delete interface from portgroup  ${switch}  ${intf}  ${pg}  

add portgroup to vns  [Arguments]  ${tenant}  ${vns}  ${pg}  ${vlan}
  	REST add portgroup to vns  ${tenant}  ${vns}  ${pg}  ${vlan} 

add portgroup to endpoint  [Arguments]  ${tenant}  ${vns}  ${endpoint}  ${pg}  ${vlan} 
    REST add portgroup to endpoint  ${tenant}  ${vns}  ${endpoint}  ${pg}  ${vlan} 

delete portgroup from vns  [Arguments]  ${tenant}  ${vns}  ${pg}  ${vlan} 
    REST delete portgroup from vns  ${tenant}  ${vns}  ${pg}  ${vlan}

verify traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  IXIA fetch port stats
    Log  ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_frame_rate
    ixia verify traffic rate  ${tx_value}  ${rx_value}
    
verify traffic rate negative   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  IXIA fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_frame_rate
    Should Not be equal  ${tx_value}  ${rx_value}
  