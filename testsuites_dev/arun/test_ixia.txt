* Setting
Documentation   This suite is my sandbox for experimentation.
Suite Setup     base suite setup
Suite Teardown  base suite teardown
Test Setup      base test setup
Test Teardown   atest teardown
Force Tags      Vui
Library         keywords/BsnCommon.py
Library         keywords_dev/vui/MyTest.py
Library         keywords/Ixia.py

* Variable
${src_mac}  00:01:09:01:00:00  
${src_mac_step}  00:00:00:01:00:00
${src_cnt}  4
${dst_mac}  00:01:10:01:00:00
${dst_cnt}  4
${dst_mac_step}  00:00:00:01:00:00
${frame_rate}  1000
${frame_cnt}  50000
${frame_size}  160
${sleep_time}  5
${vlan_id}  199
${line_rate}  100
${stream_name}  a_b_flow
${burst_count}  1000
${burst_gap}  1000
${src_ip}  20.0.0.10
${dst_ip}  20.0.0.20

* Test Case
Test IXIA
    [Tags]  skipped
    info  tg1
01_Uni-Direction L2 Traffic with all defaults
# Basic test case with all default values and just start the flow
    ${stream}=             L2 add  name=${stream_name}  flow=a->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    ixia.start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap
    
02_Bi-Direction L2 Traffic with line rate
# Basic test case with all default values and just start the flow
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}  line_rate=${line_rate}
    clear stats
    ixia.start traffic  ${stream}
    sleep                  ${sleep_time}
    verify results  transmitted_frame_rate  received_frame_rate  ${stream}  ${stream_name}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity

03_Bi-Direction L2 Traffic with Burst count options
# Basic test case with all default values and just start the flow
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    ...						burst_count=${burst_count}  burst_gap=${burst_gap}
    clear stats
    ixia.start traffic  ${stream}
    sleep                  ${sleep_time}
    verify results  transmitted_frame_rate  received_frame_rate  ${stream}  ${stream_name}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap

04_Bi-Direction L3 Traffic with Burst count options
# Basic test case with all default values and just start the flow
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    ...						burst_count=${burst_count}  burst_gap=${burst_gap}
    clear stats
    ixia.start traffic  ${stream}
    sleep                  ${sleep_time}
    verify results  transmitted_frame_rate  received_frame_rate  ${stream}  ${stream_name}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3
05_Uni-Directional L2 Traffic with more args
# Currently Supported L2 Stream args will be adding more
    ${stream}=             L2 add  name=${stream_name}  flow=a->b  src_mac=${src_mac}  dst_mac=${dst_mac}  frame_rate=${frame_rate}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap

06_Bi-Directional L2 Traffic with different Macs
# Stream with Different Src and Dst Mac addresses
# s_cnt is used to pass no of src macs, dst_mac_step is the increment value for the next mac
# d_cnt is used to pass no of dst macs, s_step is the increment value for the next mac
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}  frame_rate=${frame_rate}
	...						frame_size=${frame_size}  frame_cnt=${frame_cnt}  dst_cnt=${dst_cnt}  src_cnt=${src_cnt}
	...						dst_mac_step=00:00:00:01:00:00  src_mac_step=00:00:00:01:00:00
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap
 
07_Bi_Direction L2 Traffic with all Defaults
# Basic test case with all default values and just start the flow
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap
    
08_Bi-directional L2 Traffic with LLDP ethertype
# Basic test case with all default values and etherytype 88cc LLDP
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  ethertype=88cc  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  
    
09_Bi-Driectional L2 Traffic with vlan_id
# Basic test case with all default values and etherytype 8100, with vlan id
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  vlan_id=${vlan_id}  frame_size=${frame_size}  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  bigtap

10_Bi-Directional L2 Traffic with multiple vlan_ids
# Basic test case with all default values and etherytype 8100, with vlan id
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  vlan_id=${vlan_id}  vlan_cnt=200  vlan_step=5  frame_size=${frame_size}  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  bigtap

11_Bi-Directional Traffic with bad CRC
# Basic test case with bad crc
    ${stream}=             L2 add  name=${stream_name}  flow=a<->b  crc=True  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
 	[Tags]  traffic  sanity
 	
12_Bi-Directional L3 Traffic with default args
# Basis test case with L3 Flow
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
	[Tags]  traffic  sanity  bigtap  L3
	
13_Bi-Directional L3 Traffic with more args
# Basis test case with L3 Flow with more details :)
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  src_ip=20.20.20.10  src_gw=20.20.20.11
    ...						dst_ip=20.20.20.11  dst_gw=20.20.20.10  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3
    
14_Bi-Directional L3 Traffic with more detailed args
# Basis test case with L3 Flow with more details :)
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    ...						src_ip=20.20.20.10  src_gw=20.20.20.11
    ...						dst_ip=20.20.20.11  dst_gw=20.20.20.10
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
	[Tags]  traffic  sanity  bigtap  L3

15_Verify L3 traffic: frame size 68 bytes
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_rate=${frame_rate}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    ...		src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    ...		src_ip=100.1.1.1
    ...		dst_ip=100.1.1.2
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3
    
16_Verify BiDirectional L3 traffic
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_rate=${frame_rate}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}
    ...     src_ip=100.1.1.1  src_gw=100.1.1.2  dst_ip=100.1.1.2  dst_gw=100.1.1.1 
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3
    
17_BiDirectional L3 Traffic with TCP
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_rate=${frame_size}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  protocol=TCP  src_port=8001  dst_port=8002
    ...     src_ip=100.1.1.1  src_gw=100.1.1.2  dst_ip=100.1.1.2  dst_gw=100.1.1.1 
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3
 
18_BiDirectional L3 Traffic with UDP
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_rate=${frame_rate}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  protocol=UDP  src_port=8001  dst_port=8002
    ...     src_ip=100.1.1.1  src_gw=100.1.1.2  dst_ip=100.1.1.2  dst_gw=100.1.1.1  
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3
 
19_BiDirectional basic IPv6 L3 Traffic with defaults
    ${stream}=  L3 add  name=${stream_name}  flow=a->b  frame_cnt=${frame_cnt}  frame_rate=${frame_rate}  ethertype=86dd  
    ...			src_mac=${src_mac}  dst_mac=${dst_mac}  vlan_id=${vlan_id}  no_arp=True
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  L3  ipv6
    
20_BiDirectional basic IPv6 L3 Traffic with defaults and no_arp
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_cnt=${frame_cnt}  frame_rate=${frame_rate}  ethertype=86dd  no_arp=True  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  L3  ipv6

21_BiDirectional IPv6 L3 Traffic with more args and TCP
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_cnt=${frame_cnt}  frame_rate=${frame_rate}  ethertype=86dd
    ...			src_mac=${src_mac}  dst_mac=${dst_mac}  protocol=TCP  src_port=8001  dst_port=8002
    ...			src_ip=2001:2004:0:0:0:0:0:c4  src_gw=2001:2004:0:0:0:0:0:c5  dst_ip=2001:2004:0:0:0:0:0:c5  dst_gw=2001:2004:0:0:0:0:0:c4
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  L3  ipv6

22_UniDirectional IPv6 L3 Traffic with ICMP 
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_cnt=${frame_cnt}  frame_rate=${frame_rate}  ethertype=86dd
    ...			src_mac=${src_mac}  dst_mac=${dst_mac}  protocol=ICMP  type=0  code=0
    ...			src_ip=2001:2004:0:0:0:0:0:c4  src_gw=2001:2004:0:0:0:0:0:c5  dst_ip=2001:2004:0:0:0:0:0:c5  dst_gw=2001:2004:0:0:0:0:0:c4
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  L3  skipped
    
23_Bi-Driectional L3 Traffic with vlan_id
# Basic test case with all default values and etherytype 8100, with vlan id
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  vlan_id=${vlan_id}  frame_size=${frame_size}  
    ...			src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    clear stats
    [Tags]  traffic  bigtap  L3

24_Bi-Directional L3 Traffic with multiple vlan_ids
# Basic test case with all default values and etherytype 8100, with vlan id
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  vlan_id=${vlan_id}  frame_size=${frame_size}  vlan_cnt=200  vlan_step=10  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    clear stats
    [Tags]  traffic  bigtap  L3
    
25_Bi-Driectional L3 Traffic with vlan_id and crc
# Basic test case with all default values and etherytype 8100, with vlan id
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  ethertype=8100  vlan_id=${vlan_id}  frame_size=${frame_size}  crc=True  src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  L3  skipped

26_Bi-Directional L3 Traffic ICMP Echo
# Basic test case with all default values and ICMP type and value
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  protocol=ICMP  icmp_type=8  icmp_code=0  src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    clear stats
    start traffic  ${stream}
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3

27_Bi-Driectional L3 Traffic with differnt ethertypes and streams
# Basic test case with all default values and etherytype 8100, with vlan id
	${stream1}=  L3 add  flow=a->b  frame_rate=1000  frame_size=128  frame_cnt=10000
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a_b_flow
    ${stream2}=  L3 add  flow=a->b  frame_rate=1000  frame_size=128  frame_cnt=10000
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0806  name=a1_b_flow
    ${stream3}=  L3 add  flow=a->b  frame_rate=1000  frame_size=128  frame_cnt=10000
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8847  name=a2_b_flow
    ${stream4}=  L3 add  flow=a->b  frame_rate=1000  frame_size=128  frame_cnt=10000
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  name=a3_b_flow
    ${stream5}=  L3 add  flow=a->b  frame_rate=1000  frame_size=128  frame_cnt=10000
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a4_b_flow
    clear stats
    start traffic
    sleep                  ${sleep_time}
    stop traffic
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream1}
    verify results  transmitted_frames  received_frames  ${stream1}  ${stream_name}
    [Tags]  traffic  L3  ipv6
 
28_Bi-Directional L3 Traffic ICMP Echo with traffic learn
# Basic test case with all default values and ICMP type and value
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  protocol=ICMP  icmp_type=8  icmp_code=0  src_mac=${src_mac}  dst_mac=${dst_mac}
    clear stats
    start traffic  ${stream}  learn=True
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  sanity  bigtap  L3

29_Verify L3 ICMP traffic
    ${stream}=  L3 add  flow=a<->b  frame_size=1518   frame_rate=10000
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}
    ...     protocol=ICMP  icmp_type=8  icmp_code=0
    ...     src_ip=${src_ip}   dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${dst_ip}   dst_gw=${src_ip}
    clear stats  
    start traffic  ${stream}
    sleep  5
    verify results  transmitted_frame_rate  received_frame_rate  ${stream}  ${stream_name}
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    sleep  5    
    stop traffic   ${stream} 
    [Tags]  traffic  L3
    
30_Bi-Directional L3 Traffic with different Hosts in differnt Vlans and networks
# Basic test case with all default values and ICMP type and value
    ${stream}=             L3 add  name=${stream_name}  flow=a<->b  src_mac=${src_mac}  dst_mac=${dst_mac}
    ...						src_cnt=${src_cnt}  dst_cnt=${dst_cnt}  src_ip=20.0.0.1  dst_ip=20.0.0.2
    ...						src_ip_step=0.0.1.0  dst_ip_step=0.0.1.0  src_gw=20.0.0.2  src_gw_step=0.0.1.0
    ...						dst_gw=20.0.0.1  dst_gw_step=0.0.1.0  vlan_id=2  vlan_cnt=${src_cnt}
    clear stats
    start traffic  ${stream}  learn=True
    sleep                  ${sleep_time}
    stop traffic   ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats  stream=${stream}
    verify results  transmitted_frames  received_frames  ${stream}  ${stream_name}
    [Tags]  traffic  bigtap  L3

31_Basic L3 Add Hosts and Stop Hosts with chk Arp Resolution for Gateways
	${H1}=  L3 add host  src_ip=${src_ip}  gw_ip=${dst_ip}  port_name=a
	${H2}=  L3 add host  src_ip=${dst_ip}  gw_ip=${src_ip}  port_name=b
	L3 start hosts  port_name=a
	L3 start hosts  port_name=b
	#pause
	${result}=  L3 chk gw arp
	should be true  ${result}
	[Tags]  traffic  L3

32_BiDirectional L3 Traffic with TCP and custom Payload is always no ARP
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_rate=${frame_size}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  protocol=TCP  src_port=8001  dst_port=8002
    ...     src_ip=100.1.1.1  src_gw=100.1.1.2  dst_ip=100.1.1.2  dst_gw=100.1.1.1  payload=2000000000000064
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    [Tags]  traffic  sanity  bigtap    L3
    
33_BiDirectional L3 Traffic with TCP and custom Payload with control Bits
    ${stream}=  L3 add  name=${stream_name}  flow=a<->b  frame_rate=${frame_size}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
    ...     src_mac=${src_mac}  dst_mac=${dst_mac}  protocol=TCP  src_port=8001  dst_port=8002  synBit=1  ackBit=1
    ...     src_ip=100.1.1.1  src_gw=100.1.1.2  dst_ip=100.1.1.2  dst_gw=100.1.1.1  payload=2000000000000064
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    [Tags]  traffic  sanity  bigtap  L3

34_IXIA_RAW_STREAM_LACP with just the lacp_src_mac
	${stream}=  raw stream add  name=${stream_name}  flow=a->b  lacp=True  lacp_src_mac=00:00:99:99:88:99
	${stream1}=  raw stream add  name=b_a_flow  flow=a<-b  lacp=True  lacp_src_mac=00:00:99:99:99:99
	clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    start traffic  ${stream1}
    sleep  ${sleep_time}
    stop traffic  ${stream1}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    [Tags]  traffic  lacp
    
35_IXIA_RAW_STREAM_LLDP with just the LLDP HEADER
	${stream}=  raw stream add  name=${stream_name}  flow=a->b  lldp=True  src_mac=00:00:99:99:88:99
	${stream1}=  raw stream add  name=b_a_flow  flow=a<-b  lldp=True  src_mac=00:00:99:99:99:99
	clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    sleep                  ${sleep_time}
    start traffic  ${stream1}
    sleep  ${sleep_time}
    stop traffic  ${stream1}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    [Tags]  traffic  

35_IXIA_RAW_STREAM_LACP with just the lacp_src_mac and different src_mac
	${stream}=  raw stream add  name=${stream_name}  flow=a->b  lacp=True  lacp_src_mac=00:00:99:99:88:99  src_cnt=100  src_mac_step=00:00:00:00:00:02
	clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    [Tags]  traffic  lacp
36_IXIA_RAW_add with only src_mac count
	${stream}=  raw_stream_add  name=L3_2  flow=a->b    frame_cnt=1000    frame_rate=100   frame_size=128
    ...	src_ip=100.0.0.2  src_mac=00:00:12:12:12:01
    ...	dst_ip=100.1.0.3  dst_mac=5c:16:c7:01:00:14   dst_mac_cnt=10   dst_ip_step=0.0.0.1  dst_ip_cnt=10
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    stop traffic  ${stream}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    [Tags]  traffic

37_IXIA_L3_Add with IP SrC and DST Increment
	${stream}=  L3 add  flow=a->b  frame_rate=${frame_rate}  frame_size=${frame_size}  frame_cnt=${frame_cnt}  no_arp=True   name=a0_c_flow
    ...     src_mac=${src_mac}  src_mac_step=00:00:00:00:00:00
    ...     src_ip=100.1.1.1  src_ip_step=0.0.0.1  src_cnt=28  src_gw_prefix=24  src_gw=100.2.1.1  src_gw_step=0.0.0.0
    ...     dst_mac=${dst_mac}  dst_mac_step=00:00:00:00:00:00
    ...     dst_ip=100.2.1.1  dst_ip_step=0.0.0.0  dst_cnt=1  dst_gw_prefix=24  dst_gw=100.1.1.1  dst_gw_step=0.0.0.0
	clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate    
    stop traffic  ${stream}
	[Tags]

38_IXIA_L2_ADD with Ethertype increment

	 ${stream}=  L2 add  name=atoc  flow=a->b  src_mac=${src_mac}  src_cnt=1  src_mac_step=00:00:00:00:00:00
    ...  dst_mac=${dst_mac}  dst_cnt=1  dst_mac_step=00:00:00:00:00:00
    ...  ethertype=800  ethertype_cnt=28  ethertype_step=2
    ...  frame_rate=${frame_rate}  frame_size=${frame_size}  frame_cnt=${frame_cnt}
	pause
	clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate    
    stop traffic  ${stream}
	[Tags]

39_Ixia_Simulate Port Status up or Down and chk the port state
	simulate port state  port_name=a  action=down
	sleep  2
	${result}=  get_port_state  port_name=a  state=down
	Should contain  ${result}  down
	[Tags]  simulate
	
40_IXIA_RAW_add with MPLS Label
	${stream}=  raw_stream_add  name=L3_2  flow=a->b  frame_rate=100   frame_size=128  mpls_label=99
    ...	src_ip=100.0.0.2  src_mac=00:00:12:12:12:01
    ...	dst_ip=100.1.0.3  dst_mac=5c:16:c7:01:00:14
    #pause
    clear stats
    start traffic  ${stream}
    sleep  ${sleep_time}
    ${report}=             fetch port stats
    verify results1  a  transmitted_frame_rate  b  received_valid_frame_rate
    stop traffic  ${stream}
    [Tags]  traffic  

41_Basic L3 Add Hosts with VLAN ID and vlan step and Stop Hosts with chk Arp Resolution for Gateways
	${Hosts}=  L3 add host   src_ip=30.0.0.2  src_ip_step=0.0.1.0  gw_ip=30.0.0.1  src_gw_step=0.0.1.0  port_name=a  
	    ...    src_mac=00:70:03:00:01:01   src_mac_step=00:00:00:00:01:00  s_cnt=3000  ip_type=ipv4  vlan_id=1  vlan_step=1
	pause
	L3 start hosts  port_name=a
	${result}=  L3 chk gw arp
	should be true  ${result}
	[Tags]  traffic  L3 	run
*Keywords
atest teardown
	delete traffic
verify results   [Arguments]  ${transmitted_frames}  ${received_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report}=  fetch port stats  stream=${stream}  
    ${tx_value}=  verify dict key  ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${stream_name}  ${received_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}
    Should be true  ${in_range}
verify results1   [Arguments]  ${port_1}  ${transmitted_frames}  ${port_2}  ${received_frames}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${port_1}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${port_2}  ${received_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}
    Should be true  ${in_range} 
