* Settings
Documentation   	Test suite with tests to configure tenants. The tests have
...             	a workflow that is created using keywords from the resource file.
Suite Setup  		config suite setup
Suite Teardown  	config suite teardown
Force Tags      	GUI BCF Ironhorse
Library         	keywords/BsnCommon.py
Library        		keywords/BsnSelenium.py
Library        		SeleniumLibrary
Resource        	bcf_resource.txt
Library       		String



*Test Case
## Create logical segments		tenant-name	 ls-name	port-group		switch-name		interface	endpoint-name	attachment-type		endp-port-group	 switch 		interface	mac-addr	ip-addr
T1 Set up		
	Create Tenant		tenant1					Tenant name with description 							
	Provision Switch	00:0a:99:03:22:33		switch-leaf1	Leaf		leaf-group1
	Provision Switch	00:aa:19:33:42:33		switch-leaf2	Leaf		leaf-group2 
	Config  			master  switch switch-leaf1; interface ethernet1; interface ethernet2; interface ethernet3; interface ethernet4; interface ethernet5			
	Config  			master  switch switch-leaf2; interface ethernet1; interface ethernet2; interface ethernet3; interface ethernet4; interface ethernet5					
    Create Port Group	port-group-1			Static			leaf-group1
    Create Port Group	port-group-2			Static			leaf-group2
    Create Port Group	port-group-3			Static			leaf-group1	
    Create Port Group	port-group-4			Static			leaf-group2
    Create Port Group	port-group-5			Static			leaf-group1	
    Create Port Group	port-group-6			Static			leaf-group2
    Create Port Group	port-group-7			Static			leaf-group2


T1.1 Create Logical Segments with Port group as an attachment point and same port group in segment endpoint
	Create Logical Segments		tenant1		log-seg1	port-group-1	switch-leaf1	ethernet1		end-pt1		Port Group			port-group-1	${EMPTY}		${EMPTY}	00:02:03:22:ff:0f	10.0.1.6
T1.2 Create Logical Segments with Port group as an attachment point and different port group in segment endpoint
	Create Logical Segments		tenant1		log-seg2	port-group-2	switch-leaf1	ethernet2		end-pt2		Port Group			port-group-3	${EMPTY}		${EMPTY}	${EMPTY}			10.0.1.7			    
T1.3 Create Logical Segments with no attachment point
	Create Logical Segments		tenant1		log-seg3	port-group-4	switch-leaf2	ethernet1		end-pt3		None				${EMPTY}		${EMPTY}		${EMPTY}	00:02:03:02:08:0f	10.2.3.4			
T1.4 Create Logical Segments with Switch Port as an attachment point and same switch in segment point
	Create Logical Segments		tenant1		log-seg4	port-group-5	switch-leaf1	ethernet3		end-pt4		Switch Port			${EMPTY}		switch-leaf1	ethernet5	00:22:0f:01:08:ff	10.0.0.0			
T1.5 Create Logical Segments with Switch Port as an attachment point and different switch in segment point
	Create Logical Segments		tenant1		log-seg5	port-group-6	switch-leaf1	ethernet4		end-pt5		Switch Port			${EMPTY}		switch-leaf2	ethernet3	${EMPTY}			10.2.2.2			
T1.6 Create Logical Segments with Switch Port as an attachment point and no switch in endpoint
	Create Logical Segments		tenant1		log-seg6	port-group-7	switch-leaf2	ethernet4		end-pt6		Switch Port			${EMPTY}		${EMPTY}		${EMPTY}	${EMPTY}			10.12.20.24			

#### Create Logical Segment Interface		ls-name		status		ip				mask		pub/pri		dhcp-relay		server-ip
T2.1 Create Logical Segment Interface with public address
	Create Logical Segment Interface		tenant1		log-seg1	Shutdown	10.2.3.4		24			Public		Disabled		${EMPTY}
T2.2 Create Logical Segment Interface with Active status
	Create Logical Segment Interface		tenant1		log-seg2	Active		100.2.24.4		25			Public		Disabled		${EMPTY}
T2.3 Create Logical Segment Interface with private address
	Create Logical Segment Interface		tenant1		log-seg3	Active		2.5.30.90		28			Private		Disabled		10.90.34.56
T2.4 Create Logical Segment Interface with DHCP Relay Enabled
	Create Logical Segment Interface		tenant1		log-seg4	Shutdown	10.12.13.14		24			Public		Enabled			2.2.2.2
T2.5 Create Logical Segment Interface with DHCP Relay Enabled and private address
	Create Logical Segment Interface		tenant1		log-seg5	Active		10.20.30.40		24			Private		Enabled			3.3.3.3
T2.6 Create Logical Segment Interface with null values in IP
	Create Logical Segment Interface		tenant1		log-seg6	Active		${EMPTY}		${EMPTY}	${EMPTY}	Enabled			4.0.0.4

### Next Hop
T3.1 Create Next Hop group ng-1
    Create Next Hop group  tenant1		ng-1			1.2.3.4
T3.2 Create Next Hop group ng_2
    Create Next Hop group  tenant1		ng_2			11.2.33.40
T3.3 Create Next Hop group NEXT-HOP3
    Create Next Hop group  tenant1		NEXT-HOP3		10.2.31.14
T3.4 Create Next Hop group Next.Hop4
    Create Next Hop group  tenant1		Next.Hop4		100.20.30.4
    
#### Logical Router Routes				tenant-name		dst-subnet		mask		next-hop		nxt-hop-group-name
T4.1 Create Logical Router Routes with none as next hop
	Create Logical Router Routes 		tenant1			1.2.3.4			18			None	 			${EMPTY}
T4.2 Create Logical Router Routes with System Tenant as next hop
	Create Logical Router Routes 		tenant1			2.2.2.2			24			System Tenant	 	${EMPTY}
T4.3 Create Logical Router Routes with Next Hop Group ng1 as next hop
	Create Logical Router Routes 		tenant1			3.4.56.78		14			Next Hop Group	 	ng-1
T4.4 Create Logical Router Routes with previous next hop group ng1 as next hop
	Create Logical Router Routes 		tenant1			1.2.3.4			16			Next Hop Group	 	ng-1

T5.1 Delete All Port Groups 
	Delete All Port Groups
T5.2 Delete All Tenants
	Delete All Tenants

			
* Keyword
config suite setup
    base suite setup
	${c1_ip}=            get node ip   master
    set suite variable  ${SERVER}  ${c1_ip}
    Set URLs
    #Start Selenium Server  -trustAllSSLCertificates
    #CLI Start Mininet Server  tree,3
    #Rest Open GUI Port
    Open Browser To Login Page
    Valid Login  admin  adminadmin
    #Config  master  switch switch-11; interface ethernet1; interface ethernet2; interface ethernet3
    
	
config suite teardown
	Clear Switch Config				switch-leaf1
	Clear Switch Config				switch-leaf2
	Close Browser
    #Stop Selenium Server
    base suite teardown