* Setting
Documentation   Openstack setup
#Suite Setup     base suite setup
#Suite Teardown  base suite teardown
#Test Setup      base test setup
#Test Teardown   teardown topology
#Force Tags      T5 Sanity
Library         keywords_dev/slim/Openstack.py


* Variable
${adminUserName}	admin
${adminTenant}		admin
${adminPassWord}	bsn
${authUrl}			http://10.193.0.180:5000/v2.0/
${imageName}		Ubuntu-Saucy
${diskFormat}		qcow2
${tenant1Name}		Tenant1
${tenant1User}		user1
${tenantPassword}	bsn
${tenant1Router}	Tenant1-Router
${userEmail}		users@tenant.com
${userRole}			Member
${instanceName}		T1-NW-1-Host-1
${hostName}			TJ-XZ
${subnetName}		470fbbce-26e0-464b-9e21-f888a852db04
${networkName}		Tenant1-Network-1
${flavorName}		m1.micro
${flavorId}			100
${flavorMemSize}	256
${flavorVCpu}		1
${flavorDisk}		0
${imageLocation}		http://cloud-images.ubuntu.com/saucy/current/saucy-server-cloudimg-amd64-disk1.img
${extNetIP}			10.193.0.0
${extNetMask}		24
${tenant1Network}	10.10.1.0/24
${dnsList}			10.192.3.1
${instanceName}		T1-XX



* Test Case
Get Ubuntu saucy Image ID 
	[Tags]						skipped	
	Set Global Variable 	${ubuntuImageId}=	openstack get image id		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}	${imageName}
	${t1RouterId}=		openstack get router id		${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}	${tenant1Router}
	: for				${x}  						in range  			1  				5
	\	${user}=		Set Variable  				user${x}
	\	${tenant}=		Set Variable 				tenant${x}
	\	${tenantRouter}=		Set Variable 		Tenant${x}-Router
	\	${routerId}= 	openstack get router id		${user}				${tenant}		${tenantPassword}	${authUrl}	${tenantRouter}

Get VM status
	[Tags]						skipped	
#	${ubuntuImageId}=	openstack get image id		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}	${imageName}
	${subnetId}=		openstack get subnet id		${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}	${subnetName}
	${netId}= 			openstack get nw id			${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}	${networkName}
	${instanceId}=	openstack create instance	${tenant1User}		${tenant1Name}		${tenantPassword}	${authUrl}	 	${ubuntuImageId} 	${flavorId}		${hostName} 	${netId} 	t1
	sleep 			10
	${status}= 		openstack get instance status	${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		${instanceId}
	
Create Project, users and VM
	[Tags]		
	${result}=	openstack get flavor id 	${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}	 	${flavorName}
	${ImageId}=		Run Keyword If 	${result} == False		openstack create image		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}	 	${imageName} 		${diskFormat}		${imageLocation}
		
	
	openstack create flavor		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}	 	${flavorName}	${flavorId}	${flavorMemSize}	 ${flavorDisk}	 ${flavorVCpu}
	
	sleep				5
	${adminTenandId}=	openstack get tenant id		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}		${adminTenant}
	${extNetId}=		openstack create net		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl} 		${adminTenandId}	${adminTenant} 		Ext		True
	${extSubnetId}=		openstack create subnet		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}  	${adminTenandId}	${adminTenant}		Ext		${extNetIP}		${extNetMask}	 ${dnsList}
	sleep				1
	${tenantId}=		openstack create tenant		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl} 		${tenant1Name}
	sleep				1
	${userId}=			openstack create user		${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl}		${tenant1User}	 	${tenantPassword} 	${tenant1Name}	${userEmail}
	sleep				1
	openstack set user role							${adminUserName}	${adminTenant}	${adminPassWord}	${authUrl} 		${tenant1User}	 	${userRole}		 	${tenant1Name}
	${tenantRouterId}=	openstack create router		${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		${tenantId}	 		${tenant1Name}
	sleep 				1
	openstack set router gw							${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		${tenantRouterId}	${extNetId}
	${tenant1NwId}=			openstack create net		${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		${tenantId}			${tenant1Name} 		1	False
	${tenantSubnetId}=		openstack create subnet		${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}  	${tenantId}			${tenant1Name}		1	${tenant1Network}		${extNetMask}	 
	openstack attach subnet to router					${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		${tenantRouterId} 	${tenantSubnetId}
	openstack gen keypair								${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		U1 	/root/.ssh/U1.pem
	openstack secgroup permit all				${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		default
	sleep 	1
	${instanceId}=			openstack create instance	${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}	${ImageId}	 ${flavorId}	 ${instanceName}	 ${tenantSubnetId}	U1
	sleep 	10
	${status}= 		openstack get instance status	${tenant1User}		${tenant1Name}	${tenantPassword}	${authUrl}		${instanceId}
	
	
	
	
		