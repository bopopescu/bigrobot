* Setting
Documentation   T5 Basic L3 two spine three leaf rack with dual-tor Test Suite
Suite Setup     T5 base suite setup
Suite Teardown  T5 base suite teardown
Test Setup      setup topology
Test Teardown   teardown topology
Force Tags      T5 Sanity
Library         keywords/Host.py
Library         keywords/BsnCommon.py
Library         keywords/T5.py
Library         keywords/T5L3.py
Library         keywords/T5Platform.py
Library         keywords/BsnCommon.py
Library         keywords/SwitchLight.py
Library	        Collections.py
Library         keywords/Ixia.py
Library         keywords/Host.py
Resource		testsuites_dev/slim/T5_L3_datacenter/t5_layer3_dc_variables.txt
Resource		testsuites_dev/slim/T5_L3_datacenter/t5_layer3_dc_resources.txt


* Test Cases
L3 intra tenant same rack untagged with dynamic endpoints via dhcp-relay
	L3 intra tenant same rack untagged with dynamic endpoints via dhcp-relay
	[Tags]									smoke				sanity				run1

L3 intra tenant across rack untagged with dynamic endpoints via dhcp-relay
    L3 intra tenant across rack untagged with dynamic endpoints via dhcp-relay
    [Tags]                                  smoke               sanity              run2

L3 intra tenant same rack tagged with dynamic endpoints via dhcp-relay
    L3 intra tenant same rack tagged with dynamic endpoints via dhcp-relay
    [Tags]                                  smoke               sanity              run3
    
L3 intra tenant across rack tagged with dynamic endpoints via dhcp-relay
    L3 intra tenant across rack tagged with dynamic endpoints via dhcp-relay   
    [Tags]                                  smoke               sanity              run4

L3 inter tenant same rack untagged with dynamic endpoints via dhcp-relay
    L3 intra tenant same rack untagged with dynamic endpoints via dhcp-relay
    [Tags]                                  smoke               sanity              run5

L3 inter tenant across rack untagged with dynamic endpoints via dhcp-relay
    L3 intra tenant across rack untagged with dynamic endpoints via dhcp-relay
    [Tags]                                  smoke               sanity              run6

L3 inter tenant same rack tagged with dynamic endpoints via dhcp-relay
    L3 intra tenant same rack tagged with dynamic endpoints via dhcp-relay
    [Tags]                                  smoke               sanity              run7
    
L3 inter tenant across rack tagged with dynamic endpoints via dhcp-relay
    L3 intra tenant across rack tagged with dynamic endpoints via dhcp-relay   
    [Tags]                                  smoke               sanity              run8
    
L3 intra tenant ecmp group in same rack
    L3 intra tenant ecmp group in same rack
    [Tags]                                  smoke               sanity              run9
    
Controller HA failover with L3 intra tenant across rack tagged with dhcp-relay
    Controller HA failover with L3 intra tenant across rack tagged with dhcp-relay
    [Tags]                                  smoke               sanity              run10
    
    
Controller HA failover with L3 inter tenant across rack tagged with dhcp-relay
    Controller HA failover with L3 inter tenant across rack tagged with dhcp-relay
    [Tags]                                  smoke               sanity              run11
    
    
            
        
* Keywords
L3 intra tenant same rack untagged with dynamic endpoints via dhcp-relay
    ${value} =                                  REST enable endpoint flap protection
    Log                                         ${value}
    REST add portgroup to vns                   X                               X1                              leaf0-pc1           -1
    REST add portgroup to vns                   X                               X2                              leaf0-pc2           -1   
    REST add dhcp relay                         X                               X2                              10.251.1.9
    REST add dhcprelay circuitid                X                               X2                              10.251.1.9              private vns X2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns X2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.251.2.1
    BASH ifup intf                              h1-rack0                        bond0
    BASH ifup intf                              h2-rack0                        bond0
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0
    sleep                                       1
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    BASH add route                              h1-rack0                        10.251.2.0/24           10.251.1.1
    BASH add route                              h1-rack0                        10.251.3.0/24           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack0                bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack0                bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack0                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack0                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    

L3 intra tenant across rack untagged with dynamic endpoints via dhcp-relay
    REST add portgroup to vns                   X                               X1          leaf0-pc1           -1
    REST add portgroup to vns                   X                               X2          leaf1-pc2           -1   
    REST add dhcp relay                         X                               X2                      10.251.1.9
    REST add dhcprelay circuitid                X                               X2                      10.251.1.9              private vns X2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns X2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.251.2.1
    BASH ifup intf                              h1-rack0                        bond0
    BASH ifup intf                              h2-rack1                        bond0
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0
    sleep                                       1
    BASH add route                              h1-rack0                        10.251.2.0/24           10.251.1.1
    BASH add route                              h1-rack0                        10.251.3.0/24           10.251.1.1
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack1                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    

L3 intra tenant same rack tagged with dynamic endpoints via dhcp-relay
    ${value} =                                  REST enable endpoint flap protection
    Log                                         ${value}
    REST add portgroup to vns                   X                               X1                      leaf0-pc1               1001
    REST add portgroup to vns                   X                               X2                      leaf0-pc2               1002 
    REST add dhcp relay                         X                               X2                      10.251.1.9
    REST add dhcprelay circuitid                X                               X2                      10.251.1.9              private vns X2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns X2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.251.2.1
    BASH add tag                                h1-rack0                        bond0                   1001
    BASH add tag                                h2-rack0                        bond0                   1002
    BASH ifup intf                              h1-rack0                        bond0.1001
    BASH ifup intf                              h2-rack0                        bond0.1002
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0.1001
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.251.2.0/24           10.251.1.1
    BASH add route                              h1-rack0                        10.251.3.0/24           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack0                bond0.1002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack0                bond0.1002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack0                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack0                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    

L3 intra tenant across rack tagged with dynamic endpoints via dhcp-relay
    REST add portgroup to vns                   X                               X1          leaf0-pc1           1001
    REST add portgroup to vns                   X                               X2          leaf1-pc2           2002 
    REST add dhcp relay                         X                               X2                      10.251.1.9
    REST add dhcprelay circuitid                X                               X2                      10.251.1.9              private vns X2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns X2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.251.2.1
    BASH add tag                                h1-rack0                        bond0                   1001
    BASH add tag                                h2-rack1                        bond0                   2002
    BASH ifup intf                              h1-rack0                        bond0.1001
    BASH ifup intf                              h2-rack1                        bond0.2002
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0.1001
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.251.2.0/24           10.251.1.1
    BASH add route                              h1-rack0                        10.251.3.0/24           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0.2002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0.2002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack1                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack1                      bond0.2002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    

L3 inter tenant same rack untagged with dynamic endpoints via dhcp-relay
    ${value} =                                  REST enable endpoint flap protection
    Log                                         ${value}
    REST add portgroup to vns                   X                               X1          leaf0-pc1           -1
    REST add portgroup to vns                   Y                               Y2          leaf0-pc2           -1   
    REST add dhcp relay                         Y                               Y2                      10.251.1.9
    REST add dhcprelay circuitid                Y                               Y2                      10.251.1.9              private vns Y2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns Y2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.252.2.1
    BASH ifup intf                              h1-rack0                        bond0
    BASH ifup intf                              h2-rack0                        bond0
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.252.0.0/16           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack0                bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack0                bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack0                10.252.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack0                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    

L3 inter tenant across rack untagged with dynamic endpoints via dhcp-relay
    REST add portgroup to vns                   X                               X1                          leaf0-pc1           -1
    REST add portgroup to vns                   Y                               Y3                          leaf1-pc2           -1   
    REST add dhcp relay                         Y                               Y3                          10.251.1.9
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.252.3.1
    BASH ifup intf                              h1-rack0                        bond0
    BASH ifup intf                              h2-rack1                        bond0
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24               bond0
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.252.0.0/16               10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                    bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                    bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}                   count=10
    ${value} =                                  BASH verify arp                 h1-rack0                    10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack1                    10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    


L3 inter tenant same rack tagged with dynamic endpoints via dhcp-relay
    ${value} =                                  REST enable endpoint flap protection
    Log                                         ${value}
    REST add portgroup to vns                   X                               X1                      leaf0-pc1               1001
    REST add portgroup to vns                   Y                               Y2                      leaf0-pc2               1002 
    REST add dhcp relay                         Y                               Y2                      10.251.1.9
    REST add dhcprelay circuitid                Y                               Y2                      10.251.1.9              private vns Y2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns Y2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.251.2.1
    BASH add tag                                h1-rack0                        bond0                   1001
    BASH add tag                                h2-rack0                        bond0                   1002
    BASH ifup intf                              h1-rack0                        bond0.1001
    BASH ifup intf                              h2-rack0                        bond0.1002
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0.1001
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.252.0.0/16           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack0                bond0.1002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack0                bond0.1002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack0                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack0                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    

L3 inter tenant across rack tagged with dynamic endpoints via dhcp-relay
    REST add portgroup to vns                   X                               X1                      leaf0-pc1           1001
    REST add portgroup to vns                   Y                               Y3                      leaf1-pc2           2002 
    REST add dhcp relay                         Y                               Y3                      10.251.1.9
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.252.3.1
    BASH add tag                                h1-rack0                        bond0                   1001
    BASH add tag                                h2-rack1                        bond0                   2002
    BASH ifup intf                              h1-rack0                        bond0.1001
    BASH ifup intf                              h2-rack1                        bond0.2002
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0.1001
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.252.0.0/16           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0.2002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0.2002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack1                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack1                      bond0.2002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    

L3 intra tenant ecmp group in same rack
    REST delete interface from vns                  Z                               Z192                    leaf2-a         ethernet33          -1               
    REST add interface to vns                       External                        external-vrrp           leaf2-a         ethernet33          -1
    sleep                                           1
    ${stream1}=                                     L3 add                          name=stream1            flow=a->h               frame_rate=100000           frame_size=9216             frame_cnt=10000000
    ...                                             src_ip=10.99.255.101            src_cnt=100             src_ip_step=0.0.0.1     src_gw=10.99.255.1      
    ...                                             dst_ip=10.99.99.101             dst_cnt=100             dst_ip_step=0.0.0.1     dst_gw=10.99.99.5      
    sleep                                           1             
    start traffic                                   ${stream1}
    sleep                                           10
    stop traffic                                    ${stream1}
    verify results                                  transmitted_frames              received_frames         ${stream1}              stream1


Controller HA failover with L3 intra tenant across rack tagged with dhcp-relay
    REST add portgroup to vns                   X                               X1          leaf0-pc1           1001
    REST add portgroup to vns                   X                               X2          leaf1-pc2           2002 
    REST add dhcp relay                         X                               X2                      10.251.1.9
    REST add dhcprelay circuitid                X                               X2                      10.251.1.9              private vns X2
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${circuitid}                    private vns X2
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.251.2.1
    BASH add tag                                h1-rack0                        bond0                   1001
    BASH add tag                                h2-rack1                        bond0                   2002
    BASH ifup intf                              h1-rack0                        bond0.1001
    BASH ifup intf                              h2-rack1                        bond0.2002
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0.1001
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.251.2.0/24           10.251.1.1
    BASH add route                              h1-rack0                        10.251.3.0/24           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0.2002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0.2002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack1                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack1                      bond0.2002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       10
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0.2002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0.2002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    


Controller HA failover with L3 inter tenant across rack tagged with dhcp-relay
    REST add portgroup to vns                   X                               X1                      leaf0-pc1           1001
    REST add portgroup to vns                   Y                               Y3                      leaf1-pc2           2002 
    REST add dhcp relay                         Y                               Y3                      10.251.1.9
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Be Equal                             ${dhcpip}                       10.251.1.9
    Should Be Equal                             ${routerip}                     10.252.3.1
    BASH add tag                                h1-rack0                        bond0                   1001
    BASH add tag                                h2-rack1                        bond0                   2002
    BASH ifup intf                              h1-rack0                        bond0.1001
    BASH ifup intf                              h2-rack1                        bond0.2002
    BASH ifconfig ip address                    h1-rack0                        10.251.1.9/24           bond0.1001
    BASH start service                          h1-rack0                        isc-dhcp-server
    ${value} =                                  BASH check service status       h1-rack0                        isc-dhcp-server    
    sleep                                       1
    BASH add route                              h1-rack0                        10.252.0.0/16           10.251.1.1
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0.2002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0.2002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1-rack0                        ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1-rack0                10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2-rack1                10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1-rack0                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2-rack1                      bond0.2002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       10
    ${value} =                                  BASH release dhcpv4 address     h2-rack1                bond0.2002
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2-rack1                bond0.2002
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1-rack0                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    



    
initialize host
    BASH run command                                h1-rack0                                ifdown bond0
    BASH run command                                h2-rack0                                ifdown bond0
    BASH run command                                h3-rack0                                ifdown bond0
    BASH run command                                h1-rack1                                ifdown bond0
    BASH run command                                h2-rack1                                ifdown bond0
    BASH run command                                h3-rack1                                ifdown bond0
    BASH run command                                h1-rack2                                ifdown bond0
    BASH run command                                h2-rack2                                ifdown bond0
    BASH run command                                h3-rack2                                ifdown bond0
    sleep                                       1
    BASH run command                                h1-rack0                                ifup eth2
    BASH run command                                h1-rack0                                ifup eth3
    BASH run command                                h2-rack0                                ifup eth2
    BASH run command                                h2-rack0                                ifup eth3
    BASH run command                                h3-rack0                                ifup eth2
    BASH run command                                h3-rack0                                ifup eth3
    BASH run command                                h1-rack1                                ifup eth2
    BASH run command                                h1-rack1                                ifup eth3
    BASH run command                                h2-rack1                                ifup eth2
    BASH run command                                h2-rack1                                ifup eth3
    BASH run command                                h3-rack1                                ifup eth2
    BASH run command                                h3-rack1                                ifup eth3
    BASH run command                                h1-rack2                                ifup eth2
    BASH run command                                h1-rack2                                ifup eth3
    BASH run command                                h2-rack2                                ifup eth2
    BASH run command                                h2-rack2                                ifup eth3
    BASH run command                                h3-rack2                                ifup eth2
    BASH run command                                h3-rack2                                ifup eth3
      
	BASH ifup intf							    h1-rack0 								bond0
	BASH ifup intf							    h2-rack0								bond0
	BASH ifup intf							    h3-rack0								bond0
	BASH ifup intf							    h1-rack1								bond0
	BASH ifup intf							    h2-rack1								bond0
	BASH ifup intf							    h3-rack1								bond0
	BASH ifup intf                              h1-rack2                                bond0
    BASH ifup intf                              h2-rack2                                bond0
    BASH ifup intf                              h3-rack2                                bond0
    
    BASH init intf                              h1-rack0                                bond0
    BASH init intf                              h2-rack0                                bond0
    BASH init intf                              h3-rack0                                bond0
    BASH init intf                              h1-rack1                                bond0
    BASH init intf                              h2-rack1                                bond0
    BASH init intf                              h3-rack1                                bond0
    BASH init intf                              h1-rack2                                bond0
    BASH init intf                              h2-rack2                                bond0
    BASH init intf                              h3-rack2                                bond0
    BASH stop service                           h1-rack0                        isc-dhcp-server

setup topology
	initialize host
	REST add tenant								system
	REST add tenant                             External
	REST add tenant 							X
	REST add tenant								Y
	REST add tenant								Z
	REST add vns								X							X1
	REST add vns								X							X2
	REST add vns								X							X3
    REST add vns                                X                           X192
    REST add vns                                X                           X224
	REST add vns								Y							Y1
	REST add vns								Y							Y2
	REST add vns								Y							Y3
    REST add vns                                Y                           Y192
    REST add vns                                Y                           Y224
	REST add vns								Z							Z1
	REST add vns								Z							Z2
	REST add vns								Z						    Z3
    REST add vns                                Z                           Z192
    REST add vns                                Z                           Z224

	REST add vns								External				    Arista1-e13
	REST add vns								External				    Arista1-e14
    REST add vns                                External                    Arista1-e15
    REST add vns                                External                    Arista1-e16
    REST add vns                                External                    Arista1-e21
    REST add vns                                External                    Arista1-e22
    REST add vns                                External                    Arista1-e23
    REST add vns                                External                    Arista1-e24
    REST add vns                                External                    Arista1-e25
    REST add vns                                External                    Arista1-e26
	REST add vns                                External                    Arista1-e27
    REST add vns                                External                    Arista1-e28
	REST add vns                                External                    Arista1-e29
    REST add vns                                External                    Arista1-e30
    REST add vns                                External                    Arista1-pc1
    REST add vns                                External                    Arista1-pc2
    REST add vns                                External                    Arista1-pc3
    REST add vns                                External                    Arista1-pc4
    REST add vns                                External                    Arista1-pc5	
    REST add vns                                External                    Arista2-e13
    REST add vns                                External                    Arista2-e14
    REST add vns                                External                    Arista2-e15
    REST add vns                                External                    Arista2-e16
    REST add vns                                External                    Arista2-e21
    REST add vns                                External                    Arista2-e22
    REST add vns                                External                    Arista2-e23
    REST add vns                                External                    Arista2-e24
    REST add vns                                External                    Arista2-e25
    REST add vns                                External                    Arista2-e26
    REST add vns                                External                    Arista2-e27
    REST add vns                                External                    Arista2-e28
    REST add vns                                External                    Arista2-e29
    REST add vns                                External                    Arista2-e30
    REST add vns                                External                    Arista2-pc1
    REST add vns                                External                    Arista2-pc2
    REST add vns                                External                    Arista2-pc3
    REST add vns                                External                    Arista2-pc4
    REST add vns                                External                    Arista2-pc5  	
    REST add vns                                External                    external-vrrp
	REST add router intf							X							X1
	REST add router intf							X							X2
	REST add router intf							X							X3
	REST add router intf                            X                           X192
    REST add router intf                            X                           X224
    
	REST add router intf							Y							Y1
	REST add router intf							Y							Y2
	REST add router intf							Y							Y3
	REST add router intf                            Y                           Y192
    REST add router intf                            Y                           Y224
    
	REST add router intf							Z							Z1
	REST add router intf							Z							Z2
	REST add router intf							Z							Z3
	REST add router intf                            Z                           Z192
    REST add router intf                            Z                           Z224
    
    REST add router intf                                External                   Arista1-e13
    REST add router intf                                External                   Arista1-e14
    REST add router intf                                External                   Arista1-e15
    REST add router intf                                External                   Arista1-e16
    REST add router intf                                External                   Arista1-e21
    REST add router intf                                External                   Arista1-e22
    REST add router intf                                External                   Arista1-e23
    REST add router intf                                External                   Arista1-e24
    REST add router intf                                External                   Arista1-e25
    REST add router intf                                External                   Arista1-e26
    REST add router intf                                External                   Arista1-e27
    REST add router intf                                External                   Arista1-e28
    REST add router intf                                External                   Arista1-e29
    REST add router intf                                External                   Arista1-e30
    REST add router intf                                External                   Arista1-pc1
    REST add router intf                                External                   Arista1-pc2
    REST add router intf                                External                   Arista1-pc3
    REST add router intf                                External                   Arista1-pc4
    REST add router intf                                External                   Arista1-pc5  
    REST add router intf                                External                   Arista2-e13
    REST add router intf                                External                   Arista2-e14
    REST add router intf                                External                   Arista2-e15
    REST add router intf                                External                   Arista2-e16
    REST add router intf                                External                   Arista2-e21
    REST add router intf                                External                   Arista2-e22
    REST add router intf                                External                   Arista2-e23
    REST add router intf                                External                   Arista2-e24
    REST add router intf                                External                   Arista2-e25
    REST add router intf                                External                   Arista2-e26
    REST add router intf                                External                   Arista2-e27
    REST add router intf                                External                   Arista2-e28
    REST add router intf                                External                   Arista2-e29
    REST add router intf                                External                   Arista2-e30
    REST add router intf                                External                   Arista2-pc1
    REST add router intf                                External                   Arista2-pc2
    REST add router intf                                External                   Arista2-pc3
    REST add router intf                                External                   Arista2-pc4
    REST add router intf                                External                   Arista2-pc5      
    REST add router intf                                External                   external-vrrp
	REST add vns ip  								X							X1				10.251.1.1				24	
	REST add vns ip  								X							X2				10.251.2.1				24	
	REST add vns ip  								X							X3				10.251.3.1				24
	REST add vns ip                                 X                           X192            10.251.192.1            19
    REST add vns ip                                 X                           X224            10.251.224.1            19
	REST add vns ip  								Y							Y1				10.252.1.1				24	
	REST add vns ip  								Y							Y2				10.252.2.1				24	
	REST add vns ip  								Y							Y3				10.252.3.1				24	
    REST add vns ip                                 Y                           Y192            10.252.192.1            19
    REST add vns ip                                 Y                           Y224            10.252.224.1            19

	REST add vns ip  								Z							Z1				10.253.1.1				24	
	REST add vns ip  								Z							Z2				10.253.2.1				24	
	REST add vns ip  								Z							Z3				10.253.3.1				24	
    REST add vns ip                                 Z                           Z192            10.253.192.1            19
    REST add vns ip                                 Z                           Z224            10.253.224.1            19

    REST add vns ip             External                   Arista1-e13          10.99.13.2          24
    REST add vns ip             External                   Arista1-e14          10.99.14.2          24  
    REST add vns ip             External                   Arista1-e15          10.99.15.2          24
    REST add vns ip             External                   Arista1-e16          10.99.16.2          24
    REST add vns ip             External                   Arista1-e21          10.99.21.2          24
    REST add vns ip             External                   Arista1-e22          10.99.22.2          24    
    REST add vns ip             External                   Arista1-e23          10.99.23.2          24    
    REST add vns ip             External                   Arista1-e24          10.99.24.2          24    
    REST add vns ip             External                   Arista1-e25          10.99.25.2          24   
    REST add vns ip             External                   Arista1-e26          10.99.26.2          24    
    REST add vns ip             External                   Arista1-e27          10.99.27.2          24    
    REST add vns ip             External                   Arista1-e28          10.99.28.2          24    
    REST add vns ip             External                   Arista1-e29          10.99.29.2          24    
    REST add vns ip             External                   Arista1-e30          10.99.30.2          24    
    REST add vns ip             External                   Arista1-pc1          10.99.1.2           24    
    REST add vns ip             External                   Arista1-pc2          10.99.2.2           24        
    REST add vns ip             External                   Arista1-pc3          10.99.3.2           24          
    REST add vns ip             External                   Arista1-pc4          10.99.4.2           24    
    REST add vns ip             External                   Arista1-pc5          10.99.5.2           24            
    REST add vns ip             External                   Arista2-e13          10.98.13.2          24        
    REST add vns ip             External                   Arista2-e14          10.98.14.2          24    
    REST add vns ip             External                   Arista2-e15          10.98.15.2          24   
    REST add vns ip             External                   Arista2-e16          10.98.16.2          24    
    REST add vns ip             External                   Arista2-e21          10.98.21.2          24    
    REST add vns ip             External                   Arista2-e22          10.98.22.2          24    
    REST add vns ip             External                   Arista2-e23          10.98.23.2          24    
    REST add vns ip             External                   Arista2-e24          10.98.24.2          24    
    REST add vns ip             External                   Arista2-e25          10.98.25.2          24    
    REST add vns ip             External                   Arista2-e26          10.98.26.2          24    
    REST add vns ip             External                   Arista2-e27          10.98.27.2          24    
    REST add vns ip             External                   Arista2-e28          10.98.28.2          24    
    REST add vns ip             External                   Arista2-e29          10.98.29.2          24    
    REST add vns ip             External                   Arista2-e30          10.98.30.2          24    
    REST add vns ip             External                   Arista2-pc1          10.98.1.2           24    
    REST add vns ip             External                   Arista2-pc2          10.98.2.2           24         
    REST add vns ip             External                   Arista2-pc3          10.98.3.2           24        
    REST add vns ip             External                   Arista2-pc4          10.98.4.2           24        
    REST add vns ip             External                   Arista2-pc5          10.98.5.2           24              
    REST add vns ip             External                   external-vrrp        10.99.99.5          24   
	REST add nexthop group                          External                        ecmp-A1
    REST add nexthop group                          External                        ecmp-A16
    REST add nexthopGroup ip                        External                        ecmp-A1                 10.99.3.1
    REST add nexthopGroup ip                        External                        ecmp-A1                 10.99.5.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.21.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.22.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.23.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.24.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.25.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.26.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.27.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.98.28.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.21.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.22.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.23.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.24.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.25.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.26.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.27.1
    REST add nexthopGroup ip                        External                        ecmp-A16                10.99.28.1
	REST add static routes							External						10.98.0.0/24			{"next-hop-group": "ecmp-A1"}
	REST add static routes                          External                        10.99.255.0/24          {"next-hop-group": "ecmp-A16"}
    REST add interface to vns           External            Arista1-e13         leaf0-a     ethernet23      -1
    REST add interface to vns           External            Arista1-e14         leaf0-b     ethernet23      -1
    REST add interface to vns           External            Arista1-e15         leaf2-a     ethernet23      -1
    REST add interface to vns           External            Arista1-e16         leaf2-b     ethernet23      -1
    REST add interface to vns           External            Arista1-e21         leaf2-a     ethernet35      -1
    REST add interface to vns           External            Arista1-e22         leaf2-a     ethernet36      -1
    REST add interface to vns           External            Arista1-e23         leaf2-a     ethernet37      -1
    REST add interface to vns           External            Arista1-e24         leaf2-a     ethernet38      -1
    REST add interface to vns           External            Arista1-e25         leaf2-a     ethernet39      -1
    REST add interface to vns           External            Arista1-e26         leaf2-a     ethernet40      -1
    REST add interface to vns           External            Arista1-e27         leaf2-a     ethernet41      -1
    REST add interface to vns           External            Arista1-e28         leaf2-a     ethernet42      -1
    REST add interface to vns           External            Arista1-e29         leaf2-a     ethernet43      -1
    REST add interface to vns           External            Arista1-e30         leaf2-a     ethernet44      -1
    REST add portgroup to vns           External            Arista1-pc1         Arista1-pc1             -1
    REST add portgroup to vns           External            Arista1-pc2         Arista1-pc2             -1
    REST add portgroup to vns           External            Arista1-pc3         Arista1-pc3             -1
    REST add portgroup to vns           External            Arista1-pc4         Arista1-pc4             -1
    REST add portgroup to vns           External            Arista1-pc5         Arista1-pc5             -1
    REST add interface to vns           External            Arista2-e13         leaf1-a     ethernet23      -1
    REST add interface to vns           External            Arista2-e14         leaf1-a     ethernet15      -1
    REST add interface to vns           External            Arista2-e14         leaf1-b     ethernet23      -1
    REST add interface to vns           External            Arista2-e15         leaf0-a     ethernet24      -1
    REST add interface to vns           External            Arista2-e16         leaf0-b     ethernet24      -1
    REST add interface to vns           External            Arista2-e21         leaf2-b     ethernet35      -1
    REST add interface to vns           External            Arista2-e22         leaf2-b     ethernet36      -1
    REST add interface to vns           External            Arista2-e23         leaf2-b     ethernet37      -1
    REST add interface to vns           External            Arista2-e24         leaf2-b     ethernet38      -1
    REST add interface to vns           External            Arista2-e25         leaf2-b     ethernet39      -1
    REST add interface to vns           External            Arista2-e26         leaf2-b     ethernet40      -1
    REST add interface to vns           External            Arista2-e27         leaf2-b     ethernet41      -1
    REST add interface to vns           External            Arista2-e28         leaf2-b     ethernet42      -1
    REST add interface to vns           External            Arista2-e29         leaf2-b     ethernet43      -1
    REST add interface to vns           External            Arista2-e30         leaf2-b     ethernet44      -1
    REST add portgroup to vns           External            Arista2-pc1         Arista2-pc1             -1
    REST add portgroup to vns           External            Arista2-pc2         Arista2-pc2             -1
    REST add portgroup to vns           External            Arista2-pc3         Arista2-pc3             -1
    REST add portgroup to vns           External            Arista2-pc4         Arista2-pc4             -1
    REST add portgroup to vns           External            Arista2-pc5         Arista2-pc5             -1
    REST add interface to vns           External            external-vrrp       leaf1-a         ethernet31      -1
    REST add interface to vns           External            external-vrrp       leaf1-b         ethernet31      -1
    REST add interface to vns           External            external-vrrp       leaf2-b         ethernet31      -1
    # REST add portgroup to vns       X           X1          leaf0-pc1           -1
    # REST add portgroup to vns       X           X1          leaf1-pc1           -1
    # REST add interface to vns       X           X1          leaf1-a             ethernet33      1
    # REST add interface to vns       X           X1          leaf2-a             ethernet33      1
    # REST add interface to vns       X           X192        leaf0-a             ethernet33      -1
    # REST add portgroup to vns       X           X2          leaf0-pc2           -1
    # REST add portgroup to vns       X           X2          leaf1-pc3           -1
    # REST add interface to vns       X           X2          leaf1-a             ethernet33      2
    # REST add interface to vns       X           X2          leaf2-a             ethernet33      2
    # REST add interface to vns       X           X224        leaf0-b             ethernet33      -1
    # REST add interface to vns       X           X3          leaf1-a             ethernet33      3
    # REST add interface to vns       X           X3          leaf2-a             ethernet33      3
    # REST add interface to vns       Y           Y192        leaf1-a             ethernet33      -1
    # REST add interface to vns       Y           X224        leaf1-b             ethernet33      -1
    # REST add portgroup to vns       Y           Y2          leaf1-pc2               -1
    # REST add portgroup to vns       Y           Y2          leaf1-pc3               -1  
    # REST add interface to vns       Z           Y192        leaf2-a             ethernet33      -1
    # REST add interface to vns       Z           X224        leaf2-b             ethernet33      -1
    # REST add portgroup to vns       Z           Z3          leaf2-pc3               -1
    REST add interface to vns               X                   X192             leaf0-a    ethernet33          -1
    REST add interface to vns               X                   X224             leaf0-b    ethernet33          -1
    REST add interface to vns               Y                   Y192             leaf1-a    ethernet33          -1
#    REST add interface to vns               Y                   Y224             leaf1-b    ethernet33          -1
    REST add interface to vns               Z                   Z192             leaf2-a    ethernet33          -1
    REST add interface to vns               Z                   Z224             leaf2-b    ethernet33          -1
    REST add tenant routers intf to system          X
    REST add tenant routers intf to system          Y
    REST add tenant routers intf to system          Z
    REST add tenant routers intf to system          External
    REST add system intf to tenant routers          External
    REST add system intf to tenant routers          X
    REST add system intf to tenant routers          Y
    REST add system intf to tenant routers          Z
    REST add static routes                          X                           0.0.0.0/0           {"tenant": "system"}
    REST add static routes                          Y                           0.0.0.0/0           {"tenant": "system"}
    REST add static routes                          Z                           0.0.0.0/0           {"tenant": "system"}
    REST add static routes                          External                    10.251.0.0/16       {"tenant": "system"}
    REST add static routes                          External                    10.252.0.0/16       {"tenant": "system"}
    REST add static routes                          External                    10.253.0.0/16       {"tenant": "system"}

  	
teardown topology
	delete traffic
    initialize host

T5 base suite setup
	base suite setup
	add fabric switch
	sleep 											5
	${result} = 									CLI verify controller		s1							c1		
	Should Be True									${result}
	${result} = 									CLI verify controller   	s1							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s2							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s2							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s3							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s3							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s4							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s4							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s5							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s5							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s7							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s7							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s8							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s8							c2
	Should Be True									${result}
	${result} = 									CLI verify controller       s9							c1
	Should Be True									${result}
	${result} = 									CLI verify controller       s9							c2
	Should Be True									${result}
    REST add portgroup                      Arista1-pc1
    REST add portgroup                      Arista1-pc2
    REST add portgroup                      Arista1-pc3
    REST add portgroup                      Arista1-pc4
    REST add portgroup                      Arista1-pc5
    REST add portgroup                      Arista2-pc1
    REST add portgroup                      Arista2-pc2
    REST add portgroup                      Arista2-pc3
    REST add portgroup                      Arista2-pc4
    REST add portgroup                      Arista2-pc5
    REST add portgroup                      leaf0-pc1
    REST add portgroup                      leaf0-pc2
    REST add portgroup                      leaf0-pc3
    REST add portgroup                      leaf1-pc1
    REST add portgroup                      leaf1-pc2
    REST add portgroup                      leaf1-pc3
    REST add portgroup                      leaf2-pc1
    REST add portgroup                      leaf2-pc2
    REST add portgroup                      leaf2-pc3
    REST add portgroup lacp                 Arista1-pc1
    REST add portgroup lacp                 Arista1-pc2
    REST add portgroup lacp                 Arista1-pc3
    REST add portgroup lacp                 Arista1-pc4
    REST add portgroup lacp                 Arista1-pc5
    REST add portgroup lacp                 Arista2-pc1
    REST add portgroup lacp                 Arista2-pc2
    REST add portgroup lacp                 Arista2-pc3
    REST add portgroup lacp                 Arista2-pc4
    REST add portgroup lacp                 Arista2-pc5
    REST add portgroup lacp                 leaf0-pc1
    REST add portgroup lacp                 leaf0-pc2
    REST add portgroup lacp                 leaf0-pc3
    REST add portgroup lacp                 leaf1-pc1
    REST add portgroup lacp                 leaf1-pc2
    REST add portgroup lacp                 leaf1-pc3
    REST add portgroup lacp                 leaf2-pc1
    REST add portgroup lacp                 leaf2-pc2
    REST add portgroup lacp                 leaf2-pc3
    REST add interface to portgroup      leaf0-a     ethernet17    Arista1-pc1         
    REST add interface to portgroup      leaf0-b     ethernet17    Arista1-pc1         
    REST add interface to portgroup      leaf0-a     ethernet18    Arista1-pc2         
    REST add interface to portgroup      leaf0-b     ethernet18    Arista1-pc2         
    REST add interface to portgroup      leaf1-a     ethernet17    Arista1-pc3         
    REST add interface to portgroup      leaf1-a     ethernet19    Arista1-pc3         
    REST add interface to portgroup      leaf1-a     ethernet11    Arista1-pc4         
    REST add interface to portgroup      leaf1-a     ethernet13    Arista1-pc4         
    REST add interface to portgroup      leaf1-b     ethernet17    Arista1-pc4         
    REST add interface to portgroup      leaf1-b     ethernet19    Arista1-pc4         
    REST add interface to portgroup      leaf2-a     ethernet17    Arista1-pc5         
    REST add interface to portgroup      leaf2-a     ethernet19    Arista1-pc5         
    REST add interface to portgroup      leaf2-b     ethernet17    Arista1-pc5         
    REST add interface to portgroup      leaf2-b     ethernet19    Arista1-pc5         
    REST add interface to portgroup      leaf0-a     ethernet19    Arista2-pc1         
    REST add interface to portgroup      leaf0-b     ethernet19    Arista2-pc1         
    REST add interface to portgroup      leaf0-a     ethernet20    Arista2-pc2         
    REST add interface to portgroup      leaf0-b     ethernet20    Arista2-pc2         
    REST add interface to portgroup      leaf1-a     ethernet18    Arista2-pc3         
    REST add interface to portgroup      leaf1-a     ethernet20    Arista2-pc3         
    REST add interface to portgroup      leaf1-a     ethernet12    Arista2-pc4         
    REST add interface to portgroup      leaf1-a     ethernet14    Arista2-pc4         
    REST add interface to portgroup      leaf1-b     ethernet18    Arista2-pc4         
    REST add interface to portgroup      leaf1-b     ethernet20    Arista2-pc4         
    REST add interface to portgroup      leaf2-a     ethernet18    Arista2-pc5         
    REST add interface to portgroup      leaf2-a     ethernet20    Arista2-pc5         
    REST add interface to portgroup      leaf2-b     ethernet18    Arista2-pc5         
    REST add interface to portgroup      leaf2-b     ethernet20    Arista2-pc5         
    REST add interface to portgroup      leaf0-a     ethernet1     leaf0-pc1           
    REST add interface to portgroup      leaf0-b     ethernet1     leaf0-pc1           
    REST add interface to portgroup      leaf0-a     ethernet2     leaf0-pc2           
    REST add interface to portgroup      leaf0-b     ethernet2     leaf0-pc2           
    REST add interface to portgroup      leaf0-a     ethernet3     leaf0-pc3           
    REST add interface to portgroup      leaf0-b     ethernet3     leaf0-pc3           
    REST add interface to portgroup      leaf1-a     ethernet1     leaf1-pc1           
    REST add interface to portgroup      leaf1-a     ethernet5     leaf1-pc1           
    REST add interface to portgroup      leaf1-b     ethernet1     leaf1-pc1           
    REST add interface to portgroup      leaf1-a     ethernet2     leaf1-pc2           
    REST add interface to portgroup      leaf1-a     ethernet6     leaf1-pc2           
    REST add interface to portgroup      leaf1-b     ethernet2     leaf1-pc2           
    REST add interface to portgroup      leaf1-a     ethernet3     leaf1-pc3           
    REST add interface to portgroup      leaf1-a     ethernet7     leaf1-pc3           
    REST add interface to portgroup      leaf1-b     ethernet3     leaf1-pc3           
    REST add interface to portgroup      leaf2-a     ethernet1     leaf2-pc1           
    REST add interface to portgroup      leaf2-b     ethernet1     leaf2-pc1           
    REST add interface to portgroup      leaf2-a     ethernet2     leaf2-pc2           
    REST add interface to portgroup      leaf2-b     ethernet2     leaf2-pc2           
    REST add interface to portgroup      leaf2-a     ethernet3     leaf2-pc3           
    REST add interface to portgroup      leaf2-b     ethernet3     leaf2-pc3           

	
T5 base suite teardown
	delete fabric switch  
	REST delete portgroup                      Arista1-pc1
    REST delete portgroup                      Arista1-pc2
    REST delete portgroup                      Arista1-pc3
    REST delete portgroup                      Arista1-pc4
    REST delete portgroup                      Arista1-pc5
    REST delete portgroup                      Arista2-pc1
    REST delete portgroup                      Arista2-pc2
    REST delete portgroup                      Arista2-pc3
    REST delete portgroup                      Arista2-pc4
    REST delete portgroup                      Arista2-pc5
    REST delete portgroup                      leaf0-pc1
    REST delete portgroup                      leaf0-pc2
    REST delete portgroup                      leaf0-pc3
    REST delete portgroup                      leaf1-pc1
    REST delete portgroup                      leaf1-pc2
    REST delete portgroup                      leaf1-pc3
    REST delete portgroup                      leaf2-pc1
    REST delete portgroup                      leaf2-pc2
    REST delete portgroup                      leaf2-pc3
    REST delete tenant                         X
    REST delete tenant                         Y
    REST delete tenant                         Z
    REST delete tenant                         External
    REST delete tenant                         system
    BASH restart networking service             h1-rack0            timeout=60
    bash_restart_networking_service             h1-rack1            timeout=60


verify results   [Arguments]  ${transmitted_frames}  ${received_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report}=  fetch port stats  stream=${stream}  
    ${tx_value}=  verify dict key  ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${stream_name}  ${received_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}
 	Log 		${in_range}
   Should be true  ${in_range}	
  	
calculate loss	 [Arguments]  ${transmitted_frames}  ${received_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report} =  	fetch port stats  	stream=${stream}  
    ${tx_value} =  	verify dict key  	${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value} =  	verify dict key  	${report}  ${stream_name}  ${received_frames}
	${loss} = 		evaluate 			${tx_value} - ${rx_value}
	Log 			${loss}
	
verify traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log  	${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    ixia verify traffic rate  ${tx_value}  ${rx_value}
    
verify traffic packet  [Arguments]  ${tx_cnt}  ${rx_cnt}  ${tx_intf}  ${rx_intf}
	Sleep  5
    ${report} =  	fetch port stats
    ${tx_value} =  	verify dict key  	${report}  ${tx_intf}  transmitted_frames
    ${rx_value} =  	verify dict key  	${report}  ${rx_intf}  received_valid_frames
    ${result} =  	evaluate  			${tx_value} - ${rx_value}
    Log 	${result}
#   Should Be True   -100000 < ${result} < 100000


    