* Setting
Documentation   T5 intra tenant L3 Test Suite
Suite Setup     T5 base suite setup
Suite Teardown  T5 base suite teardown
Test Setup      test setup topology
Test Teardown   test teardown topology
Force Tags      T5      L3       IronHorse
Library         keywords/BsnCommon.py
Library         keywords/Host.py
Library         keywords/T5.py
Library         keywords/T5L3.py
Library         keywords/T5Platform.py
Library         keywords_dev/slim/T5Platform.py
Library         keywords/T5Utilities.py
Library         Collections.py
Library         keywords/Ixia.py
Library         keywords/SwitchLight.py
Resource        testsuites_dev/slim/T5_L3_physical_intra/t5_layer3_physical_intra_variables.txt
Resource        testsuites_dev/slim/T5_L3_physical_intra/t5_dualleaf_three_rack_physical_resource.txt


* Test Cases
Intra tenant L3 untagged traffic with dynamic endpoints same rack
    L3 intra tenant same rack untagged with dynamic endpoints
    [Tags]              feature         sanity          run1

Intra tenant L3 untagged traffic with dynamic endpoints across rack
    L3 intra tenant across rack untagged with dynamic endpoints
    [Tags]              feature         sanity          run2

Intra tenant L3 tagged traffic with dynamic endpoints same rack
    L3 intra tenant same rack tagged with dynamic endpoints
    [Tags]              feature         sanity          run3

Intra tenant L3 tagged traffic with dynamic endpoints across rack
    L3 intra tenant across rack tagged with dynamic endpoints
    [Tags]              feature         sanity      run4

Intra tenant L3 traffic same rack different leaf switch
    Intra tenant L3 traffic same rack different leaf switch
    [Tags]              feature             sanity      run5            

Verify static endpoint state
    Verify static endpoint state
    [Tags]                feature             sanity        run6                      

Verify host with same IP as vrf is having L2 service only
    Verify host with same IP as vrf is having L2 service only
    [Tags]                 feature                  run7
    
Activate and deactivate router interface
    Activate and deactivate router interface
    [Tags]                  feature                run8 

Intra tenant L3 untagged traffic with static endpoints same rack
    L3 intra tenant same rack untagged with static endpoints
    [Tags]                  feature         sanity          run9

Intra tenant L3 untagged traffic with static endpoints across rack
    L3 intra tenant across rack untagged with static endpoints
    [Tags]                  feature         sanity      run10

Intra tenant L3 tagged traffic with static endpoints same rack
    L3 intra tenant same rack tagged with static endpoints
    [Tags]                  feature         sanity          run11

Intra tenant L3 tagged traffic with static endpoints across rack
    L3 intra tenant across rack tagged with static endpoints
    [Tags]                  feature         sanity          run12

Dhcp discover on the same vns as server with dhcp relay enabled
    L3 intra tenant dhcp relay on same vns as dhcp server with relay enabled
    [Tags]                   feature            sanity                  dhcp-relay      run13

Dhcp discover on the same vns as server without dhcp relay enabled
    L3 intra tenant dhcp relay on same vns as dhcp server without relay enabled
    [Tags]                              feature                 dhcp-relay          run14

Intra tenant dhcp relay 
    L3 intra tenant dhcp relay on same rack
    [Tags]                   feature            sanity                  dhcp-relay          run15
    
Intra tenant dhcp relay with circuit id
    L3 intra tenant dhcp relay with circuit id on same rack
    [Tags]                   feature            sanity                  dhcp-relay          run16

Intra tenant dhcp relay across rack
    L3 intra tenant dhcp relay across rack
    [Tags]                   feature            feature                 dhcp-relay          run17
    
Intra tenant dhcp relay with circuit id across rack
    L3 intra tenant dhcp relay with circuit id across rack
    [Tags]                   feature            feature                 dhcp-relay          run18

Delete and Add dhcp relay
    L3 dhcp request without dhcp relay enabled
    [Tags]                   feature                    dhcp-relay          run19
    
Move host from one vns to another vns in the same tenant and verify dhcp request is working
    Move host from one vns to another vns in the same tenant and verify dhcp request is working
    [Tags]                  feature                 dhcp-relay              run20

Verify dhcp host is not aged out
    Verify dhcp host is not being aged out
    [Tags]              feature                 dhcp-relay          run21

Dhcp relay with dhcp server configured as static endpoint
    Dhcp relay with static dhcp server endpoint
    [Tags]              feature                 dhcp-relay      run22
    
Verify add and delete of dhcp server config works
    Verify add and delete of dhcp server config works
    [Tags]             feature                 dhcp-relay       run23
    
Add and delete untagged endpoints with existing host
    L3 add and delete untagged endpoints with existing host
    [Tags]              feature                                 run24
    
Add and delete tagged endpoints with existing host
    L3 add and delete tagged endpoints with existing host
    [Tags]              feature                                 run25
        
Change L3 endpoint from untagged to tagged and back     
    L3 change endpoint from untagged to tagged and back 
    [Tags]              feature                                 run26

Verify L3 endpoint aging
    Check L3 endpoint aging 
    [Tags]              feature                                 run27
    
Verify L3 ttl 1 is not being forwarded
    Check L3 ttl 1 is dropped
    [Tags]              feature                                 run28

Verify icmpa is sending destination unreachable for L3 destination miss
    Verify icmpa is sending destination unreachable for L3 destination miss
    [Tags]              feature      sanity                     run29

Change router vns ip
    Change router ip address
    [Tags]              feature                                 run30

Delete and add router vns ip
    Delete and add router vns ip 
    [Tags]              feature                                 run31

Set 32bit full mask on vns router ip
    Set 32bit full mask on vns router ip
    [Tags]              feature                                 run32
    
Change tagged endpoint IP address
    Change tagged host endpoint IP address
    [Tags]              feature                                 run33

Configure static endpoint with host showing up on another port
    Static endpoint with dynamic host showing up on another port
    [Tags]                  feature                             run34

Verify subnet mask is properly applied on router vns
    Verify subnet mask on vns router ip
    [Tags]                  feature                             run35

Verify vlsm forwarding
    Verify vlsm forwarding
    [Tags]                  feature                             run36

Verify split horizon forwarding
    manual passed
    [Tags]                  feature         manual      
    
Configure overlapping router IP     
    Configure overlapping IP on same tenant across VNS  
    [Tags]                  feature         negative        run38

Configure overlapping IP with private keyword on the same tenant
    Configure overlapping IP with private keyword on the same tenant
    [Tags]                  feature                     run39

L3 intra tenant traffic between private and public subnet with overlapping IP
    L3 intra tenant traffic between private and public subnet with overlapping IP
    [Tags]                      feature             run40
    
Verify host with different IP on vns router is not getting L3 service
    Verify host with different IP on vns router is not getting L3 service
    [Tags]                      feature                    run41
    
Trigger controller HA failover via CLI
    Controller HA failover via CLI  
    [Tags]              feature                            run42
       
Trigger controller HA failover via reboot
    Controller HA failover via reboot
    [Tags]              feature                            run43

Spine reboot
    Reboot spine0 via CLI
    [Tags]              feature         run44

Leaf reboot
    Reboot Leaf0 via CLI
    [Tags]              feature         run45

Spine connect and disconnect to controller
    Connect and Disconnect spine to controller
    [Tags]              feature         run46
    
Leaf connect and disconnect to controller   
    Connect and disconnect one leaf in dual tor to controller
    [Tags]              feature         run47

Spine to leaf link flap
    Flap link between leaf and spine
    [Tags]              feature         run48

Leaf to host link flap
    Flap bond interface towards host
    [Tags]              feature                 run49 
    
Restart ofad process on spine
    restart ofad on spine
    [Tags]              feature                 run50
    
Restart ofad process on leaf    
    restart ofad on leaf
    [Tags]              feature         run51
    
L3 intra tenant traffic behavior in headless mode 
    manual passed
    [Tags]                  manual              feature     run52         

L3 intra tenant traceroute
    L3 intra tenant traceroute
    [Tags]                  feature         run53

Verify L3 intra tenant traffic with ip options
    Verify L3 intra tenant traffic with ip options  
    [Tags]                                  feature             run54
    
Verify host on private segment is able to get dhcp address from tenant dhcp server
    Verify host on private segment is able to get dhcp address from tenant dhcp server
    [Tags]                                  feature           dhcp-relay            run55
                                
        
Trigger controller HA failover via CLI and verify dhcp-relay is working
    Trigger controller HA failover via CLI and verify dhcp-relay is working
    [Tags]                  feature         HA      dhcp-relay          run56     

Trigger controller HA failover via reboot and verify dhcp-relay is working
    Trigger controller HA failover via reboot and verify dhcp-relay is working
    [Tags]                  feature         HA      dhcp-relay          run57

Trigger controller HA failover via CLI and verify ecmp is working
    manual untested
    [Tags]                  manual                  feature                 ecmp            run58     

Trigger controller HA failover via reboot and verify ecmp is working
    manual untested
    [Tags]                  manual          feature                 ecmp            run59

Verify dhcp-relay functionality in headless mode
    manual passed
    [Tags]                  manual              feature                 dhcp-relay       run60   

Verify ecmp forwarding in headless mode
    manual untested
    [Tags]                  manual          feature                 ecmp        run61
            
Verify L3 intra tenant forwarding after controller upgrade
    manual failed
    [Tags]                  manual          feature                 run62

Verify ecmp forwarding after controller upgrade
    manual failed
    [Tags]                  manual          feature                 run63

Verify dhcp-relay functionality after controller upgrade
    manual failed
    [Tags]                  manual          feature            run64     

Verify ecmp traffic forwarding prefers local forwarding over remote forwarding
    manual untested
    [Tags]                  manual          feature                 run65

Verify arp agent functionality after controller HA failover via CLI
    Verify arp agent functionality after controller HA failover via CLI
    [Tags]                  feature                 HA                   run66           

Verify arp agent functionality after controller HA failover via reboot
    Verify arp agent functionality after controller HA failover via reboot
    [Tags]                  feature                                           run67  
    
Verify ecmp traffic will failover and failback to more specific routes with ecmp group
    manual untested
    [Tags]                  manual                  feature                 ecmp    run68     
    
    
Verify same mac address showing up on two ports in the same segment is blocked
    Verify same mac address showing up on two ports in the same segment is blocked
    [Tags]                  feature                         run69
    

Verify clear blocked endpoint works
    Verify clear blocked endpoint works
    [Tags]                  feature                         run70
    
Verify blocked endpoint should be automatically cleared
    Verify blocked endpoint should be automatically cleared
    [Tags]                  feature                         run71

    
* Keywords
L3 intra tenant same rack untagged with dynamic endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X2                      ${leaf1_a}              ${ixia3}                -1
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=100000           frame_size=9216             frame_cnt=10000000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.251.2.201     dst_gw=10.251.2.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_frames         ${stream1}              stream1
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1
    
    
L3 intra tenant across rack untagged with dynamic endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h4                              10.251.3.11/24          bond0
    BASH add route                              h5                              10.251.3.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.251.3.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.3.1

    
L3 intra tenant same rack tagged with dynamic endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X2                      ${leaf0_pc2}            1002
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h2                              bond0.1002
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001  
    BASH ifconfig ip address                            h2                              10.251.2.11/24          bond0.1002
    BASH add route                              h1                              10.251.2.0/24           10.251.1.1
    BASH add route                              h2                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h1                              10.251.2.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h2                              10.251.1.0/24           10.251.2.1
    
    
L3 intra tenant across rack tagged with dynamic endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#   BASH ping                                   h1                              10.251.1.1              count=10
#   BASH ping                                   h3                              10.251.3.1              count=10
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1

Intra tenant L3 traffic same rack different leaf switch
### Host on board nic is 1gig interface, switch does not support autoneg at 1gig so test is failing
#    BASH init intf                              h5                              bond0
#    BASH init intf                              h6                              bond0
    ${version} =                                BASH lsb release                h6
    ${intf} =                                   Set Variable If                 ${version} == 12            eth1            em2
    BASH ifup intf                              h5                              eth1
    BASH ifup intf                              h6                              ${intf}
    BASH ifup intf                              h5                              eth1
    BASH ifup intf                              h6                              ${intf}
    BASH ifconfig ip address                    h5                              10.251.1.31/24          eth1
    BASH ifconfig ip address                    h6                              10.251.2.31/24           ${intf}
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    REST add interface to vns                   X                               X1                      ${leaf2_a}          ${leaf2a_host5}            -1
    REST add interface to vns                   X                               X2                      ${leaf2_b}          ${leaf2b_host6}            -1
    sleep                                       1
    BASH ping                                   h5                              10.251.2.31             count=5
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      eth1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}   
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2a_host5}
    ${mac2} =                                   BASH get intf mac               h6                       ${intf}
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2b_host6}
    REST show endpoints     
    ${loss} =                                   BASH ping                       h5                      10.251.2.31             count=10
    Should Be True                              ${loss} < 20        
#    BASH init intf                              h5                              eth1
#    BASH init intf                              h6                               ${intf}
    

Activate and deactivate router interface
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                    h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                    h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    REST disable router segment intf            X                               X1
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 100
    REST enable router segment intf             X                               X1
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} < 20
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1

Verify static endpoint state
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add endpoint                           X                               X1                      X1_pc1
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    REST add endpoint mac                       X                               X1                      X1_pc1                  ${mac1}
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}       
    ${apState1} =                               Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${apState1}                     Unknown
    ${state1} =                                 Set Variable                    ${result[0]['state']}
    Should Contain                              ${state1}                       Attach Point Unknown
#    ${ipState1} =                               Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
#    Should Contain                              ${ipState1}                     Unknown 
    REST add endpoint portgroup attachment      X                               X1                      X1_pc1                  ${leaf2_pc1}                -1  
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${state1} =                                 Set Variable                    ${result[0]['state']}
#    Should Contain                              ${state1}                       Member Rule Error
    Should Contain                              ${state1}                       Attach Point Down
    REST add endpoint ip                        X                               X1                      X1_pc1                  10.251.1.11
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${ipState1} =                               Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
    Should Contain                              ${ipState1}                     static 
    ${ipAddr1} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${ipAddr1}                      10.251.1.11
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    sleep                                       5
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${state1} =                                 Set Variable                    ${result[0]['state']}
    Should Contain                              ${state1}                       Active 
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    REST add endpoint                           X                               X2                      X2_pc2
    REST add endpoint mac                       X                               X2                      X2_pc2                  ${mac2}
    REST add endpoint portgroup attachment      X                               X2                      X2_pc2                  ${leaf2_pc2}                -1  
    REST add endpoint ip                        X                               X2                      X2_pc2                  10.251.2.11
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}       
    ${apState} =                                Set Variable                    ${result[0]['attachment-point-state']}    
    ${ipState} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
    Should Contain                              ${apState}                      static                              
    Should Contain                              ${ipState}                      static                              
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${apState} =                                Set Variable                    ${result[0]['attachment-point-state']}    
    ${ipState} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
    Should Contain                              ${apState}                      static                              
    Should Contain                              ${ipState}                      static  
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1
        

Verify host with same IP as vrf is having L2 service only
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    REST delete vns ip                          X                               X1                      10.251.1.1              24
    sleep                                       1  
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    sleep                                       5
    BASH ifconfig ip address                    h5                              10.251.1.1/24           bond0   
    BASH ping                                   h5                              10.251.1.2              count=5
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Be True                              ${result}                           
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    ${ipstate} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}   
    Should Contain                              ${ipstate}                      learned-inactive     
    REST add vns ip                             X                               X1                      10.251.1.1              24
    sleep                                       1
    BASH ping                                   h5                              10.251.1.2              count=5
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Be True                              ${result}                           
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
#### Current behavior appears to be if IP is same as vrf, it will not show the ip address
#    ${ipstate} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}   
#    Should Contain                              ${ipstate}                      learned-inactive  
    BASH ifconfig ip address                    h5                              10.251.1.22/24           bond0   
    BASH ping                                   h5                              10.251.1.1              count=5
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Be True                              ${result}                           
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    ${state} =                                  Set Variable                    ${result[0]['state']}   
    Should Contain                              ${state}                        Active    

L3 intra tenant same rack untagged with static endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add endpoint                           X                               X1                      X1_pc1
    REST add endpoint                           X                               X2                      X2_pc2
    REST add endpoint ip                        X                               X1                      X1_pc1                  10.251.1.11
    REST add endpoint ip                        X                               X2                      X2_pc2                  10.251.2.11
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    REST add endpoint mac                       X                               X1                      X1_pc1                  ${mac1}
    REST add endpoint portgroup attachment      X                               X1                      X1_pc1                  ${leaf2_pc1}                -1  
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    REST add endpoint mac                       X                               X2                      X2_pc2                  ${mac2}
    REST add endpoint portgroup attachment      X                               X2                      X2_pc2                  ${leaf2_pc2}                -1  
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}       
    ${apState} =                                Set Variable                    ${result[0]['attachment-point-state']}    
    ${ipState} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
    Should Contain                              ${apState}                      static                              
    Should Contain                              ${ipState}                      static                              
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${apState} =                                Set Variable                    ${result[0]['attachment-point-state']}    
    ${ipState} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
    Should Contain                              ${apState}                      static                              
    Should Contain                              ${ipState}                      static  
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1


L3 intra tenant across rack untagged with static endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc2}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf2_pc1}            -1
    REST add endpoint                           X                               X1                      X1_pc1
    REST add endpoint                           X                               X3                      X3_pc6
    REST add endpoint ip                        X                               X1                      X1_pc1                  10.251.1.11
    REST add endpoint ip                        X                               X3                      X3_pc6                  10.251.3.11
    ${mac1} =                                   BASH get intf mac               h4                      bond0
    REST add endpoint mac                       X                               X1                      X1_pc1                  ${mac1}
    REST add endpoint portgroup attachment      X                               X1                      X1_pc1                  ${leaf1_pc2}                -1  
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    REST add endpoint mac                       X                               X3                      X3_pc6                  ${mac2}
    REST add endpoint portgroup attachment      X                               X3                      X3_pc6                  ${leaf2_pc1}                -1  
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc2}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf2_pc1}            -1
    BASH ifconfig ip address                    h4                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h5                              10.251.3.11/24          bond0
    BASH add route                              h4                              10.251.3.0/24           10.251.1.1
    BASH add route                              h5                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
    BASH ping                                   h4                              10.251.1.1              count=10
    BASH ping                                   h5                              10.251.3.1              count=10
    ${value} =                                  BASH verify arp                 h4                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.251.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h4                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h4                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h5                              10.251.1.0/24           10.251.3.1


L3 intra tenant same rack tagged with static endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X2                      ${leaf0_pc2}            1002
    REST add endpoint                           X                               X1                      X1_pc1
    REST add endpoint                           X                               X2                      X2_pc2
    REST add endpoint ip                        X                               X1                      X1_pc1                  10.251.1.11
    REST add endpoint ip                        X                               X2                      X2_pc2                  10.251.2.11
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    REST add endpoint mac                       X                               X1                      X1_pc1                  ${mac1}
    REST add endpoint portgroup attachment      X                               X1                      X1_pc1                  ${leaf0_pc1}                1001    
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    REST add endpoint mac                       X                               X2                      X2_pc1                  ${mac2}
    REST add endpoint portgroup attachment      X                               X2                      X2_pc1                  ${leaf0_pc2}                1002    
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X2                      ${leaf0_pc2}            1002
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h2                              bond0.1002
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001  
    BASH ifconfig ip address                            h2                              10.251.2.11/24          bond0.1002
    BASH add route                              h1                              10.251.2.0/24           10.251.1.1
    BASH add route                              h2                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h2                      10.251.2.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.2.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.251.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h2                              10.251.1.0/24           10.251.2.1
    
        
L3 intra tenant across rack tagged with static endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add endpoint                           X                               X1                      X1_pc1
    REST add endpoint                           X                               X3                      X3_pc6
    REST add endpoint ip                        X                               X1                      X1_pc1                  10.251.1.11
    REST add endpoint ip                        X                               X3                      X3_pc6                  10.251.3.11
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    REST add endpoint mac                       X                               X1                      X1_pc1                  ${mac1}
    REST add endpoint portgroup attachment      X                               X1                      X1_pc1                  ${leaf0_pc1}                1001    
    ${mac2} =                                   BASH get intf mac               h3                      bond0
    REST add endpoint mac                       X                               X3                      X3_pc6                  ${mac2}
    REST add endpoint portgroup attachment      X                               X3                      X3_pc6                  ${leaf1_pc1}                1003
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                               5   
#   BASH ping                                   h1                              10.251.1.1              count=10
#   BASH ping                                   h3                              10.251.3.1              count=10
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1


L3 intra tenant traceroute
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.0.0/16           10.251.1.1
    BASH add route                              h6                              10.251.0.0/16           10.251.2.1
    sleep                                       5
    BASH ping                                   h5                              10.251.2.11             count=5
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} < 50        
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 10.251.1.1
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.1.1 
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 -I 10.251.1.1 
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.1.1 
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 10.251.2.1 
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.2.1 
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 -I 10.251.2.1 
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.2.1 
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 10.251.3.1 
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.3.1 
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 -I 10.251.3.1 
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.3.1  
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 -I 10.251.2.11 
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.1.1  
    ${result} =                                 Set Variable                    ${string[2]} 
    Should Contain                              ${result}                       \ 2\ \ 10.251.2.11  
    BASH delete route                           h5                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h6                              10.251.0.0/16           10.251.2.1


L3 intra tenant dhcp relay on same vns as dhcp server with relay enabled
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
#    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    REST add dhcp relay                         Y                               Y1                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y1  
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4         h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    ${result} =                                 REST show endpoints 
    Log                                         result[0] = ${result[0]}    
    Should Not Be Empty                         ${ipAddr}
    ${result} =                                 REST show endpoints mac         ${h1_mac}
    Should Not Be Empty                         ${result}
    sleep                                       1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      ${ipAddr}
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.1.9
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    


L3 intra tenant dhcp relay on same vns as dhcp server without relay enabled
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4         h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      ${ipAddr}
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.1.9
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    


L3 intra tenant dhcp relay on same rack
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf0_pc2}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4         h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       5
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1


L3 intra tenant dhcp relay with circuit id on same rack
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf0_pc2}            -1
    BASH add route                              h1                              10.252.2.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y2                      10.252.1.9
    REST add dhcprelay circuitid                Y                               Y2                      10.252.1.9              private vns Y2
    #REST enable dhcp relay                     Y                               Y2  
    sleep                                       5
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       5
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.252.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.2.0/24           10.252.1.1


L3 intra tenant dhcp relay across rack
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4             h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ###### another hac to overcome jira PAN 726
    BASH delete arp                             h1                              10.252.1.1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Not Be True                          ${value}        
    ###### hack to force host to resolve gateway, by right, vrf should attempt to resolve dhcp-server mac address and discover its endpoint but that is not happening
    BASH ping                                   h1                              10.252.1.1              count=5
    ${result} =                                 REST show endpoints mac         ${h1_mac}
    Should Not Be Empty                         ${result}
    sleep                                       1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       10
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1
    

L3 intra tenant dhcp relay with circuit id across rack
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf1_pc1}            -1
    BASH add route                              h1                              10.252.2.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y2                      10.252.1.9
    REST add dhcprelay circuitid                Y                               Y2                      10.252.1.9              private vns Y2
    #REST enable dhcp relay                     Y                               Y2  
    sleep                                       5
    ###### hack to force host to resolve gateway, by right, vrf should attempt to resolve dhcp-server mac address and discover its endpoint but that is not happening
    BASH ping                                   h1                              10.252.1.1              count=5
    sleep                                       1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h3                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h3                      bond0
#   Should Not Be True                          '${ipAddr}' == '' 
    Should Not Be Empty                         ${ipAddr}
    sleep                                       5
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.2.0/24           10.252.1.1


L3 dhcp request without dhcp relay enabled
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4             h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ###### another hac to overcome jira PAN 726
    BASH delete arp                             h1                              10.252.1.1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Not Be True                          ${value}        
    ###### hack to force host to resolve gateway, by right, vrf should attempt to resolve dhcp-server mac address and discover its endpoint but that is not happening
#    BASH ping                                   h1                              10.252.1.1              count=5
#    ${result} =                                 REST show endpoints mac         ${h1_mac}
#    Should Not Be Empty                         ${result}
#    sleep                                       1
#    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
#    Should Be True                              ${value}        
#    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       10
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
#   REST disable dhcp relay                     Y                               Y3
    REST delete dhcp relay                      Y                               Y3                      10.252.1.9
    BASH release dhcpv4 address                 h5                              bond0
    sleep                                       5
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Be Empty                             ${ipAddr}
    sleep                                       5
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    ##REST enable dhcp relay                        Y                               Y3
    sleep                                       5
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1

Move host from one vns to another vns in the same tenant and verify dhcp request is working
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    BASH add route                              h1                              10.252.2.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4             h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       10
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    REST add dhcp relay                         Y                               Y2                      10.252.1.9
    REST add dhcprelay circuitid                Y                               Y2                      10.252.1.9              private vns Y2
    #REST enable dhcp relay                     Y                               Y2  
    REST delete portgroup from vns              Y                               Y3                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf2_pc1}            -1
    sleep                                       5
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    BASH ping                                   h5                              10.252.1.9              count=5
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    ${segment} =                                Set Variable                    ${result[0]['segment']}
    Should Contain                              ${ipAddr}                       10.252.2
    Should Contain                              ${segment}                      Y2
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}               count=10
    Should Be True                              ${loss} < 20    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1
    

Verify dhcp host is not being aged out
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf1_pc1}            -1
    BASH add route                              h1                              10.252.2.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y2                      10.252.1.9
    REST add dhcprelay circuitid                Y                               Y2                      10.252.1.9              private vns Y2
    #REST enable dhcp relay                     Y                               Y2  
    sleep                                       5
    ###### hack to force host to resolve gateway, by right, vrf should attempt to resolve dhcp-server mac address and discover its endpoint but that is not happening
    BASH ping                                   h1                              10.252.1.1              count=5
    sleep                                       1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h3                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h3                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       5
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    sleep                                       600
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}   
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf1_pc1}    
    ${ipAddr1} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
#   Should Contain                              ${ipAddr1}                      ${ipAddr}
    Should Be Equal As Strings                  ${ipAddr1}                      ${ipAddr}
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1

Dhcp relay with static dhcp server endpoint
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
#    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf0_pc2}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       5
    ${h1_ip} =                                  BASH get interface ipv4         h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    REST add endpoint                           Y                               Y1                      Y1_dhcp_server
    REST add endpoint ip                        Y                               Y1                      Y1_dhcp_server          10.252.1.9
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    REST add endpoint mac                       Y                               Y1                      Y1_dhcp_server          ${mac1}
    REST add endpoint portgroup attachment      Y                               Y1                      Y1_dhcp_server          ${leaf0_pc1}                -1  
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       1
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1  


Verify add and delete of dhcp server config works               
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    sleep                                       5
    ${result} =                                 REST show forwarding dhcp table
    Log                                         ${result}
#    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
#    Should Be Empty                             ${circuitid}
    Should Be Equal                             ${dhcpip}                       10.252.1.9
    Should Be Equal                             ${routerip}                     10.252.3.1
    REST add dhcprelay circuitid                Y                               Y3                  10.252.1.9        this is a test
    ${result} =                                 REST show forwarding dhcp table
    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    Should Be Equal                             ${circuitid}                    this is a test
    REST delete dhcp relay                      Y                               Y3                      10.252.1.9   
    ${result} =                                 REST show forwarding dhcp table
    Should Be Empty                             ${result}                    
    REST add dhcp relay                         Y                               Y3                      10.252.1.11
    ${result} =                                 REST show forwarding dhcp table
#    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
#    Should Be Empty                             ${circuitid}
    Should Be Equal                             ${dhcpip}                       10.252.1.11
    Should Be Equal                             ${routerip}                     10.252.3.1
    ${result} =                                 REST delete dhcp relay          Y                               Y3                      10.252.1.9   
    Should Not Be True                          ${result} 
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
    Should Not Be Empty                         ${dhcpip}
    ${result} =                                 REST delete dhcp relay          Y                               Y3                      10.252.1.11   
    Should Be True                              ${result} 
    sleep                                       1
    ${result} =                                 REST show forwarding dhcp table
    Should Be Empty                             ${result}
    sleep                                       1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    ${result} =                                 REST show forwarding dhcp table
#    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
#    Should Be Empty                             ${circuitid}
    Should Be Equal                             ${dhcpip}                       10.252.1.9
    Should Be Equal                             ${routerip}                     10.252.3.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.12
    ${result} =                                 REST show forwarding dhcp table
#    ${circuitid} =                              Set Variable                    ${result[0]['circuit-id']}
    ${dhcpip} =                                 Set Variable                    ${result[0]['dhcp-ip']}
    ${routerip} =                               Set Variable                    ${result[0]['router-ip']}
#    Should Be Empty                             ${circuitid}
    Should Be Equal                             ${dhcpip}                       10.252.1.12
    Should Be Equal                             ${routerip}                     10.252.3.1


L3 add and delete untagged endpoints with existing host
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
#    BASH init intf                              h3                              bond0
#    BASH init intf                              h4                              bond0   
#    BASH init intf                              h5                              bond0
#    BASH init intf                              h6                              bond0
    sleep                                       1
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    REST delete portgroup from vns              X                               X1                      ${leaf2_pc1}            -1
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be True                          ${result}   
    sleep                                       1
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    sleep                                       5
    BASH ping                                   h5                              10.251.1.1              count=10
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    BASH ping                                   h6                              10.251.1.11             count=3
    ${loss} =                                   BASH ping                       h6                      10.251.1.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1
        

L3 add and delete tagged endpoints with existing host
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#   BASH ping                                   h3                              10.251.1.1              count=10
#   BASH ping                                   h2                              10.251.3.1              count=10
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    REST delete portgroup from vns              X                               X1                      ${leaf0_pc1}            1001
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be True                          ${result}   
    sleep                                       1
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    sleep                                       5
    BASH ping                                   h1                              10.251.3.11             count=10
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}   
    ${loss} =                                   BASH ping                       h3                      10.251.1.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1


L3 change endpoint from untagged to tagged and back
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
#    BASH init intf                              h3                              bond0
#    BASH init intf                              h4                              bond0   
#    BASH init intf                              h5                              bond0
#    BASH init intf                              h6                              bond0
    sleep                                       1
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    REST delete portgroup from vns              X                               X1                      ${leaf2_pc1}            -1
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be True                          ${result}   
    sleep                                       1
    BASH init intf                              h5                              bond0
    BASH add tag                                h5                              bond0                   1005
    BASH ifup intf                              h5                              bond0.1005
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0.1005
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            1005
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1  
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    BASH ping                                   h5                              10.251.1.1              count=10
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}   
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    sleep                                       1
    REST delete portgroup from vns              X                               X1                      ${leaf2_pc1}            1005
    BASH init intf                              h5                              bond0.1005
    BASH delete tag                             h5                              bond0.1005              
    BASH init intf                              h5                              bond0
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    sleep                                       10  
    BASH ping                                   h5                              10.251.1.1  
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}   
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1

    
Check L3 endpoint aging 
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h3                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h4                              10.251.2.11/24          bond0
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h3                              10.251.1.1              count=10
    BASH ping                                   h4                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH ifdown intf                            h3                              bond0
    ${loss} =                                   BASH ping                       h4                      10.251.1.11             count=10
    Should Be True                              ${loss} == 100  
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    sleep                                       600
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be True                          ${result}       
    BASH delete route                           h3                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.2.1
                    

Check L3 ttl 1 is dropped
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h3                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h4                              10.251.2.11/24          bond0
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.2.1
    sleep                                       10  
    BASH ping                                   h3                              10.251.1.1              count=10
    BASH ping                                   h4                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10            ttl=1
    Should Be True                              ${loss} == 100          
    ${result} =                                 BASH content                    h3
    log                                         result from bash ping is ${result}
    Should Contain X Times                      ${result}                       Time to live exceeded   10
    BASH delete route                           h3                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.2.1


Verify icmpa is sending destination unreachable for L3 destination miss
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h3                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h4                              10.251.2.11/24          bond0
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.2.1
    BASH add route                              h4                              10.99.99.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h3                              10.251.1.1              count=5
    BASH ping                                   h4                              10.251.2.1              count=5
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h4                      10.99.99.11             count=10            
    Should Be True                              ${loss} == 100          
    ${result} =                                 BASH content                    h4
    log                                         result from bash ping is ${result}
    Should Contain X Times                      ${result}                       Destination Net Unreachable     10
    BASH delete route                           h3                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.2.1      
    BASH delete route                           h4                              10.99.99.0/24           10.251.2.1
    

Change router ip address
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                    h3                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h4                              10.251.2.11/24          bond0
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.2.1
    sleep                               5   
    BASH ping                                   h3                              10.251.1.1              count=10
    BASH ping                                   h4                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    REST add vns ip                             X                               X1                      10.251.4.1              24  
#   ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
#   Should Be True                              ${loss} == 0    
    ${mac1} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                           
    BASH delete arp                             h3                              10.251.1.1
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Not Be True                          ${value} 
    BASH ifconfig ip address                            h3                              10.251.4.11/24          bond0   
    BASH delete route                           h3                              10.251.2.0/24           10.251.1.1
#   BASH delete route                           h4                              10.251.1.0/24           10.251.2.1
    BASH add route                              h3                              10.251.2.0/24           10.251.4.1
    BASH add route                              h4                              10.251.4.0/24           10.251.2.1
    BASH ping                                   h3                              10.251.2.11             count=10
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0        
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${ipAddr1} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should match regexp                         ${ipAddr1}                      (10\.251\.4\.11|10\.251\.1\.11)
#    Should Contain                              ${ipAddr1}                      10.251.4.11
#   Should Contain                              ${result}                       10.251.4.11
    ${result} =                                 REST show endpoints mac         ${mac2}
    ${ipAddr2} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${ipAddr2}                      10.251.2.11
#   Should Contain                              ${result}                       10.251.2.11
    REST add vns ip                             X                               X1                      10.251.1.1              24  
    sleep                                       1
    ${result} =                                 REST get logical router segment interface               X                   X1
    ${cidr} =                                   Set Variable                    ${result['ip-cidr']}
    Should Be Equal                             ${cidr}                         10.251.1.1/24
    BASH delete arp                             h3                              10.251.4.1
    ${value} =                                  BASH verify arp                 h3                      10.251.4.1
    Should Not Be True                          ${value} 
    BASH ifconfig ip address                    h3                              10.251.1.11/24          bond0   
    BASH delete route                           h3                              10.251.2.0/24           10.251.4.1
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH ping                                   h3                              10.251.2.11             count=10
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0        
    sleep                               1
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${ipAddr1} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should match regexp                         ${ipAddr1}                      (10\.251\.4\.11|10\.251\.1\.11)
#    Should Contain                              ${ipAddr1}                      10.251.1.11
    ${result} =                                 REST show endpoints mac         ${mac2}
    ${ipAddr2} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${ipAddr2}                      10.251.2.11         
    BASH delete route                           h3                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.4.0/24           10.251.2.1
    

Delete and add router vns ip
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h3                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h4                              10.251.2.11/24          bond0
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.2.1
    sleep                                       10  
    BASH ping                                   h3                              10.251.1.1              count=10
    BASH ping                                   h4                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    sleep                                       1
    REST delete vns ip                          X                               X1                      10.251.1.1              24
    sleep                                       1
    ${loss} =                                   BASH ping                       h3                      10.251.1.1              count=10
    Should Be True                              ${loss} == 100       
    BASH delete arp                             h3                              10.251.1.1
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Not Be True                          ${value} 
    BASH ping                                   h3                              10.251.1.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Not Be True                          ${value} 
    ${loss} =                                   BASH ping                       h4                      10.251.1.11             count=10
    Should Be True                              ${loss} == 100       
    sleep                                       1
    REST add vns ip                             X                               X1                      10.251.1.1              24
    sleep                                       1
    BASH ping                                   h4                              10.251.1.11             count=10    
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value} 
    ${loss} =                                   BASH ping                       h4                      10.251.1.11             count=10
    Should Be True                              ${loss} == 0            
    BASH delete route                           h3                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.2.1


Set 32bit full mask on vns router ip
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h3                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h4                              10.251.2.11/24          bond0
    BASH add route                              h3                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.2.1
    sleep                                       10  
    BASH ping                                   h3                              10.251.2.11             count=10
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    ${result}=                                  REST add vns ip                 X                       X1                      10.251.1.1              32          
    Should Not Be True                          ${result} 
    sleep                                       1
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    


Change tagged host endpoint IP address
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} < 20    
    BASH init intf                              h3                              bond0.1003  
    BASH ifconfig ip address                            h3                              10.251.3.212/24         bond0.1003
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    BASH ping                                   h1                              10.251.3.212            count=10
    sleep                                       5
    ${result} =                                 REST show endpoints mac         ${mac2}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
#    ${ipAddr} =                                 Get From Dictionary             ${result[0]}            ip-address
#    Should Contain                              ${ipAddr}                       10.251.3.212
    Should match regexp                         ${ipAddr}                      (10\.251\.3\.212|10\.251\.3\.11)
    ${loss} =                                   BASH ping                       h1                      10.251.3.212            count=10
    Should Be True                              ${loss} < 20                            
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1  

    
Static endpoint with dynamic host showing up on another port
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#   ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    REST add portgroup to vns                   X                               X3                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc2}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf2_pc2}            -1
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h2                              bond0.1002
    BASH ifconfig ip address                            h2                              10.251.3.22/24          bond0.1002
    BASH ifconfig ip address                            h4                              10.251.3.24/24          bond0
    BASH ifconfig ip address                            h5                              10.251.3.25/24          bond0
    BASH add route                              h2                              10.251.1.0/24           10.251.3.1
    BASH add route                              h4                              10.251.1.0/24           10.251.3.1
    BASH add route                              h5                              10.251.1.0/24           10.251.3.1
    BASH ping                                   h2                              10.251.1.11             count=5
    ${loss} =                                   BASH ping                       h2                      10.251.1.11             count=5
    Should Be True                              ${loss} == 0
    ${mac3} =                                   BASH get intf mac               h2                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac3}
    Should Be True                              ${result}   
    REST add endpoint                           X                               X3                      X3_host1
    REST add endpoint ip                        X                               X3                      X3_host1                10.251.3.22
    REST add endpoint mac                       X                               X3                      X3_host1                ${mac3}
    REST add endpoint portgroup attachment      X                               X3                      X3_host1                ${leaf2_pc2}                -1
    BASH set mac address                        h6                              bond0                   ${mac3}
    BASH add route                              h6                              10.251.1.0/24           10.251.1.1
    sleep                                       1
    ${result} =                                 REST show endpoints mac         ${mac3}
    Log                                         result[0] = ${result[0]}
    Log                                         result[0][attachment-point] = ${result[0]['attachment-point']}
    Log                                         result[0][attachment-point][port-group] = ${result[0]['attachment-point']}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Log                                         attachpoint = ${attachpoint}                
    Should Contain                              ${attachpoint}                  ${leaf2_pc2}
    ${apState} =                                Set Variable                    ${result[0]['attachment-point-state']}    
    ${ipState} =                                Set Variable                    ${result[0]['ip-address'][0]['ip-state']}
    Should Contain                              ${apState}                      static                              
    Should Contain                              ${ipState}                      static                              
    ${loss} =                                   BASH ping                       h2                      10.251.1.11             count=10
    Should Be True                              ${loss} == 100
    ${loss} =                                   BASH ping                       h2                      10.251.3.24             count=10
    Should Be True                              ${loss} == 100
    ${loss} =                                   BASH ping                       h2                      10.251.3.25             count=10
    Should Be True                              ${loss} == 100
    ${returnVal} =                              verify ping with tcpdump        h1                      10.251.3.22            h6      bond0       ICMP echo request   
    Should Be True                              ${returnVal}
### Traffic from h2 will be src miss and dropped
    #${returnVal} =                              verify ping with tcpdump        h2                      10.251.1.11            h6      bond0       ICMP echo reply   
    #Should Be True                              ${returnVal}
    REST delete endpoint                        X                               X3                      X3_host1
    sleep                                       1
    BASH ping                                   h2                              10.251.3.24             count=5
    ${loss} =                                   BASH ping                       h2                      10.251.3.24             count=10
    Should Be True                              ${loss} < 20
    ${loss} =                                   BASH ping                       h2                      10.251.3.25             count=10
    Should Be True                              ${loss} < 20
    ${loss} =                                   BASH ping                       h2                      10.251.1.11             count=10
    Should Be True                              ${loss} < 20
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
    BASH delete route                           h2                              10.251.1.0/24           10.251.3.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.3.1
    BASH delete route                           h5                              10.251.1.0/24           10.251.3.1
    BASH run command                            h6                              service networking restart
    
    
Verify subnet mask on vns router ip
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            -1
    BASH ifconfig ip address                            h4                              10.251.2.212/25         bond0
    BASH ifconfig ip address                            h5                              10.251.1.211/25         bond0   
    BASH ifconfig ip address                            h6                              10.251.2.211/25         bond0
    BASH add route                              h5                              10.251.2.128/25         10.251.1.254
    BASH add route                              h6                              10.251.1.128/25         10.251.2.254
    sleep                                       5   
    BASH ping                                   h5                              10.251.2.211            count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.254
    Should Not Be True                          ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.254
    Should Not Be True                          ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be True                          ${result}                       
    REST show endpoints 
    BASH ping                                   h6                              10.251.2.212            count=10
    ${loss} =                                   BASH ping                       h6                      10.251.2.212            count=10
    Should Be True                              ${loss} == 0
    REST add vns ip                             X                               X1                      10.251.1.254            25
    REST add vns ip                             X                               X2                      10.251.2.254            25
    sleep                                       5
    BASH ping                                   h5                              10.251.2.211            count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.254
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.254
    Should Be True                              ${value} 
    ${loss} =                                   BASH ping                       h5                      10.251.2.211            count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.251.2.128/25         10.251.1.254
    BASH delete route                           h6                              10.251.1.128/25         10.251.2.254
    

Verify vlsm forwarding
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST del router intf                        X                               X3  
    REST add vns ip                             X                               X2                      10.252.0.1              25
    REST add vns ip                             X                               X1                      10.251.0.1              17
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc2}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc1}            -1
    BASH ifconfig ip address                    h4                              10.251.2.212/17         bond0
    BASH ifconfig ip address                    h5                              10.252.0.11/25         bond0   
    BASH add route                              h4                              10.252.0.0/25           10.251.0.1
    BASH add route                              h5                              10.251.0.0/17           10.252.0.1
    sleep                                       5   
    BASH ping                                   h4                              10.252.0.11            count=10
    ${value} =                                  BASH verify arp                 h5                      10.252.0.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.0.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.212            count=10
    Should Be True                              ${loss} == 0
    BASH delete route                           h4                              10.252.0.0/25           10.251.0.1
    BASH delete route                           h5                              10.251.0.0/17           10.252.0.1

Configure overlapping IP on same tenant across VNS
    REST add tenant                                 A
    REST add vns                                    A                           X1
    REST add vns                                    A                           X2
    REST add vns                                    A                           X3
    REST add router intf                            A                           X1
    REST add router intf                            A                           X2
    REST add router intf                            A                           X3  
    REST add vns ip                                 A                           X1              10.101.0.1              24
    sleep                                           2   
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.1              25
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.2              25
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.254            17              
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.255            24
    Should Not Be True                              ${result}
    REST delete vns ip                              A                           X1              10.101.0.1              24
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.1              25
    Should Be True                                  ${result}
    REST delete vns ip                              A                           X2              10.101.0.1              25
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.2              25
    Should Be True                                  ${result}
    REST delete vns ip                              A                           X2              10.101.0.2              25
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.254            17              
    Should Be True                                  ${result}
    REST delete vns ip                              A                           X2              10.101.0.254            17      
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.255            23
    Should Be True                                  ${result}   


Configure overlapping IP with private keyword on the same tenant
    REST add tenant                                 A
    REST add vns                                    A                           X1
    REST add vns                                    A                           X2
    REST add vns                                    A                           X3
    REST add router intf                            A                           X1
    REST add router intf                            A                           X2
    REST add router intf                            A                           X3  
    REST add vns ip                                 A                           X1              10.101.0.1              24                  private=true
    sleep                                           2   
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.1              25
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.2              25
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.254            17              
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.255            24
    Should Not Be True                              ${result}
    REST delete vns ip                              A                           X1              10.101.0.1              24
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.1              25
    Should Be True                                  ${result}
    REST delete vns ip                              A                           X2              10.101.0.1              25
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.2              25
    Should Be True                                  ${result}
    REST delete vns ip                              A                           X2              10.101.0.2              25
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.254            17              
    Should Be True                                  ${result}
    REST delete vns ip                              A                           X2              10.101.0.254            17      
    sleep                                           2
    ${result} =                                     REST add vns ip             A               X2                      10.101.0.255            23
    Should Be True                                  ${result}   


L3 intra tenant traffic between private and public subnet with overlapping IP
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add vns ip                             X                               X1                      10.251.1.1              24      private=true    
    REST add vns ip                             Y                               Y1                      10.251.1.1              24
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h2                              bond0.1002
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h2                              10.251.1.11/24          bond0.1002
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
    BASH ping                                   h1                              10.251.1.1              count=5
    BASH ping                                   h2                              10.251.1.1              count=5
    BASH ping                                   h3                              10.251.3.1              count=5
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${mac3} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac3}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h3                      10.251.1.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1

Verify host with different IP on vns router is not getting L3 service
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc2}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h4                              10.251.3.11/24          bond0
    BASH ifconfig ip address                    h6                              10.251.4.11/16          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h4                              10.251.1.0/24           10.251.3.1
    BASH add route                              h6                              10.251.0.0/16           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=5
    BASH ping                                   h4                              10.251.3.1              count=5
    BASH ping                                   h6                              10.251.2.1              count=5
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.251.3.1
    Should Be True                              ${value}    
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Not Be True                          ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${mac3} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac3}
    Should Be True                              ${result}                           
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2_pc2}
    ${state} =                                  Set Variable                    ${result[0]['state']}   
    Should Contain                              ${state}                        L2 Only     
    BASH ifconfig ip address                            h6                              10.251.2.11/24          bond0
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    ${loss} =                                   BASH ping                       h6                      10.251.1.11             count=10
    Should Be True                              ${loss} < 20
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h4                              10.251.1.0/24           10.251.3.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1

Controller HA failover via CLI
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1  
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=30
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=100000           frame_size=128              frame_cnt=4000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1 
    start traffic                               ${stream1}
    sleep                                       5
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       5
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1


Verify host on private segment is able to get dhcp address from tenant dhcp server
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf0_pc2}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add vns ip                             Y                               Y3                      10.252.3.1              24      private=true 
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                      Y                               Y3  
    sleep                                       1
    BASH ping                                   h1                              10.252.1.1              count=5
    ${h1_ip} =                                  BASH get interface ipv4         h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${h1_mac}
    Should Not Be Empty                         ${result}
    sleep                                       1
    BASH ping                                   h1                              10.252.1.1              count=3
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h2                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       5
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1


Controller HA failover via reboot
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1      
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=100000           frame_size=128              frame_cnt=4000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1 
    start traffic                               ${stream1}
    sleep                                       10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    ${value} =                                  CLI verify cluster master reboot
    Should Be True                              ${value}
    sleep                                       10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1 
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
    
        
Reboot spine0 via CLI
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X2                      ${leaf1_a}              ${ixia3}                -1
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=4000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.2.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.2.1                       
    start traffic                               ${stream1}
    sleep  10
    CLI restart switch                          s1
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1
    

Reboot Leaf0 via CLI
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X2                      ${leaf1_a}              ${ixia3}                -1
    BASH ifconfig ip address                            h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                            h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.251.2.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=2000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.2.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.2.1                       
    start traffic                               ${stream1}
    sleep  10
    CLI restart switch                          s3
    sleep                                       30 
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1





Connect and Disconnect spine to controller
#### No longer valid as ztn will prevent config changes to switch
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=2000000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1                       
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    : FOR                                       ${i}                            IN RANGE                1                       5
    \   CLI delete controller                   s1                              c1
    \   CLI delete controller                   s1                              c2
    \   log traffic rate                        tx_rate                         rx_rate                 a                       c
    \   CLI add controller                      s1                              c1
    \   CLI add controller                      s1                              c2
    \   log traffic rate                        tx_rate                         rx_rate                 a                       c
    \   sleep                                   5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
    

Connect and disconnect one leaf in dual tor to controller
#### no longer valid as ztn will prevent config changes to switch
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Not Be True                          ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=2000000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1                       
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    : FOR                                       ${i}                            IN RANGE                1                       5
    \   CLI delete controller                   s3                              c1
    \   CLI delete controller                   s3                              c2
    \   CLI add controller                      s3                              c1
    \   CLI add controller                      s3                              c2
    \   log traffic rate                        tx_rate                         rx_rate                 a                       c
    \   sleep                                   5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
        

Flap link between leaf and spine
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=4000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1                       
    start traffic                               ${stream1}
    sleep                                       5
#    CLI disable interface                       s3                              ${leaf0a_spine0}    
    REST disable fabric interface               ${leaf0_a}                       ${leaf0a_spine0}
   
    sleep                                       5   
    log traffic rate                            tx_rate                         rx_rate                 a                       c
#    CLI enable interface                        s3                              ${leaf0a_spine0}    
    REST enable fabric interface                ${leaf0_a}                              ${leaf0a_spine0}
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
        

Flap bond interface towards host
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    ${vlanid} =                                 Set Variable                    ${result[0]['vlan']}    
    Should Be Equal                             ${vlanid}                       ${1001}     
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    REST disable fabric interface               ${leaf0_a}                         ${leaf0_pc1_intf1}
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    ${vlanid} =                                 Set Variable                    ${result[0]['vlan']}    
    Should Be Equal                             ${vlanid}                       ${1001}     
    sleep                                       5
    REST disable fabric interface               ${leaf0_b}                         ${leaf0_pc1_intf1}
    sleep                                       2   
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be True                          ${result}
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 100      
    sleep                                       1
    REST enable fabric interface                ${leaf0_a}                         ${leaf0_pc1_intf1}
    REST enable fabric interface                ${leaf0_b}                         ${leaf0_pc1_intf1}
    BASH ping                                   h1                              10.251.3.11             count=5
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    ${vlanid} =                                 Set Variable                    ${result[0]['vlan']}    
    Should Be Equal                             ${vlanid}                       ${1001}     
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1


restart ofad on spine
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=2000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1                       
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
#    BASH restart process                        s1                              ofad                    timeout=60
    console bash restart process                s7                              ofad                    timeout=60
    sleep                                       5
#    ${value} =                                  BASH check service status       s1                      ofad
    ${value} =                                  console check service status       s7                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1


restart ofad on leaf
#### restart ofad will reset all interfaces to 10gig, need to manaully adjust interface to autoneg for Ixia port for traffic to resume

    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X3                      ${leaf1_a}              ${ixia3}                -1
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                    h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                    h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#   Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=128              frame_cnt=2000000
    ...                                         src_ip=10.251.1.101             src_cnt=10              src_ip_step=0.0.0.1     src_gw=10.251.1.1       
    ...                                         dst_ip=10.251.3.101             dst_cnt=10              dst_ip_step=0.0.0.1     dst_gw=10.251.3.1                       
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
#    BASH restart process                        s3                              ofad
    console bash restart process                s1                              ofad                    timeout=60
    sleep                                       5
#   CLI execute command                         s3                              debug ofad "autoneg 24"
#   sleep                                       1
    ${value} =                                  console check service status    s3                      ofad
#    ${value} =                                  BASH check service status      s1                      ofad
    Should Contain                              ${value}                        is started  
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1


Verify L3 intra tenant traffic with ip options
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   X                               X2                      ${leaf1_a}              ${ixia3}                -1
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h6                              10.251.2.11/24          bond0
    BASH add route                              h5                              10.251.2.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.251.2.1
    sleep                                       5   
    ${loss} =                                   BASH ping                       h5                              10.251.1.1              count=5                
    Should Not Be True                          ${loss} == 100
    ${loss} =                                   BASH ping                       h6                              10.251.2.1              count=5
    Should Not Be True                          ${loss} == 100
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.1.1          record_route=${true}                count=5 
    Should Be True                              ${loss} == 100  
    BASH delete route                           h5                              10.251.2.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.251.2.1
    

Trigger controller HA failover via CLI and verify dhcp-relay is working
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       5
    BASH ping                                   h1                              10.252.1.1              count=5
    ${h1_ip} =                                  BASH get interface ipv4         h1                      bond0               
    Should Contain                              ${h1_ip}                        10.252.1.9  
    ${h1_mac} =                                 BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${h1_mac}
    Should Not Be Empty                         ${result}
    sleep                                       1
    ## temporary fix
    BASH ping                                   h1                              10.252.1.1              count=5
    sleep                                       1
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       10
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       10
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       5
    BASH run command                            h5                             route -n
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1
    
Trigger controller HA failover via reboot and verify dhcp-relay is working
    BASH ifdown intf                            h1                              bond0
    BASH ifdown intf                            h2                              bond0
    BASH ifdown intf                            h3                              bond0
    BASH ifdown intf                            h4                              bond0   
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0       
#    BASH init intf                              h1                              bond0
#    BASH init intf                              h2                              bond0
    BASH ifup intf                              h1                              bond0
    BASH ifconfig ip address                    h1                              10.252.1.9/24           bond0                   
    BASH start service                          h1                              isc-dhcp-server
    BASH ping                                   h1                              10.252.1.1              count=4
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    BASH add route                              h1                              10.252.3.0/24           10.252.1.1
    REST add dhcp relay                         Y                               Y3                      10.252.1.9
    #REST enable dhcp relay                     Y                               Y3  
    sleep                                       1
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       2
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${value} =                                  BASH verify arp                 h1                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h5                      10.252.3.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    ${value} =                                  CLI verify cluster master reboot
    Should Be True                              ${value}
    sleep                                       10
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    sleep                                       1
    ${ipAddr} =                                 BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr}
    sleep                                       10
    BASH ping                                   h1                              ${ipAddr}               count=10
    ${loss} =                                   BASH ping                       h1                      ${ipAddr}           count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h1                              10.252.3.0/24           10.252.1.1

Verify arp agent functionality after controller HA failover via CLI
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete arp                             h1                              10.251.1.1
    BASH delete arp                             h3                              10.251.3.1
    sleep                                       1
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       5
    BASH ping                                   h1                              10.251.3.11             count=5
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} < 20        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
    
    
Verify arp agent functionality after controller HA failover via reboot
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X3                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifconfig ip address                            h1                              10.251.1.11/24          bond0.1001
    BASH ifconfig ip address                            h3                              10.251.3.11/24          bond0.1003
    BASH add route                              h1                              10.251.3.0/24           10.251.1.1
    BASH add route                              h3                              10.251.1.0/24           10.251.3.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.251.3.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete arp                             h1                              10.251.1.1
    BASH delete arp                             h3                              10.251.3.1
    sleep                                       1
    ${value} =                                  CLI verify cluster master reboot
    Should Be True                              ${value}
    sleep                                       5
    BASH ping                                   h1                              10.251.3.11             count=5
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.3.1
    Should Be True                              ${value}        
    ${loss} =                                   BASH ping                       h1                      10.251.3.11             count=10
    Should Be True                              ${loss} < 20        
    BASH delete route                           h1                              10.251.3.0/24           10.251.1.1
    BASH delete route                           h3                              10.251.1.0/24           10.251.3.1
    
Verify same mac address showing up on two ports in the same segment is blocked
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            1003
    REST add portgroup to vns                   X                               X2                      ${leaf1_pc2}            1004
    REST enable endpoint flap protection
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH add tag                                h4                              bond0                   1004
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH ifup intf                              h4                              bond0.1004
    BASH init intf                              h1                              bond0.1001
    BASH init intf                              h3                              bond0.1003
    BASH init intf                              h4                              bond0.1004
    BASH ifconfig ip address                    h1                              10.251.1.11/24          bond0.1001
    BASH add route                              h1                              10.251.0.0/16           10.251.1.1
    sleep                                       2
    BASH ping                                   h1                              10.251.1.1              count=5
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH set mac address                        h3                              bond0                   ${mac1}
    BASH set mac address                        h3                              bond0.1003              ${mac1}
    BASH ifconfig ip address                    h3                              10.251.1.11/24          bond0.1003
    BASH add route                              h3                              10.251.0.0/16           10.251.1.1
    sleep                                       1
    BASH ping                                   h3                              10.251.1.1              count=10
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf1_pc1}
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}
    BASH run command                            h1                              ping 10.251.1.1 > /tmp/echo1.txt &
    sleep                                       1
    ${string} =                                 BASH run command                h1                      echo $!
    ${pid1} =                                   Set Variable                    ${string[0]} 
    sleep                                       1
    BASH run command                            h3                              ping 10.251.1.1 > /tmp/echo1.txt &
    sleep                                       1
    ${string} =                                 BASH run command                h3                      echo $!
    ${pid2} =                                   Set Variable                    ${string[0]} 
    sleep                                       10
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${state} =                                  Set Variable                    ${result[0]['state']}    
    Should Contain                              ${state}                        Blocked
    sleep                                       1
    BASH run command                            h3                              kill -9 ${pid2}
    sleep                                       1
    BASH network restart                        h3                              timeout=60
    sleep                                       300
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${state} =                                  Set Variable                    ${result[0]['state']}    
    Should Contain                              ${state}                        Active
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH run command                            h1                              kill -9 ${pid1}
    BASH delete route                           h1                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.251.1.1
    REST disable endpoint flap protection

Verify clear blocked endpoint works
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST enable endpoint flap protection
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH init intf                              h1                              bond0.1001
    BASH init intf                              h3                              bond0.1003
    BASH ifconfig ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add route                              h1                              10.251.0.0/16           10.251.1.1
    sleep                                       2
    BASH ping                                   h1                              10.251.1.1              count=5
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH set mac address                        h3                              bond0                   ${mac1}
    BASH set mac address                        h3                              bond0.1003              ${mac1}
    BASH ifconfig ip address                    h3                              10.251.1.11/24          bond0.1003
    BASH add route                              h3                              10.251.0.0/16           10.251.1.1
    sleep                                       1
    BASH ping                                   h3                              10.251.1.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf1_pc1}
    BASH run command                            h1                              ping 10.251.1.1 > /tmp/echo1.txt &
    sleep                                       1
    ${string} =                                 BASH run command                h1                      echo $!
    ${pid1} =                                   Set Variable                    ${string[0]} 
    BASH run command                            h3                              ping 10.251.1.1 > /tmp/echo1.txt &
    sleep                                       1
    ${string} =                                 BASH run command                h3                      echo $!
    ${pid2} =                                   Set Variable                    ${string[0]} 
    sleep                                       10
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${state} =                                  Set Variable                    ${result[0]['state']}    
    Should Contain                              ${state}                        Blocked
    sleep                                       1
    BASH run command                            h3                              kill -9 ${pid2}
    sleep                                       1
    BASH network restart                        h3                              timeout=60
    sleep                                       5
    REST clear blocked endpoint                 X                               X1                      ${mac1}
    sleep                                       5
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${state} =                                  Set Variable                    ${result[0]['state']}    
    Should Contain                              ${state}                        Active
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH run command                            h1                              kill -9 ${pid1}
    BASH delete route                           h1                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.251.1.1
    REST disable endpoint flap protection
    

Verify blocked endpoint should be automatically cleared
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST enable endpoint flap protection
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X1                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH init intf                              h1                              bond0.1001
    BASH init intf                              h3                              bond0.1003
    BASH ifconfig ip address                    h1                              10.251.1.11/24          bond0.1001
    BASH add route                              h1                              10.251.0.0/16           10.251.1.1
    sleep                                       2
    BASH ping                                   h1                              10.251.1.1              count=5
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH set mac address                        h3                              bond0                   ${mac1}
    BASH set mac address                        h3                              bond0.1003              ${mac1}
    BASH ifconfig ip address                    h3                              10.251.1.11/24          bond0.1003
    BASH add route                              h3                              10.251.0.0/16           10.251.1.1
    sleep                                       1
    BASH ping                                   h3                              10.251.1.1              count=10
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf1_pc1}
    BASH run command                            h1                              ping 10.251.1.1 > /tmp/echo1.txt &
    sleep                                       1
    ${string} =                                 BASH run command                h1                      echo $!
    ${pid1} =                                   Set Variable                    ${string[0]} 
    BASH run command                            h3                              ping 10.251.1.1 > /tmp/echo1.txt &
    sleep                                       1
    ${string} =                                 BASH run command                h3                      echo $!
    ${pid2} =                                   Set Variable                    ${string[0]} 
    sleep                                       10
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${state} =                                  Set Variable                    ${result[0]['state']}    
    Should Contain                              ${state}                        Blocked
    sleep                                       1
    BASH run command                            h3                              kill -9 ${pid2}
    sleep                                       1
    BASH network restart                        h3                              timeout=60
    sleep                                       600
    ${result} =                                 REST show endpoints mac         ${mac1}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${state} =                                  Set Variable                    ${result[0]['state']}    
    Should Contain                              ${state}                        Active
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH run command                            h1                              kill -9 ${pid1}
    BASH delete route                           h1                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.251.1.1
    REST disable endpoint flap protection
        
    
    
initialize host
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}
    BASH delete tag                             h2                              bond0.1002              soft_error=${true}
    BASH delete tag                             h3                              bond0.1003              soft_error=${true}
    BASH delete tag                             h4                              bond0.1004              soft_error=${true}
    BASH delete tag                             h5                              bond0.1005              soft_error=${true}
    BASH delete tag                             h6                              bond0.1006              soft_error=${true}
    BASH init intf                              h1                              eth1
    BASH init intf                              h1                              eth2
    BASH init intf                              h1                              eth3
    BASH init intf                              h2                              eth1
    BASH init intf                              h2                              eth2
    BASH init intf                              h2                              eth3
    BASH init intf                              h3                              eth1
    BASH init intf                              h3                              eth2
    BASH init intf                              h3                              eth3
    BASH init intf                              h4                              eth1
    BASH init intf                              h4                              eth2
    BASH init intf                              h4                              eth3
    BASH init intf                              h5                              eth1
    BASH init intf                              h5                              eth2
    BASH init intf                              h5                              eth3
    BASH init intf                              h6                              em2
    BASH init intf                              h6                              eth1
    BASH init intf                              h6                              p1p1
    BASH init intf                              h6                              p1p2
    BASH init intf                              h1                              bond0
    BASH init intf                              h2                              bond0
    BASH init intf                              h3                              bond0
    BASH init intf                              h4                              bond0
    BASH init intf                              h5                              bond0
    BASH init intf                              h6                              bond0
    BASH run command                            h1                              ifdown bond0
    BASH run command                            h2                              ifdown bond0
    BASH run command                            h3                              ifdown bond0
    BASH run command                            h4                              ifdown bond0
    BASH run command                            h5                              ifdown bond0
    BASH run command                            h6                              ifdown bond0
    ${version} =                                BASH lsb release                h1
    ${intf1} =                                  Set Variable If                 ${version} == 12            eth2            p1p1
    ${intf2} =                                  Set Variable If                 ${version} == 12            eth3            p1p2
    BASH run command                            h1                              ifup ${intf1}
    BASH run command                            h1                              ifup ${intf2}
    ${version} =                                BASH lsb release                h2
    ${intf1} =                                  Set Variable If                 ${version} == 12            eth2            p1p1
    ${intf2} =                                  Set Variable If                 ${version} == 12            eth3            p1p2
    BASH run command                            h2                              ifup ${intf1}
    BASH run command                            h2                              ifup ${intf2}
    ${version} =                                BASH lsb release                h3
    ${intf1} =                                  Set Variable If                 ${version} == 12            eth2            p1p1
    ${intf2} =                                  Set Variable If                 ${version} == 12            eth3            p1p2
    BASH run command                            h3                              ifup ${intf1}
    BASH run command                            h3                              ifup ${intf2}
    ${version} =                                BASH lsb release                h4
    ${intf1} =                                  Set Variable If                 ${version} == 12            eth2            p1p1
    ${intf2} =                                  Set Variable If                 ${version} == 12            eth3            p1p2
    BASH run command                            h4                              ifup ${intf1}
    BASH run command                            h4                              ifup ${intf2}
    ${version} =                                BASH lsb release                h5
    ${intf1} =                                  Set Variable If                 ${version} == 12            eth2            p1p1
    ${intf2} =                                  Set Variable If                 ${version} == 12            eth3            p1p2
    BASH run command                            h5                              ifup ${intf1}
    BASH run command                            h5                              ifup ${intf2}
    ${version} =                                BASH lsb release                h6
    ${intf1} =                                  Set Variable If                 ${version} == 12            eth2            p1p1
    ${intf2} =                                  Set Variable If                 ${version} == 12            eth3            p1p2
    BASH run command                            h6                              ifup ${intf1}
    BASH run command                            h6                              ifup ${intf2}
    BASH release dhcpv4 address                 h1                              bond0
    BASH release dhcpv4 address                 h2                              bond0
    BASH release dhcpv4 address                 h3                              bond0
    BASH release dhcpv4 address                 h4                              bond0
    BASH release dhcpv4 address                 h5                              bond0
    BASH release dhcpv4 address                 h6                              bond0
    ${result} =                                 BASH run command                h1                     ifconfig
    log                                         host1 ifconfig is ${result}
    ${result} =                                 BASH run command                h2                     ifconfig
    log                                         host2 ifconfig is ${result}
    ${result} =                                 BASH run command                h3                     ifconfig
    log                                         host3 ifconfig is ${result}
    ${result} =                                 BASH run command                h4                     ifconfig
    log                                         host4 ifconfig is ${result}
    ${result} =                                 BASH run command                h5                     ifconfig
    log                                         host5 ifconfig is ${result}
    ${result} =                                 BASH run command                h6                     ifconfig
    log                                         host6 ifconfig is ${result}
    BASH stop service                           h1                              isc-dhcp-server
    


test setup topology
    initialize host
    sleep                                           1
#   Start Floodlight Monitor 
    REST add tenant                                 X
    REST add tenant                                 Y
    REST add tenant                                 Z
    REST add vns                                    X                           X1
    REST add vns                                    X                           X2
    REST add vns                                    X                           X3
    REST add vns                                    Y                           Y1
    REST add vns                                    Y                           Y2
    REST add vns                                    Y                           Y3
    REST add vns                                    Z                           Z1
    REST add vns                                    Z                           Z2
    REST add vns                                    Z                           Z3
    REST add router intf                            X                           X1
    REST add router intf                            X                           X2
    REST add router intf                            X                           X3
    REST add router intf                            Y                           Y1
    REST add router intf                            Y                           Y2
    REST add router intf                            Y                           Y3
    REST add router intf                            Z                           Z1
    REST add router intf                            Z                           Z2
    REST add router intf                            Z                           Z3
    REST add vns ip                                 X                           X1              10.251.1.1              24  
    REST add vns ip                                 X                           X2              10.251.2.1              24  
    REST add vns ip                                 X                           X3              10.251.3.1              24  
    REST add vns ip                                 Y                           Y1              10.252.1.1              24  
    REST add vns ip                                 Y                           Y2              10.252.2.1              24  
    REST add vns ip                                 Y                           Y3              10.252.3.1              24  
    REST add vns ip                                 Z                           Z1              10.253.1.1              24  
    REST add vns ip                                 Z                           Z2              10.253.2.1              24  
    REST add vns ip                                 Z                           Z3              10.253.3.1              24  

 
test teardown topology
    stop traffic                                   
    sleep                                           1
    delete traffic
    REST delete vns ip                              X                           X1              10.251.1.1              24  
    REST delete vns ip                              X                           X2              10.251.2.1              24  
    REST delete vns ip                              X                           X3              10.251.3.1              24  
    REST delete vns ip                              Y                           Y1              10.252.1.1              24  
    REST delete vns ip                              Y                           Y2              10.252.2.1              24  
    REST delete vns ip                              Y                           Y3              10.252.3.1              24  
    REST delete vns ip                              Z                           Z1              10.253.1.1              24  
    REST delete vns ip                              Z                           Z2              10.253.2.1              24  
    REST delete vns ip                              Z                           Z3              10.253.3.1              24  
    REST delete vns                                 X                           X1
    REST delete vns                                 X                           X2
    REST delete vns                                 X                           X3
    REST delete vns                                 Y                           Y1
    REST delete vns                                 Y                           Y2
    REST delete vns                                 Y                           Y3
    REST delete vns                                 Z                           Z1
    REST delete vns                                 Z                           Z2
    REST delete vns                                 Z                           Z3
    REST delete tenant                              X
    REST delete tenant                              Y
    REST delete tenant                              Z
#   Stop Floodlight Monitor 
#    initialize host
#    BASH ifdown intf                                    h3                          bond0
#    BASH restart networking service                 h1                          timeout=60
#    BASH restart networking service                 h3                          timeout=60
#    BASH restart networking service                 h6                          timeout=60


T5 base suite setup
    base suite setup
    add fabric switch
    #BASH network restart                            h1                                timeout=60
    #BASH network restart                            h2                                timeout=60
    #BASH network restart                            h3                                timeout=60
    #BASH network restart                            h4                                timeout=60
    #BASH network restart                            h5                                timeout=60
    #BASH restart service                            h6                                networking              timeout=60   
    sleep                                           5
#    ${result} =                                     CLI verify controller       s1                          c1      
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s1                          c2
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s2                          c1
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s2                          c2
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s3                          c1
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s3                          c2
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s4                          c1
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s4                          c2
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s5                          c1
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s5                          c2
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s6                          c1
#    Should Be True                                  ${result}
#    ${result} =                                     CLI verify controller       s6                          c2
#    Should Be True                                  ${result}       
    REST add portgroup                              ${leaf0_pc1}
    REST add portgroup                              ${leaf0_pc2}
    REST add portgroup                              ${leaf1_pc1}
    REST add portgroup                              ${leaf1_pc2}
    REST add portgroup                              ${leaf2_pc1}
    REST add portgroup                              ${leaf2_pc2}
    REST add interface to portgroup                 leaf0-a                     ${leaf0_pc1_intf1}                  ${leaf0_pc1}
    REST add interface to portgroup                 leaf0-b                     ${leaf0_pc1_intf2}                  ${leaf0_pc1}
    REST add interface to portgroup                 leaf0-a                     ${leaf0_pc2_intf1}                  ${leaf0_pc2}
    REST add interface to portgroup                 leaf0-b                     ${leaf0_pc2_intf2}                  ${leaf0_pc2}
    REST add interface to portgroup                 leaf1-a                     ${leaf1_pc1_intf1}                  ${leaf1_pc1}
    REST add interface to portgroup                 leaf1-a                     ${leaf1_pc1_intf2}                  ${leaf1_pc1}
    REST add interface to portgroup                 leaf1-a                     ${leaf1_pc2_intf1}                  ${leaf1_pc2}
    REST add interface to portgroup                 leaf1-a                     ${leaf1_pc2_intf2}                  ${leaf1_pc2}
    REST add interface to portgroup                 leaf2-a                     ${leaf2_pc1_intf1}                  ${leaf2_pc1}
    REST add interface to portgroup                 leaf2-b                     ${leaf2_pc1_intf2}                  ${leaf2_pc1}
    REST add interface to portgroup                 leaf2-a                     ${leaf2_pc2_intf1}                  ${leaf2_pc2}
    REST add interface to portgroup                 leaf2-b                     ${leaf2_pc2_intf2}                  ${leaf2_pc2}    
    REST add portgroup lacp                         ${leaf0_pc1}
    REST add portgroup lacp                         ${leaf0_pc2}
    REST add portgroup lacp                         ${leaf1_pc1}
    REST add portgroup lacp                         ${leaf1_pc2}
    REST add portgroup lacp                         ${leaf2_pc1}
    REST add portgroup lacp                         ${leaf2_pc2}
 
  
T5 base suite teardown
    delete fabric switch  
    #BASH network restart                            h1                                timeout=60
    #BASH network restart                            h2                                timeout=60
    #BASH network restart                            h3                                timeout=60
    #BASH network restart                            h4                                timeout=60
    #BASH network restart                            h5                                timeout=60
    #BASH restart service                            h6                                networking              timeout=60
    REST delete portgroup lacp                          ${leaf0_pc1}
    REST delete portgroup lacp                          ${leaf0_pc2}
    REST delete portgroup lacp                          ${leaf1_pc1}
    REST delete portgroup lacp                          ${leaf1_pc2}
    REST delete portgroup lacp                          ${leaf2_pc1}
    REST delete portgroup lacp                          ${leaf2_pc2}    
    REST delete portgroup                               ${leaf0_pc1}
    REST delete portgroup                               ${leaf0_pc2}
    REST delete portgroup                               ${leaf1_pc1}
    REST delete portgroup                               ${leaf1_pc2}
    REST delete portgroup                               ${leaf2_pc1}
    REST delete portgroup                               ${leaf2_pc2}


verify results   [Arguments]  ${transmitted_frames}  ${received_valid_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report}=  fetch port stats  stream=${stream}  
    ${tx_value}=  verify dict key  ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${stream_name}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value} 
    Log         ${in_range}
   Should be true  ${in_range}  
    
calculate loss   [Arguments]  ${transmitted_frames}  ${received_valid_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report} =     fetch port stats    stream=${stream}  
    ${tx_value} =   verify dict key     ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value} =   verify dict key     ${report}  ${stream_name}  ${received_valid_frames}
    ${loss} =       evaluate            ${tx_value} - ${rx_value}
    Log             ${loss}
    
verify traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log     ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    ixia verify traffic rate  ${tx_value}  ${rx_value} 

log traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log     ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    Log     ${tx_value}
    Log     ${rx_value} 
 

    
