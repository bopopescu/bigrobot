*** Settings ***
Documentation  		Testing ZTN
Suite Setup  		Base Suite Setup
Suite Teardown   	Base Suite Teardown
Test Setup   		Base Test Setup
Test Teardown  		Base Test Teardown
Library  			keywords/BsnCommon.py
Library  			keywords/T5Platform.py
Library  			keywords/T5Utilities.py
Library				keywords/T5ZTN.py

# The purpose of this test suite is to check managing switches with ZTN. Small testbed will be used.
# Test topology: pair of controllers, one spine switch, two leaf switches (Accton).
# For tests which check correct installation of flows on the switches, simple forwarding configuration
# and small traffic rate will be used.
# Larger testbeds will be tested inherently in other testsuites.

# In this Test Suite the following terms will be used:
# - stand-by switch - switch configured on the controller (with MAC address) with no fabric-role specified
# - provisioned switch - switch configured on the controller (with MAC address) with fabric role, forwarding traffic
# - suspended switch - switch connected to fabric but not configured on the controller,
#   or running wrong version of Swith Light, or with incorrect running-config
# - ztn-discovery mode - switch in the phase of booting/searching for ZTN servers with relevant manifest file
# - ZTN configuration, which includes:
#   * configuration mirrored from controller's configuration to switches (NTP, Logging, SNMP)
#   * controllers' IP addresses
#   * per-switch hostname (as switch name on the controller)
#   * per-switch interface configuration (as assigned by DHCP server when switch booted)


*** Variables ***
@{supported_installer_platforms}  powerpc-quanta-lb9-r0  powerpc-quanta-ly2-r0
	...  powerpc-dni-7448-r0  powerpc-as6700-32x-r0  powerpc-as5710-54x-r0a
	...  powerpc-as6700-32x-r0b  powerpc-as5710-54x-r0b
@{supported_swi_platforms}  powerpc-quanta-lb9-r0  powerpc-quanta-ly2-r0
	...  powerpc-as6700-32x-r0  powerpc-as5710-54x-r0a  powerpc-dni-7448-r0


*** Test Cases ***
### Basic image check
T1.1. Verify that images are present on all controllers
	Bash Verify SL Images  node=master
	Bash Verify SL Images  node=slave

T1.2. Verify that manifest files are included in SL image bundles
	Bash Verify SL Manifests  node=master
	Bash Verify SL Manifests  node=slave

T1.3. Check supported platforms of SWI and installer
	@{installer_platforms}=  Bash Get Supported Platforms  installer
	@{swi_platforms}=  Bash Get Supported Platforms  swi
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[0]
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[1]
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[2]
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[3]
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[4]
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[5]
	Should Contain  ${installer_platforms}  @{supported_installer_platforms}[6]
	Should Contain  ${swi_platforms}  @{supported_swi_platforms}[0]
	Should Contain  ${swi_platforms}  @{supported_swi_platforms}[1]
	Should Contain  ${swi_platforms}  @{supported_swi_platforms}[2]
	Should Contain  ${swi_platforms}  @{supported_swi_platforms}[3]
	Should Contain  ${swi_platforms}  @{supported_swi_platforms}[4]

### Switch bring-up
# Bring up out-of-the-box switch
T2.1.1. Verify that switch is successfully provisioned when no fabric role for the switch is specified (stand-by switch)
T2.1.2. Verify that switch is successfully provisioned when no fabric role for the switch is specified (stand-by switch) when switch config says "shutdown"
T2.1.3. Verify that switch is successfully provisioned and flows installed for given spine switch
T2.1.4. Verify that switch is successfully provisioned and no flows for given spine switch when switch config says "shutdown"
T2.1.5. Verify that switch is successfully provisioned and flows installed for given leaf switch
T2.1.6. Verify that switch is successfully provisioned and no flows for given leaf switch when switch config says "shutdown"

# Reboot active switch
T2.2.1. Verify that switch is successfully provisioned when no fabric role for the switch is specified (stand-by switch)
T2.2.2. Verify that switch is successfully provisioned when no fabric role for the switch is specified (stand-by switch) when switch config says "shutdown"
T2.2.3. Verify that switch is successfully provisioned and flows installed for given spine switch
T2.2.4. Verify that switch is successfully provisioned and no flows for given spine switch when switch config says "shutdown"
T2.2.5. Verify that switch is successfully provisioned and flows installed for given leaf switch
T2.2.6. Verify that switch is successfully provisioned and no flows for given leaf switch when switch config says "shutdown"

### Regular operations
T3.1. Verify that after ZTN configuration change, new startup-config is available in manifest / ZTN url for each switch
T3.2. Verify that after ZTN configuration change, admin is notified to trigger reload of configuration on the switch, and that after reload configuration on switch gets updated
T3.3. Change ZTN configuration, do not reload the switch, restore old config (check if reload command on UI is still requested), reload switch - verify that config on switch is correct
T3.4. Change ZTN configuration, do not reload the switch, change config again (check if reload command on UI is still requested), reload switch - verify that config on switch is correct
T3.5. Change ZTN configuration, reload half of switches, restore old config - verify that all switches need to be reloaded
T3.6. Change ZTN configuration, reload half of switches, change config again - verify that all switches need to be reloaded
T3.7. Disconnect all switches from the fabric (ma1 down) then do significant changes in fabric configuration (startup-config template, switch roles) - error should be presented, reconnect the switch - incorrect running config should be noticed by the controller and admin should be notified to take action (reload config on switch)
T3.8. Delete all switches from the controller, reboot all switches (they should keep looking for ZTN server). Copy RC from external source (config://, scp://, file) to running config, watch the fabric come up.

# MAC Replacement
T4.1. Replace provisioned switch's MAC with MAC of powered-down switch, verify correct boot of new switch
T4.2. Replace provisioned switch's MAC with MAC of up but disconnected switch, reconnect, verify correct commissioning
T4.3. Replace provisioned switch's MAC with MAC of suspended switch, verify correct commissioned
T4.4. Replace stand-by switch's MAC with MAC of powered-down switch, verify correct boot of new switch
T4.5. Replace stand-by switch's MAC with MAC of up but disconnected switch, reconnect, verify correct commissioning
T4.6. Replace stand-by switch's MAC with MAC of suspended switch, verify correct commissioned
T4.7. Swap MAC addresses of two stand-by switches
T4.8. Swap MAC addresses of two provisioned switches


### ZTN handling config changes
## *after config change controller should should present error message that switch is not connected

# Switch in provisioned mode
T5.1.1. Power down, change config
	Verify Switch Mode  ${switch}  provisioned
	Switch Power Down  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.1.2. Power down, delete
	Verify Switch Mode  ${switch}  provisioned
	Switch Power Down  ${switch}
	Delete Switch  ${switch}
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

T5.1.3. Power down, change config, failover
	Verify Switch Mode  ${switch}  provisioned
	Switch Power Down  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Failover
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.1.4. Power down, delete, failover
	Verify Switch Mode  ${switch}  provisioned
	Switch Power Down  ${switch}
	Delete Switch  ${switch}
	Failover
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

# Switch in stand-by mode
T5.2.1. Power down, change config
	Verify Switch Mode  ${switch}  stand-by
	Switch Power Down  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  provisioned
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  provisioned
	Verify Switch Config  ${switch}

T5.2.2. Power down, delete
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Mode  ${switch}  provisioned
	Switch Power Down  ${switch}
	Delete Switch  ${switch}
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

T5.2.3. Power down, change config, failover
	Verify Switch Mode  ${switch}  stand-by
	Switch Power Down  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  provisioned
	Failover
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  provisioned
	Verify Switch Config  ${switch}

T5.2.4. Power down, delete, failover
	Verify Switch Mode  ${switch}  stand-by
	Switch Power Down  ${switch}
	Delete Switch  ${switch}
	Failover
	Switch Power Up  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

# Switch in provisioned mode
T5.3.1. Disconnect, change config, reconnect, reload
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Switch Reconnect  ${switch}
	Verify Switch Needs to be Reloaded  ${switch}
	Trigger Switch Config Reload  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.3.2. Disconnect, delete, reconnect, reload (reboot?)
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Delete Switch  ${switch}
	Switch Reconnect  ${switch}
	Verify Switch Needs to be Reloaded  ${switch}
	Trigger Switch Config Reload  ${switch}
	Verify Switch Mode  ${switch}  suspended
#?? what if config changed on the way??, would it be updated?

T5.3.3. Disconnect, change config, reboot
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Switch Reboot  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.3.4. Disconnect, delete, reboot
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Delete Switch  ${switch}
	Switch Reboot  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

T5.3.5. Disconnect, change config, failover, reconnect, reload
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Failover
	Switch Reconnect  ${switch}
	Verify Switch Needs to be Reloaded  ${switch}
	Trigger Switch Config Reload  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.3.6. Disconnect, delete, failover, reconnect, reload (reboot?)
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Delete Switch  ${switch}
	Failover
	Switch Reconnect  ${switch}
	Verify Switch Needs to be Reloaded  ${switch}
	Trigger Switch Config Reload  ${switch}
	Verify Switch Mode  ${switch}  suspended

T5.3.7. Disconnect, change config, failover, reboot
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Failover
	Switch Reboot  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.3.8. Disconnect, delete, failover, reboot
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Delete Switch  ${switch}
	Failover
	Switch Reboot  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

T5.3.9. Disconnect, change config, double failover, reconnect, reload
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Failover
	Failover
	Switch Reconnect  ${switch}
	Verify Switch Needs to be Reloaded  ${switch}
	Trigger Switch Config Reload  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.3.10. Disconnect, delete, double failover, reconnect, reload (reboot?)
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Delete Switch  ${switch}
	Failover
	Failover
	Switch Reconnect  ${switch}
	Verify Switch Needs to be Reloaded  ${switch}
	Trigger Switch Config Reload  ${switch}
	Verify Switch Mode  ${switch}  suspended

T5.3.11. Disconnect, change config, double failover, reboot
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Perform ZTN Config Change
	Change Switch Name  ${switch}  ${new-name}
	Set Switch Mode  ${switch}  stand-by
	Failover
	Failover
	Switch Reboot  ${switch}
	Verify Switch Mode  ${switch}  stand-by
	Verify Switch Config  ${switch}

T5.3.12. Disconnect, delete, double failover, reboot
	Verify Switch Mode  ${switch}  provisioned
	Switch Disconnect  ${switch}
	Delete Switch  ${switch}
	Failover
	Failover
	Switch Reboot  ${switch}
	Verify Switch Mode  ${switch}  ztn-discovery

# Switch in stand-by mode
T5.4.1. Disconnect, change config, reconnect, reload
T5.4.2. Disconnect, delete, reconnect, reload (reboot?)
T5.4.3. Disconnect, change config, reboot
T5.4.4. Disconnect, delete, reboot
T5.4.5. Disconnect, change config, failover, reconnect, reload
T5.4.6. Disconnect, delete, failover, reconnect, reload (reboot?)
T5.4.7. Disconnect, change config, failover, reboot
T5.4.8. Disconnect, delete, failover, reboot
T5.4.9. Disconnect, change config, double failover, reconnect, reload
T5.4.10. Disconnect, delete, double failover, reconnect, reload (reboot?)
T5.4.11. Disconnect, change config, double failover, reboot
T5.4.12. Disconnect, delete, double failover, reboot

# Switch in provisioned mode
T5.5.1. Connected, change config, flap interface, reload
T5.5.2. Connected, delete, flap interface, reload (reboot?)
T5.5.3. Connected, change config, reboot
T5.5.4. Connected, delete, reboot
T5.5.5. Connected, change config, failover, reconnect, reload
T5.5.6. Connected, delete, failover, reconnect, reload (reboot?)
T5.5.7. Connected, change config, failover, reboot
T5.5.8. Connected, delete, failover, reboot
T5.5.9. Connected, change config, double failover, reconnect, reload
T5.5.10. Connected, delete, double failover, reconnect, reload (reboot?)
T5.5.11. Connected, change config, double failover, reboot
T5.5.12. Connected, delete, double failover, reboot

# Switch in stand-by mode
T5.6.1. Connected, change config, flap interface, reload
T5.6.2. Connected, delete, flap interface, reload (reboot?)
T5.6.3. Connected, change config, reboot
T5.6.4. Connected, delete, reboot
T5.6.5. Connected, change config, failover, reconnect, reload
T5.6.6. Connected, delete, failover, reconnect, reload (reboot?)
T5.6.7. Connected, change config, failover, reboot
T5.6.8. Connected, delete, failover, reboot
T5.6.9. Connected, change config, double failover, reconnect, reload
T5.6.10. Connected, delete, double failover, reconnect, reload (reboot?)
T5.6.11. Connected, change config, double failover, reboot
T5.6.12. Connected, delete, double failover, reboot


### Miscellaneous
T6.1. Change startup-config on switch manually, verify that startup-config on switch is synced to the one at the controller after reload
T6.2. Manually change running-config on the switch while switch is connected. Verify that controller is able to notice change and ask the switch to update its configuration and switch is disallowed from the network until config gets updated
T6.3. Manually change running-config on the switch while switch is disconnected. Verify that after reconnecting switch, controller is able to recognize change and ask the switch to update its configuration and switch is disallowed from the network until config gets updated
T6.4. Verify that switch stays in stand-by mode when all controllers go down (until rebooted)
T6.5. Verify that switch stays in provisioned mode when all controllers go down (until rebooted)
T6.6. Verify that controller does platform check for switches, after configuring their MAC address, to see whether they are on the supported platform list
T6.7. Switch running wrong version of switch light, issue reboot, verify new image installed, and switch ok.
T6.8. Issue reboot command for a switch that is not connected - error should be presented
T6.9. Issue reload command for a switch that is not connected - error should be presented
T6.10. Verify that controller caches information about switch from its manifest, and it is available after failover
T6.11. Verify that controller can get list of images stored at switch's flash, and it is available after failover
T6.12. Verify what happens when switch config changes while fabric is operating in headless mode
T6.13. Verify that there is no way to introduce *any* switch config changes from the stand-by controller
T6.14. Verify that switch caches last known good ZTN manifest from the active ZTN server
T6.15. Verify that switch uses cached image after reboot and does not download it again (if no image change)
T6.16. Verify that switch uses cached config after reboot and does not download it again (if no config change)
T6.17. Verify that discovery process succeeds when no NTP servers are available in the network
T6.18. Verify that discovery process succeeds when no DNS servers are available in the network

# Negative
### Verify that discovery process continues indefinitely when:
T7.1. no DHCP servers are available in the network - before Switch Light Install
T7.2. no DHCP servers are available in the network - after Switch Light Install
T7.3. no ZTN servers are available - before Switch Light Install
T7.4. no ZTN servers are available - after Switch Light Install
T7.5. management port of the switch is down - before Switch Light Install
T7.6. management port of the switch is down - after Switch Light Install
T7.7. switch's MAC address is not configured on the controller - before Switch Light Install
T7.8. switch's MAC address is not configured on the controller - after Switch Light Install
T7.9. switch finds manifest for its MAC address, but platform type of the switch is not supported
T7.10. Verify that Switch Light Image download is resumed after connectivity flap
T7.11. Verify that SWI image download is resumed after connectivity flap
T7.12. Verify that ZTN manifest search is resumed after connectivity flap
T7.13. Verify that discovery process times out and restarts when all controllers go down during Switch Light Installer image download
T7.14. Verify that discovery process times out and restarts when all controllers go down during SWI image download
T7.15. Verify that discovery process times out and restarts when all controllers go down during ZTN manifest search
T7.16. Verify that discovery process times out and restarts when connectivity goes down while Switch Light Installer download
T7.17. Verify that discovery process times out and restarts when connectivity goes down while SWI Image download
T7.18. Verify that discovery process times out and restarts when connectivity goes down while searching for ZTN manifests
T7.19. Verify that discovery process restarts when downloaded Switch Light Installer image is corrupted
T7.20. Verify that discovery process restarts when downloaded SWI image is corrupted
T7.21. Verify that discovery process restarts when downloaded manifest file is corrupted
T7.22. Verify that discovery process restarts when switch reboots during Switch Light Installer image download
T7.23. Verify that discovery process restarts when switch reboots during SWI image download
T7.24. Verify that discovery process restarts when switch reboots while searching for ZTN manifests
T7.25. Verify that discovery process restarts when specified image path is invalid
#7.26. Verify following behaviors when switch's MAC gets deleted during switch boot up
T7.27.1 - while Installer download - no SWI download
T7.27.2 - while SWI download - switch undefined (suspended)
T7.27.3 - while image startup - switch undefined (suspended)
#7.28. Verify following behaviors when switch's name is changed during switch boot up
T7.28.1 - while Installer download - correct SWI download and fabric join
T7.28.2 - while SWI download - switch undefined (suspended)
T7.28.3 - while image startup - switch undefined (suspended)
#7.29. Verify following behaviors when ZTN config is changed during switch boot up
T7.29.1 - while Installer download - correct SWI download and fabric join
T7.29.2 - while SWI download - switch undefined (suspended)
T7.29.3 - while image startup - switch undefined (suspended)
#7.30. Verify following behaviors when switch mode (stand-by <-> provisioned) is changed during switch boot up
T7.30.1 - while Installer download - correct SWI download and fabric join
T7.30.2 - while SWI download - switch undefined (suspended)
T7.30.3 - while image startup - switch undefined (suspended)
T7.31. Check what happens when switch's flash is full and it is supposed to download new SL image

# Single node cluster
T7.32.1. Verify that executing "failover" command while a switch is downloading an image does not interrupt the download process
T7.32.2. Verify that rebooting controller while a switch is downloading Installer image is restarted after controller is up again
T7.32.3. Verify that rebooting controller while a switch is downloading SWI image is restarted after controller is up again
T7.32.3. Verify that rebooting controller while a switch is searching for manifest is restarted after controller is up again

# Two-nodes cluster
T7.33.1. Verify that discovery process is restarted when controller failover (graceful) happens during Installer image download
T7.33.2. Verify that discovery process is restarted when controller failover (graceful) happens during SWI image download
T7.33.3. Verify that discovery process is restarted when controller failover (reboot) happens during Installer image download
T7.33.4. Verify that discovery process is restarted when controller failover (reboot) happens during SWI image download
T7.33.5. Verify that decommissioning a standby node from the cluster does not interrupt ZTN server activity (switch downloading an image finishes the process successfully)
T7.33.6. Verify that decommissioning the active node from the cluster does not interrupt ZTN server activity in other way than failing over (switch downloading an image restarts the process and downloads from new active controller)

### Upgrade - only a few general test cases
# There is a separate test plan for upgrade process
T8.1. Pre-staging - verify that works
T8.2. Pre-staging - check behavior when downloading image for pre-staging fails
T8.3. Pre-staging - verify that pre-staging result (success/fail) is visible from controller
T8.4. Pre-staging - verify that pre-staging works if switches connected to controller A, and there was a failover to controller B
T8.5. Upgrade Switch Light Installer
T8.6. Check if upgrade is possible when not all switches are in provisioned mode

### Show
T9.1. Verify that switch configured state can be viewed on the switch
T9.2. Verify that switch operational state can be viewed on the switch
T9.3. Verify that switch configured state can be viewed on the controller
T9.4. Verify that switch operational state can be viewed on the controller
T9.5. Verify that all switch-related 'show' commands are accessible from the controller
T9.6. Verify that there is appropriate command to show ztn status of each switch
