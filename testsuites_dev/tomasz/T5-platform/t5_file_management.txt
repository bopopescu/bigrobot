*** Settings ***
Documentation  		Testing File Management - copying RC to other locations
Suite Setup  		Base Suite Setup
Suite Teardown   	Base Suite Teardown
Test Setup   		Base Test Setup
Test Teardown  		Teardown
Force Tags   		Platform  Sanity  File Management
Library  			keywords/BsnCommon.py
Library  			keywords_dev/tomasz/T5.py
Library        		String


*** Variables ***
${file}				config-file
${config name}		config-config
${config}			config://config-config
${scp location}		recovery@10.197.128.37:config-scp


*** Test Cases ***
T1.1 Copy running config to file
	${status} =  Cli Copy  running-config  ${file}
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with File Line By Line  ${file}
	Should Be True  ${status}

T1.2 Copy running config to config://
	${status} =  Cli Copy  running-config  ${config}
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with Config Line By Line  ${config name}
	Should Be True  ${status}

T1.3 Copy running config to scp://
	${status} =  Cli Copy Running Config to Scp  ${scp location}
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with Scp  ${scp location}
	Should Be True  ${status}
	${status} =  Cli Compare Scp with Running Config  ${scp location}
	Should Be True  ${status}
	Bash Clear Known Hosts


T2.1 Copy running config to file, change RC, verify configs different
	${status} =  Cli Copy  running-config  ${file}
	Should Be True  ${status}
	${tenant}  Generate Random Name  Tenant  5
	Rest Add Tenant  ${tenant}
	${status} =  Cli Compare Running Config with File Line By Line  ${file}
	Should Not Be True  ${status}

T2.2 Copy running config to config://, change RC, verify configs different
	${status} =  Cli Copy  running-config  ${config}
	Should Be True  ${status}
	${tenant}  Generate Random Name  Tenant  5
	Rest Add Tenant  ${tenant}
	${status} =  Cli Compare Running Config with Config Line By Line  ${config name}
	Should Not Be True  ${status}

T2.3 Copy running config to scp://, change RC, verify configs different
	${status} =  Cli Copy Running Config to Scp  ${scp location}
	Should Be True  ${status}
	${tenant}  Generate Random Name  Tenant  5
	Rest Add Tenant  ${tenant}
	${status} =  Cli Compare Running Config with Scp  ${scp location}
	Should Not Be True  ${status}
	${status} =  Cli Compare Scp with Running Config  ${scp location}
	Should Not Be True  ${status}
	Bash Clear Known Hosts


T3.1 Delete file with RC
	${status} =  Cli Copy  running-config  ${file}
	Should Be True  ${status}
	${status} =  Cli Delete Running Config File  ${file}
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with File Line By Line  ${file}
	Should Not Be True  ${status}

T3.2 Delete config:// with RC
	${status} =  Cli Copy  running-config  ${config}
	Should Be True  ${status}
	${status} =  Cli Delete Running Config Config File  ${config name}
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with Config Line By Line  ${config name}
	Should Not Be True  ${status}


T4.1 Copy running config to file, change RC, restore, verify no change in RC
	${status} =  Cli Copy  running-config  ${file}
	Should Be True  ${status}
	${tenant}  Generate Random Name  Tenant  5
	Rest Add Tenant  ${tenant}
	${status} =  Cli Copy  running-config  backup
	Should Be True  ${status}
	${status} =  Cli Copy  ${file}  running-config
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with File Line By Line  backup
	Should Be True  ${status}

T4.2 Copy running config to config://, change RC, restore, verify old RC restored
	${status} =  Cli Copy  running-config  ${config}
	Should Be True  ${status}
	${tenant}  Generate Random Name  Tenant  5
	Rest Add Tenant  ${tenant}
	${status} =  Cli Copy  ${config}  running-config
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with Config Line By Line  ${config name}
	Should Be True  ${status}

T4.3 Copy running config to scp://, change RC, restore, verify no change in RC
	${status} =  Cli Copy Running Config to Scp  ${scp location}
	Should Be True  ${status}
	${tenant}  Generate Random Name  Tenant  5
	Rest Add Tenant  ${tenant}
	${status} =  Cli Copy  running-config  backup
	Should Be True  ${status}
	${status} =  Cli Copy Scp to Running Config  ${scp location}
	Should Be True  ${status}
	${status} =  Cli Compare Running Config with File Line By Line  backup
	Should Be True  ${status}

T5.1 Copy running config to file, copy RC from file to other file, verify
T5.2 Copy running config to file, copy RC from file to scp://, verify
T5.3 Copy running config to config://, copy RC from config:// to file, verify
T5.4 Copy running config to config://, copy RC from config:// to scp://, verify
T5.5 Copy running config to scp://, copy RC from scp:// to file, verify
T5.6 (?) Copy running config to scp://, copy RC from scp:// to image, verify (negative test case)

T6.1 Verify correct processing of special characters in file name
T6.2 Verify correct processing of special characters in config:// name
T6.3 Verify correct processing of special characters in scp:// name (?)
T6.4 Verify empty file name is not allowed
T6.5 Verify empty config:// name is not allowed
T6.6 Verify empty scp:// name is not allowed

T7.1 Verify comparison function between running-config and file
T7.1 Verify comparison function between running-config and config://
T7.1 Verify comparison function between running-config and scp://
T7.1 Verify comparison function between file and config://
T7.1 Verify comparison function between file and running-config
T7.1 Verify comparison function between file and scp://
T7.1 Verify comparison function between file and file
T7.1 Verify comparison function between scp:// and file
T7.1 Verify comparison function between scp:// and image://
T7.1 Verify comparison function between scp:// and config://
T7.1 Verify comparison function between scp:// and running-confing
T7.1 Verify comparison function between config:// and file
T7.1 Verify comparison function between config:// and config://
T7.1 Verify comparison function between config:// and scp://
T7.1 Verify comparison function between config:// and running-config






*** Keywords ***
Generate Random Name
	[Arguments]  ${prefix}  ${suffix_len}
    ${regex}  Generate Random String  ${suffix_len}  [NUMBERS]
    ${name}  Catenate  SEPARATOR=  ${prefix}  ${regex}
    [Return]  ${name}


Teardown
	Bash Clear Known Hosts
	Base Test Teardown