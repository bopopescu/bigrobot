* Settings
Documentation    T5 Test Suite
Suite Setup      T5 longevity suite setup
Suite Teardown   T5 longevity suite teardown
Test Setup       T5 base test setup 
Test Teardown    T5 base test teardown 
Force Tags       IronHorse   T5
Library		keywords/BsnCommon.py
Library		keywords/Controller.py
Library		keywords/Mininet.py
Library		keywords/Host.py
Library		keywords/Ixia.py
Library		keywords/T5.py
Library		keywords/T5L3.py
Library		keywords/T5Platform.py
Library		keywords/Controller.py
Library		keywords/SwitchLight.py
Library		keywords/T5Utilities.py
Library		keywords/T5ZTN.py
Library        OperatingSystem
 
* Variable
${short}  1
${medium}  3
${long}   30
${verylong}      120 
${linkflap}   120
${inevent}       300
${betweenevent}  600

${Tflapnum}     100 
${Vflapnum}     100 
${bigconfigsleep}  300 


${loop}        10
${repeat}      60


${leaf0-a}     leaf0-a
${leaf0-b}     leaf0-b
${leaf1-a}     leaf1-a
${leaf1-b}     leaf1-b
 

${spine0}      spine0
 
* Test Case
 
 

T21 spine switch node down/up event 	 
    : FOR    ${i}    IN RANGE    0    ${loop}
    \	Log To Console   \n******* spine switch node down/up event: ${i}********   
    \	switch node down/up event      ${spine0} 
    \   sleep  ${inevent}
         
	[Tags] 	longevity   traffic    event     

T22 leaf switch node down/up event 	 
    : FOR    ${i}    IN RANGE    0    ${loop}
    \	Log To Console   \n******* spine switch node down/up event: ${i}********   
    \	switch node down/up event      ${leaf0-a} 
    \   sleep  ${inevent}
    \	switch node down/up event      ${leaf0-b} 
    \   sleep  ${inevent}
    \	switch node down/up event      ${leaf1-a} 
    \   sleep  ${inevent}
    \	switch node down/up event      ${leaf1-b} 
    \   sleep  ${inevent}
    
         
	[Tags] 	longevity   traffic    event    

	    
T23 controller node event failover        
     : FOR    ${i}    IN RANGE    0    ${loop}
    \	Log To Console   \n******* controller node failover: ${i}*******    
    \	controller node event HA failover     ${inevent}
    \   sleep   ${inevent}
        
	[Tags] 	longevity    traffic     event     skipped
 
 
T27 data Link down/up event between leaf and spine
    : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* data Link down/up event between leaf and spine ${i}******* 
	\  data Link down/up event between nodes  ${leaf1-a}    ${spine0} 	
	\  sleep  ${linkflap}  
	\  data Link down/up event between nodes  ${spine0}    ${leaf1-a} 
	\  sleep  ${linkflap} 	
	\  data Link down/up event between nodes  ${leaf1-b}    ${spine0} 
	\  sleep  ${linkflap}  	
	\  data Link down/up event between nodes  ${spine0}    ${leaf1-b} 
	\  sleep  ${linkflap} 
	\  data Link down/up event between nodes  ${leaf0-a}    ${spine0} 	
	\  sleep  ${linkflap}  
	\  data Link down/up event between nodes  ${spine0}    ${leaf0-a} 
	\  sleep  ${linkflap} 	
	\  data Link down/up event between nodes  ${leaf0-b}    ${spine0} 
	\  sleep  ${linkflap}  	
	\  data Link down/up event between nodes  ${spine0}    ${leaf0-b} 
  	\  sleep  ${inevent}  
 	
   
	[Tags] 	longevity     traffic     event    


  

T26 big configuration changes (around 500 tenants)
     : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* big configuration changes tenant ${i}******* 
 	\  tenant configuration add/remove      ${Tflapnum}       3       
 	\  sleep  ${bigconfigsleep}  
   	
	[Tags] 	longevity     traffic    event  


T25 big configuration changes (around 500 vns change)
     : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* big configuration changes vns ${i}******* 
  	\  vns configuration add/remove         ${Vflapnum}               
 	\  sleep  ${bigconfigsleep}  
  	
	[Tags] 	longevity     traffic    event      

 
T51 continues Event
   	log  randomize all the event test cases from T23 to T30
    ${loop}=  Set Variable   1	
    : FOR   ${index}    IN RANGE    0    ${repeat}	
	\  Log To Console   "\n========******* in continues event loop: ${index} out of ${repeat} ******====== " 
	\  ${random}=	Evaluate	 random.randint(1,6)    random,sys
	\  Log To Console   "--------random number is ${random} --------" 
	\  Run Keyword if    ${random}==1   T21 spine switch node down/up event 
	\  Run Keyword if    ${random}==6   T22 leaf switch node down/up event 		 
	\  Run Keyword if    ${random}==2   T27 data Link down/up event between leaf and spine       
	\  Run Keyword if    ${random}==3   T28 data Link down/up event between leafs 
	\  Run Keyword if    ${random}==4   T26 big configuration changes (around 500 tenants or vns change) 
	\  Run Keyword if    ${random}==5   T25 big configuration changes (around 500 vns change) 	
  	\  sleep  ${betweenevent}
   
	[Tags] 	longevity    traffic     



 

	  

* Keywords

switch node down/up event   [Arguments]    ${node}
	log  reload switch
	Log To Console   ================ Rebooting ${node} ===============
	cli_reboot_switch    master     ${node} 
	cli   master   ''
	sleep   ${long}	
	Wait Until Keyword Succeeds   10 min  30 sec   Verify all switches connected back 

Verify all switches connected back
 	${switches}=  rest_get_disconnect_switch
 	cli   master   ''
	log   the disconnected switches are ${switches}  	
	Should Be Empty   ${switches}	
 
 
controller node event HA failover    [Arguments]    ${during}=30
    Log To Console   =============HA failover ===============
    cli_cluster_take_leader
    cli   master   ''
    sleep  ${during}   
    cli   master   '' 
    clear stats in controller switch	  

controller node event reboot master    [Arguments]    ${during}=30
    Log To Console   ================ Rebooting controller ===============
    cli_verify_cluster_master_reboot 
    cli   master   ''
    sleep  ${during}
 
controller node event reboot slave    [Arguments]    ${during}=30
    Log To Console   ================ Rebooting controller ===============
    cli_verify_cluster_slave_reboot 
    cli   master   ''
    sleep  ${during}


data Link down/up event between nodes   [Arguments]    ${node1}    ${node2}
    Log To Console   ================ data link down/up for ${node1} ${node2} ===============
	log  disable/enable link from leaf to spine			 
	${list}=  disable links between nodes   ${node1}    ${node2}
	log   list is ${list} 
 	sleep    ${medium}  
 	cli   master   ''	
	enable links between nodes 	${node1}   ${list}
	cli   master   ''


disable links between nodes    [Arguments]   ${node1}   ${node2} 
	cli  master   show running-config switch 
	cli  master   show link
	
	${list}=    cli_get_links_nodes_list     ${node1}   ${node2} 
 	: FOR    ${int}   IN   @{list}   
	\  	rest_disable_fabric_interface		${node1}  ${int}  
	\   sleep  ${medium}
 	Return From Keyword   ${list}

enable links between nodes   [Arguments]   ${node1}   ${list} 
	cli  master   show running-config switch
	cli  master   show link	
 	: FOR    ${int}   IN   @{list}   
	\  	rest_enable_fabric_interface		${node1}  ${int}  
	\   check fabric debug event    ${node1}  ${int} 
	\    sleep  ${medium}
	cli   master   ''


 
tenant configuration add/remove    [Arguments]    ${Tnumber}   ${Vnumber}    ${sleep}=1
    Log To Console   ================tenant configuration changes: ${Tnumber}===============
 	clear stats in controller switch	     
	enable  master  copy running-config config://config_tenant_old
	cli     master   ''
	log  big scale configuration tenant add	
	rest_add_tenant_vns_scale    tenantcount=${Tnumber}   tname=FLAP     vnscount=${Vnumber}   vns_ip=yes  base=1.1.1.1    step=0.0.1.0		 
	cli  master  show running-config tenant FLAP0
	${vlan}=    Set Variable   1000
    : FOR    ${j}    IN RANGE    0     ${Tnumber}
    \	rest_add_interface_to_all_vns      FLAP${j}     ${leaf1-a}    ethernet3  vlan=${vlan}
    \  	cli  master  show running-config tenant FLAP${j}
#    \   rest_add_l3_endpoint_to_all_vns       FLAP${j}     ${leaf1-a}    ethernet3  vlan=${vlan} 
    \   cli  master  show running-config tenant FLAP${j}
    \   ${vlan}=  expr  ${vlan} + ${Vnumber}
	\   sleep   ${sleep}
	cli    master     show running-config tenant   timeout=120
	enable  master  copy running-config config://config_tenant_new	
	log  big scale configuration tenant delete
	
    : FOR    ${j}    IN RANGE    0     ${Tnumber}
    \ 	config    master     no tenant FLAP${j}
    
	cli    master     show running-config tenant  timeout=120
   	

vns configuration add/remove    [Arguments]   ${Vnumber}      ${sleep}=1
    Log To Console   ================ vns configuration changes: ${Vnumber}===============
	enable  master  copy running-config config://config_vns_old
	cli     master  ''
	${vlan}=    Set Variable   1000    
	rest_add_tenant_vns_scale    tenantcount=1   tname=FLAP    vnscount=${Vnumber}   vns_ip=yes  base=1.1.1.1    step=0.0.1.0		 
	rest_add_interface_to_all_vns      FLAP0     ${leaf1-a}    ethernet3   vlan=${vlan}	
	sleep   ${sleep}	 
	cli    master     show running-config tenant	timeout=120
	enable  master  copy running-config config://config_vns_new
	cli    master   ''
 	log  big scale configuration tenant delete
 	config    master   tenant FLAP0
	${vns}=  expr  1 + ${Vnumber}
    : FOR    ${j}    IN RANGE    1     ${vns}
    \ 	config    master    no segment V${j}
	config    master   logical-router    
    : FOR    ${j}    IN RANGE    1     ${vns}
    \ 	config    master    no interface segment V${j}   
	config    master    no tenant FLAP0      
	enable    master     show running-config tenant	 timeout=120	
 	cli       master   ''

clear stats in controller switch
	enable    master  clear switch all interface all counters 
#	rest_clear_vns_stats
#	rest_clear_fabric_interface_stats
 	cli       master   ''
 	 
T5 longevity suite setup
   base suite setup
    : FOR    ${j}    IN RANGE    0     500
    \ 	config    master     no tenant FLAP${j}
 	cli       master   ''
 		
T5 longevity suite teardown
#   base suite teardown
    sleep  1


T5 base test setup 
   base test setup
 
T5 base test teardown 
    Run Keyword If Test Failed    generate_support
    Run Keyword If Test Failed    check controller top   c2
    Run Keyword If Test Failed    check controller top   c1 
    base test teardown  
     
    
 
 
 
verify switch interface is up	[Arguments]  ${switch}   ${intf}  
	${info}=  rest_get_fabric_interface_info   ${switch}  ${intf}
	Should Be Equal as Strings 		up      ${info['state']}
 
check controller top  [Arguments]  ${node}   
    : FOR    ${j}    IN RANGE    0     5 
    \  bash   ${node}  top -n 1 
    \  sleep  2
 	cli       master   ''

check fabric debug event   [Arguments]  ${node}   ${int}
	cli  master   show debug event module FabricManager event-name fabric-interface-physical-status-change-event | grep -B 2 "swName:${node1}, ifName:${int}, "
 
######## test case keyword

T21 spine switch node down/up event 	 
    : FOR    ${i}    IN RANGE    0    ${loop}
    \	Log To Console   \n******* spine switch node down/up event: ${i}********   
    \	switch node down/up event      ${spine0} 
    \   sleep  ${inevent}
   	    
T22 leaf switch node down/up event 	 
    : FOR    ${i}    IN RANGE    0    ${loop}
    \	Log To Console   \n******* spine switch node down/up event: ${i}********   
    \	switch node down/up event      ${leaf0-a} 
    \   sleep  ${inevent}
    \	switch node down/up event      ${leaf0-b} 
    \   sleep  ${inevent}
    \	switch node down/up event      ${leaf1-a} 
    \   sleep  ${inevent}
    \	switch node down/up event      ${leaf1-b} 
    \   sleep  ${inevent}
      	    
  	     	    
T23 controller node event failover        
     : FOR    ${i}    IN RANGE    0    ${loop}
    \	Log To Console   \n******* controller node failover: ${i}*******    
    \	controller node event HA failover     ${inevent}
    \   sleep   ${inevent}
        
	 

T27 data Link down/up event between leaf and spine
    : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* data Link down/up event between leaf and spine ${i}******* 
	\  data Link down/up event between nodes  ${leaf1-a}    ${spine0} 	
	\  sleep  ${linkflap}  
	\  data Link down/up event between nodes  ${spine0}    ${leaf1-a} 
	\  sleep  ${linkflap} 	
	\  data Link down/up event between nodes  ${leaf1-b}    ${spine0} 
	\  sleep  ${linkflap}  	
	\  data Link down/up event between nodes  ${spine0}    ${leaf1-b} 
	\  sleep  ${linkflap} 
	\  data Link down/up event between nodes  ${leaf0-a}    ${spine0} 	
	\  sleep  ${linkflap}  
	\  data Link down/up event between nodes  ${spine0}    ${leaf0-a} 
	\  sleep  ${linkflap} 	
	\  data Link down/up event between nodes  ${leaf0-b}    ${spine0} 
	\  sleep  ${linkflap}  	
	\  data Link down/up event between nodes  ${spine0}    ${leaf0-b} 
  	\  sleep  ${inevent}  
 	
  
T28 data Link down/up event between leafs 
    : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* date link down/up ${i}******* 
	\  data Link down/up event between nodes  ${leaf1-a}    ${leaf1-b} 	
	\  sleep  ${inevent}  
	\  data Link down/up event between nodes  ${leaf1-b}    ${leaf1-a} 
	\  sleep  ${inevent}  
	\  data Link down/up event between nodes  ${leaf0-a}    ${leaf0-b} 	
	\  sleep  ${inevent}  
	\  data Link down/up event between nodes  ${leaf0-b}    ${leaf0-a} 
	\  sleep  ${inevent}  		
  
 
T26 big configuration changes (around 500 tenants or vns change)
     : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* big configuration changes ${i}******* 
 	\  tenant configuration add/remove      ${Tflapnum}       3       
 	\  sleep  ${bigconfigsleep}  
  	
T25 big configuration changes (around 500 vns change)
     : FOR    ${i}    IN RANGE    0    ${loop}
    \  Log To Console   \n******* big configuration changes vns ${i}******* 
  	\  vns configuration add/remove         ${Vflapnum}               
 	\  sleep  ${bigconfigsleep}  
  	
	  
       