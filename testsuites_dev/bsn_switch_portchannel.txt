*Settings
Documentation  BigSwitch Port Channel Test Suite
Suite Setup  lag suite setup
Suite Teardown  lag suite teardown
Test Setup  base test setup
Test Teardown  base test teardown
Force Tags  SNMP Sanity
Library  keywords/BsnCommon.py
Library  keywords_dev/BsnCommonConfig.py
Library  keywords_dev/BsnCommonShow.py
Library  keywords_dev/BsnSwitchCommon.py


* Variable
${ip_address_1}  10.192.75.7
${ip_address_2}  10.192.75.213
${ip_address_3}  10.192.75.214
${switchlight_version}  SwitchLight 2.0.0-beta1


*Test Case

T5847-1: Verify port-channel (hash-mode:L3) interface (1G links) is up on switch (LB9)  
	verify lag-1glb9-up
	
Verify port-channel (hash-mode:L3) interface shows correct 1G member links on switch (LB9)  
	verify lagmem-1glb9   

Verify port-channel (hash-mode:L3) interface 1G member links are up on switch (LB9)  
	verify lagmem-1glb9up
	
T5847-2: Verify port-channel (hash-mode:L3) interface (10G links) is up on switch (LB9)  
	verify lag-10glb9-up
	
Verify port-channel (hash-mode:L3) interface shows correct 10G member links on switch (LB9)  
	verify lagmem-10glb9   

Verify port-channel (hash-mode:L3) interface 10G member links are up on switch (LB9)  
	verify lagmem-10glb9-up

Verify port-channel (hash-mode:L3) interface (10G links) is up on switch (LY2)  
	verify lag-10gly2-up
	
Verify port-channel (hash-mode:L3) interface shows correct 10G member links on switch (LY2)  
	verify lagmem-10gly2    

Verify port-channel (hash-mode:L3) interface 10G member links are up on switch (LY2)  
	verify lagmem-10gly2-up

T5847-3: Verify port-channel (hash-mode:L3) interface (40G links) is up on switch (LY2)  
	verify lag-40gly2-up
	
Verify port-channel (hash-mode:L3) interface shows correct 40G member links on switch (LY2)  
	verify lagmem-40gly2    

Verify port-channel (hash-mode:L3) interface 40G member links are up on switch (LY2)  
	verify lagmem-40gly2-up

Verify port-channel (hash-mode:L2) interface (1G links) is up on switch (LB9)  
	verify l2-lag-1glb9-up
	
Verify port-channel (hash-mode:L2) interface shows correct 1G member links on switch (LB9)  
	verify l2-lagmem-1glb9   

Verify port-channel (hash-mode:L2) interface 1G member links are up on switch (LB9)  
	verify l2-lagmem-1glb9-up

Verify port-channel (hash-mode:L2) interface (10G links) is up on switch (LB9)  
	verify l2-lag-10glb9-up
	
Verify port-channel (hash-mode:L2) interface shows correct 10G member links on switch (LB9)  
	verify l2-lagmem-10glb9   

Verify port-channel (hash-mode:L2) interface 10G member links are up on switch (LB9)  
	verify l2-lagmem-10glb9-up

Verify port-channel (hash-mode:L2) interface (10G links) is up on switch (LY2)  
	verify l2-lag-10gly2-up
	
Verify port-channel (hash-mode:L2) interface shows correct 10G member links on switch (LY2)  
	verify l2-lagmem-10gly2    

Verify port-channel (hash-mode:L2) interface 10G member links are up on switch (LY2)  
	verify l2-lagmem-10gly2-up

Verify port-channel (hash-mode:L2) interface (40G links) is up on switch (LY2)  
	verify l2-lag-40gly2-up
	
Verify port-channel (hash-mode:L2) interface shows correct 40G member links on switch (LY2)  
	verify l2-lagmem-40gly2    

Verify port-channel (hash-mode:L2) interface 40G member links are up on switch (LY2)  
	verify l2-lagmem-40gly2-up

T5829-1: Verify that when portchannel interface cannot be formed if member links have mismatched speeds (1G and 10G)
	verify T5829-1g10g

T5829-2: Verify that when portchannel interface cannot be formed if member links have mismatched speeds (10G and 40G)
	verify T5829-10g40g

T5839: Disable all member links. Verify that lag interface shows as "down" on both switch and controller
	verify T5839

T5844: Verify log messages are generated for link up/link down events for LAG interfaces
	verify T5844

T5845: Verify switch CLI does not allow member interfaces to be outside the range (1-52)
	verify T5845

T5846: Verify LAG interface can be formed with odd number of member links
	verify T5846

T5848: Verify LAG interface can be formed with maximum number of member links (8 in LB9)
	verify T5848

T5850: Verify LAG interface with just 1 member link
	verify T5850

T5853: Restart process OFAD and verify LAG interface shows up correctly
	verify T5853
	
T5852: Save running-config to startup-config. Reboot switch and verify that LAG interface comes up correctly.
	verify T5852

* Keywords  
lag suite setup
	configure portchannel  ${ip_address_1}  1  49-50  L3
	configure portchannel  ${ip_address_1}  20  1-2  L3         
	configure portchannel  ${ip_address_2}  7  43,44  L3   
	configure portchannel  ${ip_address_2}  30  49,52  L3
#	configure portchannel  ${ip_address_3}  30  49,52  L3  
	sleepnow   30

verify lag-1glb9-up
# Verify portchannel interface is up
	${inft_state}=  return intf state  ${ip_address_1}  port-channel20
	Should Contain  ${inft_state}  up
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_1}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel20
	Should Be True  ${cintf_state}

verify lagmem-1glb9
# Verify portchannel interface correctly reports member interface name
	${member_exists0}=  verify portchannel members  ${ip_address_1}  20  ethernet1
	Should Be True  ${member_exists0}
	${member_exists1}=  verify portchannel members  ${ip_address_1}  20  ethernet2
	Should Be True  ${member_exists1}
	
verify lagmem-1glb9up
# Verify portchannel interface correctly reports member interfaces as up
	${member_isup0}=  verify portchannel member state  ${ip_address_1}  20  ethernet1
	Should Be True  ${member_isup0}
	${member_isup1}=  verify portchannel member state  ${ip_address_1}  20  ethernet2
	Should Be True  ${member_isup1}

verify lag-10glb9-up 
# Verify portchannel interface is up
	${inft_state}=  return intf state  ${ip_address_1}  port-channel1
	Should Contain  ${inft_state}  up
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_1}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel1
	Should Be True  ${cintf_state}

verify lagmem-10glb9
# Verify portchannel interface correctly reports member interface name
	${member_exists1}=  verify portchannel members  ${ip_address_1}  1  ethernet49
	Should Be True  ${member_exists1}
	${member_exists2}=  verify portchannel members  ${ip_address_1}  1  ethernet50
	Should Be True  ${member_exists2}

verify lagmem-10glb9-up
# Verify portchannel interface correctly reports member interfaces as up
	${member_isup1}=  verify portchannel member state  ${ip_address_1}  1  ethernet49
	Should Be True  ${member_isup1}
	${member_isup2}=  verify portchannel member state  ${ip_address_1}  1  ethernet50
	Should Be True  ${member_isup2}

verify lag-10gly2-up
# Verify portchannel interface is up
	${inft_state}=  return intf state  ${ip_address_2}  port-channel7
	Should Contain  ${inft_state}  up
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_2}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel7
	Should Be True  ${cintf_state}
	
verify lagmem-10gly2
# Verify portchannel interface correctly reports member interface name
	${member_exists3}=  verify portchannel members  ${ip_address_2}  7  ethernet43
	Should Be True  ${member_exists3}
	${member_exists4}=  verify portchannel members  ${ip_address_2}  7  ethernet44
	Should Be True  ${member_exists4}

verify lagmem-10gly2-up
# Verify portchannel interface correctly reports member interfaces as up
	${member_isup3}=  verify portchannel member state  ${ip_address_2}  7  ethernet43
	Should Be True  ${member_isup3}
	${member_isup4}=  verify portchannel member state  ${ip_address_2}  7  ethernet44
	Should Be True  ${member_isup4}

verify lag-40gly2-up
# Verify portchannel interface is up
	${inft_state}=  return intf state  ${ip_address_2}  port-channel30
	Should Contain  ${inft_state}  up
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_2}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel30
	Should Be True  ${cintf_state}

verify lagmem-40gly2
# Verify portchannel interface correctly reports member interface name
	${member_exists5}=  verify portchannel members  ${ip_address_2}  30  ethernet49
	Should Be True  ${member_exists5}
	${member_exists6}=  verify portchannel members  ${ip_address_2}  30  ethernet52
	Should Be True  ${member_exists6}

verify lagmem-40gly2-up
# Verify portchannel interface correctly reports member interfaces as up
	${member_isup5}=  verify portchannel member state  ${ip_address_2}  30  ethernet49
	Should Be True  ${member_isup5}
	${member_isup6}=  verify portchannel member state  ${ip_address_2}  30  ethernet52
	Should Be True  ${member_isup6}

verify l2-lag-1glb9-up
# Verify portchannel interface is up
	configure portchannel  ${ip_address_1}  20  1-2  L2
	${inft_state}=  return intf state  ${ip_address_1}  port-channel20
	Should Contain  ${inft_state}  up
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_1}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel20
	Should Be True  ${cintf_state}

verify l2-lagmem-1glb9
# Verify portchannel interface correctly reports member interface name
	configure portchannel  ${ip_address_1}  20  1-2  L2
	${member_exists0}=  verify portchannel members  ${ip_address_1}  20  ethernet1
	Should Be True  ${member_exists0}
	${member_exists1}=  verify portchannel members  ${ip_address_1}  20  ethernet2
	Should Be True  ${member_exists1}

verify l2-lagmem-1glb9-up
# Verify portchannel interface correctly reports member interfaces as up
	configure portchannel  ${ip_address_1}  20  1-2  L2
	${member_isup1}=  verify portchannel member state  ${ip_address_1}  20  ethernet1
	Should Be True  ${member_isup1}
	${member_isup2}=  verify portchannel member state  ${ip_address_1}  20  ethernet2
	Should Be True  ${member_isup2}

verify l2-lag-10glb9-up 
# Verify portchannel interface is up
	configure portchannel  ${ip_address_1}  1  49-50  L2         
	configure portchannel  ${ip_address_2}  7  43,44  L2
	sleepnow   5
	${inft_state}=  return intf state  ${ip_address_1}  port-channel1
	Should Contain  ${inft_state}  up
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_1}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel1
	Should Be True  ${cintf_state}

verify l2-lagmem-10glb9
# Verify portchannel interface correctly reports member interface name
	configure portchannel  ${ip_address_1}  1  49-50  L2         
	configure portchannel  ${ip_address_2}  7  43,44  L2
	sleepnow   5
	${member_exists1}=  verify portchannel members  ${ip_address_1}  1  ethernet49
	Should Be True  ${member_exists1}
	${member_exists2}=  verify portchannel members  ${ip_address_1}  1  ethernet50
	Should Be True  ${member_exists2}

verify l2-lagmem-10glb9-up
# Verify portchannel interface correctly reports member interfaces as up
	configure portchannel  ${ip_address_1}  1  49-50  L2         
	configure portchannel  ${ip_address_2}  7  43,44  L2
	sleepnow   5
	${member_isup1}=  verify portchannel member state  ${ip_address_1}  1  ethernet49
	Should Be True  ${member_isup1}
	${member_isup2}=  verify portchannel member state  ${ip_address_1}  1  ethernet50
	Should Be True  ${member_isup2}
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_1}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel1
	Should Be True  ${cintf_state}

verify l2-lag-10gly2-up
# Verify portchannel interface is up
	configure portchannel  ${ip_address_1}  1  49-50  L2         
	configure portchannel  ${ip_address_2}  7  43,44  L2
	sleepnow   5
	${inft_state}=  return intf state  ${ip_address_2}  port-channel7
	Should Contain  ${inft_state}  up

verify l2-lagmem-10gly2
# Verify portchannel interface correctly reports member interface name
	configure portchannel  ${ip_address_1}  1  49-50  L2         
	configure portchannel  ${ip_address_2}  7  43,44  L2
	sleepnow   5
	${member_exists3}=  verify portchannel members  ${ip_address_2}  7  ethernet43
	Should Be True  ${member_exists3}
	${member_exists4}=  verify portchannel members  ${ip_address_2}  7  ethernet44
	Should Be True  ${member_exists4}

verify l2-lagmem-10gly2-up
# Verify portchannel interface correctly reports member interfaces as up
	configure portchannel  ${ip_address_1}  1  49-50  L2         
	configure portchannel  ${ip_address_2}  7  43,44  L2
	sleepnow   5
	${member_isup3}=  verify portchannel member state  ${ip_address_2}  7  ethernet43
	Should Be True  ${member_isup3}
	${member_isup4}=  verify portchannel member state  ${ip_address_2}  7  ethernet44
	Should Be True  ${member_isup4}
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_2}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel7
	Should Be True  ${cintf_state}

verify l2-lag-40gly2-up
# Verify portchannel interface is up
	configure portchannel  ${ip_address_2}  30  49,52  L2
#	configure portchannel  ${ip_address_3}  30  49,52  L2 
	${inft_state}=  return intf state  ${ip_address_2}  port-channel30
	Should Contain  ${inft_state}  up

verify l2-lagmem-40gly2
# Verify portchannel interface correctly reports member interface name
	configure portchannel  ${ip_address_2}  30  49,52  L2
#	configure portchannel  ${ip_address_3}  30  49,52  L2 
	${member_exists5}=  verify portchannel members  ${ip_address_2}  30  ethernet49
	Should Be True  ${member_exists5}
	${member_exists6}=  verify portchannel members  ${ip_address_2}  30  ethernet52
	Should Be True  ${member_exists6}

verify l2-lagmem-40gly2-up
# Verify portchannel interface correctly reports member interfaces as up
	configure portchannel  ${ip_address_2}  30  49,52  L2
#	configure portchannel  ${ip_address_3}  30  49,52  L2 
	${member_isup5}=  verify portchannel member state  ${ip_address_2}  30  ethernet49
	Should Be True  ${member_isup5}
	${member_isup6}=  verify portchannel member state  ${ip_address_2}  30  ethernet52
	Should Be True  ${member_isup6}
	${switchDict1}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict1}  ${ip_address_2}
	${cintf_state}=  verify interface is up  ${dpid1}  port-channel30
	Should Be True  ${cintf_state}

verify T5829-1g10g
#  	Verify that when portchannel interface cannot be formed if member links have mismatched speeds
	configure portchannel  ${ip_address_1}  1  48,49,50  L3
	sleepnow   10
	${inft_state}=  return intf state  ${ip_address_1}  port-channel1
	Should Contain  ${inft_state}  up
	${member_exists0}=  verify portchannel members  ${ip_address_1}  1  ethernet48
	Should Be True  ${member_exists0}
	${member_exists1}=  verify portchannel members  ${ip_address_1}  1  ethernet49
	Should Be True  ${member_exists1}
	${member_exists2}=  verify portchannel members  ${ip_address_1}  1  ethernet50
	Should Be True  ${member_exists2}
	${member_isup0}=  verify portchannel member state  ${ip_address_1}  1  ethernet48
	Should Not Be True  ${member_isup0}
	${member_isup1}=  verify portchannel member state  ${ip_address_1}  1  ethernet49
	Should Be True  ${member_isup1}
	${member_isup2}=  verify portchannel member state  ${ip_address_1}  1  ethernet50
	Should Be True  ${member_isup2}
	configure portchannel  ${ip_address_1}  1  49,50  L3
	sleepnow   10

verify T5829-10g40g
#  	Verify that when portchannel interface cannot be formed if member links have mismatched speeds (10g and 40g)
	configure portchannel  ${ip_address_2}  30  4,49,52  L3
	sleepnow   30
	${inft_state}=  return intf state  ${ip_address_2}  port-channel30
	Should Contain  ${inft_state}  up
	${member_exists0}=  verify portchannel members  ${ip_address_2}  30  ethernet4
	Should Be True  ${member_exists0}
	${member_exists1}=  verify portchannel members  ${ip_address_2}  30  ethernet49
	Should Be True  ${member_exists1}
	${member_exists2}=  verify portchannel members  ${ip_address_2}  30  ethernet52
	Should Be True  ${member_exists2}
	${member_isup0}=  verify portchannel member state  ${ip_address_2}  30  ethernet4
	Should Not Be True  ${member_isup0}
	${member_isup1}=  verify portchannel member state  ${ip_address_2}  30  ethernet49
	Should Be True  ${member_isup1}
	${member_isup2}=  verify portchannel member state  ${ip_address_2}  30  ethernet52
	Should Be True  ${member_isup2}
	configure portchannel  ${ip_address_2}  30  49,52  L3
	sleepnow   30

verify T5839
#Disable all member links. Verify that lag interface shows as "down" on both switch and controller
#Since we cannot disable a link, workaround is to create a lag interface by adding links that are currently down and then checking
	configure portchannel  ${ip_address_2}  22  50,51  L3
	sleepnow   10
	${pc_state}=  verify_portchannel  ${ip_address_2}  22
	Should Not Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_2}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel22
	Should Not Be True  ${cpc_state}
	unconfigure portchannel  ${ip_address_2}  22
	sleepnow  10

verify T5844
#Verify log messages are generated for link up/link down events for LAG interfaces
	change interface state  ${ip_address_1}  port-channel1  Yes
	${syslog_op}=  execute switch command return output  ${ip_address_1}  debug ofad 'help; cat /var/log/syslog | grep \"Disabling port port-channel1\"'
	Should Contain  ${syslog_op}  brcmdriver: INFO: Disabling port port-channel1 (61)
	change interface state  ${ip_address_1}  port-channel1  No
	${syslog_op}=  execute switch command return output  ${ip_address_1}  debug ofad 'help; cat /var/log/syslog | grep \"Enabling port port-channel1\"'
	Should Contain  ${syslog_op}  brcmdriver: INFO: Enabling port port-channel1 (61)

verify T5845
#Verify switch CLI does not allow member interfaces to be outside the range (1-52)
	${return_value}  configure portchannel  ${ip_address_1}  1  49,50,120  L3
	Should Not Be True  ${return_value}

verify T5846
#Verify LAG interface can be formed with odd number of member links
	configure portchannel  ${ip_address_1}  22  3,4,5  L3
	sleepnow  20
	${pc_state}=  verify_portchannel  ${ip_address_1}  22
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel22
	Should Be True  ${cpc_state}
	unconfigure portchannel  ${ip_address_1}  22
	sleepnow  20

verify T5848
#Verify LAG interface can be formed with maximum number of member links (8 in LB9)
	configure portchannel  ${ip_address_1}  22  3-10  L3
	sleepnow  20
	${pc_state}=  verify_portchannel  ${ip_address_1}  22
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel22
	Should Be True  ${cpc_state}
	unconfigure portchannel  ${ip_address_1}  22
	sleepnow  20

verify T5850
#Verify LAG interface with just 1 member link
	configure portchannel  ${ip_address_1}  22  3  L3
	sleepnow  20
	${pc_state}=  verify_portchannel  ${ip_address_1}  22
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel22
	Should Be True  ${cpc_state}
	unconfigure portchannel  ${ip_address_1}  22
	sleepnow  20

verify T5852
#Save running-config to startup-config. Reboot switch and verify that LAG interface comes up correctly.
	${pc_state}=  verify_portchannel  ${ip_address_1}  1
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel1
	Should Be True  ${cpc_state}
	execute switch command  ${ip_address_1}  copy running-config startup-config
	sleepnow  5
	Run Keyword And Continue On Failure  execute switch command  ${ip_address_1}  debug ofad 'help; reboot\r'
	Wait Until Keyword Succeeds  5 min  30 sec  execute switch command  ${ip_address_1}  show version
	${pc_state}=  verify_portchannel  ${ip_address_1}  1
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel1
	Should Be True  ${cpc_state}
	execute switch command  ${ip_address_1}  copy running-config startup-config

verify T5853
#Restart process OFAD and verify LAG interface shows up correctly
	configure portchannel  ${ip_address_1}  22  3-10  L3
	sleepnow  20
	${pc_state}=  verify_portchannel  ${ip_address_1}  22
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel22
	Should Be True  ${cpc_state}
	restart process  ${ip_address_1}  ofad
	sleepnow  20
	${pc_state}=  verify_portchannel  ${ip_address_1}  22
	Should Be True  ${pc_state}
	${switchDict}=  REST show switch
	${dpid1}=  return switch dpid  ${switchDict}  ${ip_address_1}
	${cpc_state}=  verify interface is up   ${dpid1}  port-channel22
	Should Be True  ${cpc_state}
	unconfigure portchannel  ${ip_address_1}  22
	sleepnow  20

lag suite teardown
	unconfigure portchannel  ${ip_address_1}  20
	sleepnow   20