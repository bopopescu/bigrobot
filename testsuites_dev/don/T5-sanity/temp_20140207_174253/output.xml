<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20140207 17:42:53.196" generator="Robot 2.8.3 (Python 2.7.6 on darwin)">
<suite source="/Users/donj/Documents/workspace/bigrobot/testsuites_dev/don/T5-sanity/temp.txt" id="s1" name="Temp">
<kw type="setup" name="BsnCommon.Base Suite Setup">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:42:53.420" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20140207 17:42:53.481" level="INFO">[test.py:autobot.test.__init__:34] Loading config file /Users/donj/Documents/workspace/bigrobot/autobot/config/bsn.yaml
</msg>
<msg timestamp="20140207 17:42:53.485" level="INFO">[test.py:autobot.test.__init__:42] Loading topology file temp.topo
</msg>
<msg timestamp="20140207 17:42:53.492" level="INFO">[test.py:autobot.test.initialize:330] Initializing controller 'c2'
</msg>
<msg timestamp="20140207 17:42:53.494" level="INFO">[node.py:autobot.node.pingable_or_die:55] Ping 10.192.106.11 ('c2')
</msg>
<msg timestamp="20140207 17:42:53.495" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping command: ping -c 1 -W 100 10.192.106.11
</msg>
<msg timestamp="20140207 17:42:53.502" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping output:
PING 10.192.106.11 (10.192.106.11): 56 data bytes
64 bytes from 10.192.106.11: icmp_seq=0 ttl=64 time=0.851 ms

--- 10.192.106.11 ping statistics ---
1 packets transmitted, 1 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 0.851/0.851/0.851/0.000 ms
</msg>
<msg timestamp="20140207 17:42:53.505" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping result: Ping host '10.192.106.11' - 1 transmitted, 1 received, 0% loss

----
</msg>
<msg timestamp="20140207 17:42:53.506" level="INFO">[node.py:autobot.node.__init__:95] name=c2 host=10.192.106.11 user=admin password=adminadmin
</msg>
<msg timestamp="20140207 17:42:53.508" level="INFO">[devconf.py:autobot.devconf.__init__:48] Connecting to host 10.192.106.11 (login:admin, password:adminadmin)
</msg>
<msg timestamp="20140207 17:42:53.825" level="DEBUG">[chan 1] Max packet in: 34816 bytes</msg>
<msg timestamp="20140207 17:42:54.752" level="INFO">[devconf.py:autobot.devconf.__init__:75] Using devconf driver '&lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x105a9d150&gt;' (name: 'bsn_controller')
</msg>
<msg timestamp="20140207 17:42:54.753" level="INFO">[test.py:autobot.test.initialize:385] Exscript driver for 'c2': &lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x105a9d150&gt;
</msg>
<msg timestamp="20140207 17:42:54.755" level="INFO">[test.py:autobot.test.initialize:386] Node 'c2' is platform 'bvs'
</msg>
<msg timestamp="20140207 17:42:54.756" level="INFO">[test.py:autobot.test.initialize:330] Initializing controller 'c1'
</msg>
<msg timestamp="20140207 17:42:54.757" level="INFO">[node.py:autobot.node.pingable_or_die:55] Ping 10.192.106.10 ('c1')
</msg>
<msg timestamp="20140207 17:42:54.759" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping command: ping -c 1 -W 100 10.192.106.10
</msg>
<msg timestamp="20140207 17:42:54.766" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping output:
PING 10.192.106.10 (10.192.106.10): 56 data bytes
64 bytes from 10.192.106.10: icmp_seq=0 ttl=64 time=0.876 ms

--- 10.192.106.10 ping statistics ---
1 packets transmitted, 1 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 0.876/0.876/0.876/0.000 ms
</msg>
<msg timestamp="20140207 17:42:54.768" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping result: Ping host '10.192.106.10' - 1 transmitted, 1 received, 0% loss

----
</msg>
<msg timestamp="20140207 17:42:54.769" level="INFO">[node.py:autobot.node.__init__:95] name=c1 host=10.192.106.10 user=admin password=adminadmin
</msg>
<msg timestamp="20140207 17:42:54.771" level="INFO">[devconf.py:autobot.devconf.__init__:48] Connecting to host 10.192.106.10 (login:admin, password:adminadmin)
</msg>
<msg timestamp="20140207 17:42:55.087" level="DEBUG">[chan 1] Max packet in: 34816 bytes</msg>
<msg timestamp="20140207 17:42:58.417" level="INFO">[devconf.py:autobot.devconf.__init__:75] Using devconf driver '&lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x105a9d150&gt;' (name: 'bsn_controller')
</msg>
<msg timestamp="20140207 17:42:58.418" level="INFO">[test.py:autobot.test.initialize:385] Exscript driver for 'c1': &lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x105a9d150&gt;
</msg>
<msg timestamp="20140207 17:42:58.420" level="INFO">[test.py:autobot.test.initialize:386] Node 'c1' is platform 'bvs'
</msg>
<msg timestamp="20140207 17:42:58.421" level="INFO">[__init__.py:autobot.helpers.prettify_log:318] self._topology: 
{'c1': &lt;autobot.node.ControllerNode object at 0x106128c90&gt;,
 'c2': &lt;autobot.node.ControllerNode object at 0x1056392d0&gt;}
</msg>
<msg timestamp="20140207 17:42:58.422" level="INFO">[test.py:autobot.test.initialize:389] Test object initialization completed.
</msg>
<msg timestamp="20140207 17:42:58.424" level="INFO">[test.py:autobot.test.setup_controller_firewall_allow_rest_access:458] Enabling REST access via firewall filters
</msg>
<msg timestamp="20140207 17:42:58.425" level="INFO">[test.py:autobot.test.setup_controller_http_session_cookie:483] Setting up HTTP session cookies for REST access
</msg>
<msg timestamp="20140207 17:42:58.427" level="INFO">[restclient.py:autobot.restclient.request_session_cookie:48] session_cookie_url: /api/v1/auth/login
</msg>
<msg timestamp="20140207 17:42:58.428" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] RestClient: POST http://10.192.106.11:8080/api/v1/auth/login
</msg>
<msg timestamp="20140207 17:42:58.430" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Headers = {
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.431" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Data = {
    "password": "adminadmin", 
    "user": "admin"
}
</msg>
<msg timestamp="20140207 17:42:58.554" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] REST result:
{
    "content": {
        "error_message": "", 
        "session_cookie": "Bvmnpa6RZovhLasv_c8F4sUCtNBsXY_K", 
        "success": true
    }, 
    "http_verb": "POST", 
    "request_url": "http://10.192.106.11:8080/api/v1/auth/login", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.555" level="INFO">[restclient.py:autobot.restclient.set_session_cookie:56] Saving session cookie Bvmnpa6RZovhLasv_c8F4sUCtNBsXY_K
</msg>
<msg timestamp="20140207 17:42:58.557" level="INFO">[test.py:autobot.test.setup_controller_firewall_allow_rest_access:458] Enabling REST access via firewall filters
</msg>
<msg timestamp="20140207 17:42:58.559" level="INFO">[test.py:autobot.test.setup_controller_http_session_cookie:483] Setting up HTTP session cookies for REST access
</msg>
<msg timestamp="20140207 17:42:58.560" level="INFO">[restclient.py:autobot.restclient.request_session_cookie:48] session_cookie_url: /api/v1/auth/login
</msg>
<msg timestamp="20140207 17:42:58.561" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] RestClient: POST http://10.192.106.10:8080/api/v1/auth/login
</msg>
<msg timestamp="20140207 17:42:58.563" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Headers = {
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.565" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Data = {
    "password": "adminadmin", 
    "user": "admin"
}
</msg>
<msg timestamp="20140207 17:42:58.663" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] REST result:
{
    "content": {
        "error_message": "", 
        "session_cookie": "2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
        "success": true
    }, 
    "http_verb": "POST", 
    "request_url": "http://10.192.106.10:8080/api/v1/auth/login", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.664" level="INFO">[restclient.py:autobot.restclient.set_session_cookie:56] Saving session cookie 2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH
</msg>
<msg timestamp="20140207 17:42:58.666" level="INFO">[Controller.py:Controller.cli_save_running_config:94] Copying running-config to file on node 'c2'
</msg>
<msg timestamp="20140207 17:42:58.667" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Switching from cli to enable mode
</msg>
<msg timestamp="20140207 17:42:58.685" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Execute command on 'c2': 'copy running-config file://running-config-bigrobot'
</msg>
<msg timestamp="20140207 17:42:58.711" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] enable content on 'c2':
copy running-config file://running-config-bigrobot
Error: Invalid Use: unsupported dest: file://running-config-bigrobot
Controller-2# 

----
</msg>
<msg timestamp="20140207 17:42:58.712" level="INFO">[Controller.py:Controller.cli_save_running_config:94] Copying running-config to file on node 'c1'
</msg>
<msg timestamp="20140207 17:42:58.713" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Switching from cli to enable mode
</msg>
<msg timestamp="20140207 17:42:58.733" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Execute command on 'c1': 'copy running-config file://running-config-bigrobot'
</msg>
<msg timestamp="20140207 17:42:58.763" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] enable content on 'c1':
copy running-config file://running-config-bigrobot
Error: Invalid Use: unsupported dest: file://running-config-bigrobot
Controller-10# 

----
</msg>
<msg timestamp="20140207 17:42:58.764" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.763" starttime="20140207 17:42:53.420"></status>
</kw>
<test id="s1-t1" name="ping h1 to h2 dual leaf single rack dynamic endpoints tag">
<kw type="setup" name="T5 base test setup">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:42:58.766" level="TRACE">Arguments: [  ]</msg>
<kw type="kw" name="BsnCommon.Base Test Setup">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:42:58.766" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20140207 17:42:58.766" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.766" starttime="20140207 17:42:58.766"></status>
</kw>
<kw type="kw" name="add a tenant">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
</arguments>
<msg timestamp="20140207 17:42:58.767" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' ]</msg>
<kw type="kw" name="T5.Rest Add Tenant">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
</arguments>
<msg timestamp="20140207 17:42:58.768" level="TRACE">Arguments: [ u'h1h2h3' ]</msg>
<msg timestamp="20140207 17:42:58.770" level="INFO">[T5.py:T5.rest_add_tenant:23] Input arguments: tenant = h1h2h3
</msg>
<msg timestamp="20140207 17:42:58.772" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]
</msg>
<msg timestamp="20140207 17:42:58.774" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.777" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h1h2h3"
}
</msg>
<msg timestamp="20140207 17:42:58.805" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.807" level="INFO">[T5.py:T5.rest_add_tenant:27] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:58.807" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:58.807" starttime="20140207 17:42:58.767"></status>
</kw>
<msg timestamp="20140207 17:42:58.807" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.807" starttime="20140207 17:42:58.767"></status>
</kw>
<kw type="kw" name="add a vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
</arguments>
<msg timestamp="20140207 17:42:58.808" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' ]</msg>
<kw type="kw" name="T5.Rest Add Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
</arguments>
<msg timestamp="20140207 17:42:58.809" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' ]</msg>
<msg timestamp="20140207 17:42:58.811" level="INFO">[T5.py:T5.rest_add_vns:115] Input arguments: tenant = h1h2h3 vns = h1h2h3
</msg>
<msg timestamp="20140207 17:42:58.813" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]
</msg>
<msg timestamp="20140207 17:42:58.815" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.818" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h1h2h3"
}
</msg>
<msg timestamp="20140207 17:42:58.842" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.842" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:58.842" starttime="20140207 17:42:58.809"></status>
</kw>
<msg timestamp="20140207 17:42:58.842" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.842" starttime="20140207 17:42:58.808"></status>
</kw>
<kw type="kw" name="add a tenant">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
</arguments>
<msg timestamp="20140207 17:42:58.843" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' ]</msg>
<kw type="kw" name="T5.Rest Add Tenant">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
</arguments>
<msg timestamp="20140207 17:42:58.843" level="TRACE">Arguments: [ u'h4h5h6' ]</msg>
<msg timestamp="20140207 17:42:58.845" level="INFO">[T5.py:T5.rest_add_tenant:23] Input arguments: tenant = h4h5h6
</msg>
<msg timestamp="20140207 17:42:58.847" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]
</msg>
<msg timestamp="20140207 17:42:58.849" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.851" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h4h5h6"
}
</msg>
<msg timestamp="20140207 17:42:58.906" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.908" level="INFO">[T5.py:T5.rest_add_tenant:27] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:58.908" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:58.908" starttime="20140207 17:42:58.843"></status>
</kw>
<msg timestamp="20140207 17:42:58.909" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.909" starttime="20140207 17:42:58.842"></status>
</kw>
<kw type="kw" name="add a vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
</arguments>
<msg timestamp="20140207 17:42:58.909" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' ]</msg>
<kw type="kw" name="T5.Rest Add Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
</arguments>
<msg timestamp="20140207 17:42:58.910" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' ]</msg>
<msg timestamp="20140207 17:42:58.912" level="INFO">[T5.py:T5.rest_add_vns:115] Input arguments: tenant = h4h5h6 vns = h4h5h6
</msg>
<msg timestamp="20140207 17:42:58.914" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]
</msg>
<msg timestamp="20140207 17:42:58.916" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.918" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h4h5h6"
}
</msg>
<msg timestamp="20140207 17:42:58.945" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.945" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:58.945" starttime="20140207 17:42:58.910"></status>
</kw>
<msg timestamp="20140207 17:42:58.946" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.946" starttime="20140207 17:42:58.909"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:42:58.947" level="TRACE">Arguments: [ ${pg}=u'p1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:58.947" level="TRACE">Arguments: [ u'p1' ]</msg>
<msg timestamp="20140207 17:42:58.949" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p1
</msg>
<msg timestamp="20140207 17:42:58.951" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p1"]
</msg>
<msg timestamp="20140207 17:42:58.953" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:58.955" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p1"
}
</msg>
<msg timestamp="20140207 17:42:58.988" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:58.992" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:58.992" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:58.992" starttime="20140207 17:42:58.947"></status>
</kw>
<msg timestamp="20140207 17:42:58.992" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:58.992" starttime="20140207 17:42:58.946"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-a</arg>
<arg>${h1_intf0}</arg>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:42:58.994" level="TRACE">Arguments: [ ${switch}=u'leaf0-a' | ${intf}=u'ethernet8' | ${pg}=u'p1' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:58.995" level="TRACE">Arguments: [ u'leaf0-a' | u'ethernet8' | u'p1' ]</msg>
<msg timestamp="20140207 17:42:58.998" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-a Interface-name = ethernet8 port-group = p1
</msg>
<msg timestamp="20140207 17:42:59.001" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-a"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:42:59.006" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.010" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p1"
}
</msg>
<msg timestamp="20140207 17:42:59.032" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.034" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.034" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.034" starttime="20140207 17:42:58.995"></status>
</kw>
<msg timestamp="20140207 17:42:59.035" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.035" starttime="20140207 17:42:58.993"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-b</arg>
<arg>${h1_intf1}</arg>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:42:59.036" level="TRACE">Arguments: [ ${switch}=u'leaf0-b' | ${intf}=u'ethernet8' | ${pg}=u'p1' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.036" level="TRACE">Arguments: [ u'leaf0-b' | u'ethernet8' | u'p1' ]</msg>
<msg timestamp="20140207 17:42:59.038" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-b Interface-name = ethernet8 port-group = p1
</msg>
<msg timestamp="20140207 17:42:59.040" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-b"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:42:59.043" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.045" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p1"
}
</msg>
<msg timestamp="20140207 17:42:59.064" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.066" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.066" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.066" starttime="20140207 17:42:59.036"></status>
</kw>
<msg timestamp="20140207 17:42:59.067" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.067" starttime="20140207 17:42:59.035"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:42:59.067" level="TRACE">Arguments: [ u'p1' ]</msg>
<msg timestamp="20140207 17:42:59.069" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p1
</msg>
<msg timestamp="20140207 17:42:59.071" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p1"]
</msg>
<msg timestamp="20140207 17:42:59.072" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.074" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:42:59.092" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.094" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.094" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.094" starttime="20140207 17:42:59.067"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:42:59.095" level="TRACE">Arguments: [ ${pg}=u'p2' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.095" level="TRACE">Arguments: [ u'p2' ]</msg>
<msg timestamp="20140207 17:42:59.097" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p2
</msg>
<msg timestamp="20140207 17:42:59.099" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p2"]
</msg>
<msg timestamp="20140207 17:42:59.101" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.104" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p2"
}
</msg>
<msg timestamp="20140207 17:42:59.123" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.125" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.125" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.125" starttime="20140207 17:42:59.095"></status>
</kw>
<msg timestamp="20140207 17:42:59.126" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.126" starttime="20140207 17:42:59.094"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-a</arg>
<arg>${h2_intf0}</arg>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:42:59.127" level="TRACE">Arguments: [ ${switch}=u'leaf0-a' | ${intf}=u'ethernet9' | ${pg}=u'p2' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.127" level="TRACE">Arguments: [ u'leaf0-a' | u'ethernet9' | u'p2' ]</msg>
<msg timestamp="20140207 17:42:59.129" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-a Interface-name = ethernet9 port-group = p2
</msg>
<msg timestamp="20140207 17:42:59.131" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-a"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:42:59.133" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.135" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p2"
}
</msg>
<msg timestamp="20140207 17:42:59.155" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.157" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.157" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.157" starttime="20140207 17:42:59.127"></status>
</kw>
<msg timestamp="20140207 17:42:59.157" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.157" starttime="20140207 17:42:59.126"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-b</arg>
<arg>${h2_intf1}</arg>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:42:59.158" level="TRACE">Arguments: [ ${switch}=u'leaf0-b' | ${intf}=u'ethernet9' | ${pg}=u'p2' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.159" level="TRACE">Arguments: [ u'leaf0-b' | u'ethernet9' | u'p2' ]</msg>
<msg timestamp="20140207 17:42:59.161" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-b Interface-name = ethernet9 port-group = p2
</msg>
<msg timestamp="20140207 17:42:59.163" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-b"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:42:59.165" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.167" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p2"
}
</msg>
<msg timestamp="20140207 17:42:59.186" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.188" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.188" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.188" starttime="20140207 17:42:59.158"></status>
</kw>
<msg timestamp="20140207 17:42:59.189" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.189" starttime="20140207 17:42:59.157"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:42:59.189" level="TRACE">Arguments: [ u'p2' ]</msg>
<msg timestamp="20140207 17:42:59.190" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p2
</msg>
<msg timestamp="20140207 17:42:59.192" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p2"]
</msg>
<msg timestamp="20140207 17:42:59.194" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.196" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:42:59.215" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.217" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.217" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.217" starttime="20140207 17:42:59.189"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:42:59.218" level="TRACE">Arguments: [ ${pg}=u'p3' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.218" level="TRACE">Arguments: [ u'p3' ]</msg>
<msg timestamp="20140207 17:42:59.220" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p3
</msg>
<msg timestamp="20140207 17:42:59.222" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p3"]
</msg>
<msg timestamp="20140207 17:42:59.224" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.227" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p3"
}
</msg>
<msg timestamp="20140207 17:42:59.251" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.253" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.253" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.253" starttime="20140207 17:42:59.218"></status>
</kw>
<msg timestamp="20140207 17:42:59.253" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.253" starttime="20140207 17:42:59.217"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-a</arg>
<arg>${h3_intf0}</arg>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:42:59.254" level="TRACE">Arguments: [ ${switch}=u'leaf1-a' | ${intf}=u'ethernet8' | ${pg}=u'p3' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.255" level="TRACE">Arguments: [ u'leaf1-a' | u'ethernet8' | u'p3' ]</msg>
<msg timestamp="20140207 17:42:59.257" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-a Interface-name = ethernet8 port-group = p3
</msg>
<msg timestamp="20140207 17:42:59.259" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-a"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:42:59.261" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.263" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p3"
}
</msg>
<msg timestamp="20140207 17:42:59.291" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.292" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.293" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.293" starttime="20140207 17:42:59.254"></status>
</kw>
<msg timestamp="20140207 17:42:59.293" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.293" starttime="20140207 17:42:59.253"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-b</arg>
<arg>${h3_intf1}</arg>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:42:59.294" level="TRACE">Arguments: [ ${switch}=u'leaf1-b' | ${intf}=u'ethernet8' | ${pg}=u'p3' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.294" level="TRACE">Arguments: [ u'leaf1-b' | u'ethernet8' | u'p3' ]</msg>
<msg timestamp="20140207 17:42:59.296" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-b Interface-name = ethernet8 port-group = p3
</msg>
<msg timestamp="20140207 17:42:59.298" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-b"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:42:59.300" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.303" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p3"
}
</msg>
<msg timestamp="20140207 17:42:59.326" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.328" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.328" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.328" starttime="20140207 17:42:59.294"></status>
</kw>
<msg timestamp="20140207 17:42:59.328" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.328" starttime="20140207 17:42:59.293"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:42:59.329" level="TRACE">Arguments: [ u'p3' ]</msg>
<msg timestamp="20140207 17:42:59.330" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p3
</msg>
<msg timestamp="20140207 17:42:59.332" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p3"]
</msg>
<msg timestamp="20140207 17:42:59.334" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.336" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:42:59.356" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.357" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.358" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.358" starttime="20140207 17:42:59.329"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:42:59.358" level="TRACE">Arguments: [ ${pg}=u'p4' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.359" level="TRACE">Arguments: [ u'p4' ]</msg>
<msg timestamp="20140207 17:42:59.361" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p4
</msg>
<msg timestamp="20140207 17:42:59.363" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p4"]
</msg>
<msg timestamp="20140207 17:42:59.365" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.367" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p4"
}
</msg>
<msg timestamp="20140207 17:42:59.392" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.394" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.394" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.394" starttime="20140207 17:42:59.359"></status>
</kw>
<msg timestamp="20140207 17:42:59.394" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.394" starttime="20140207 17:42:59.358"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-a</arg>
<arg>${h4_intf0}</arg>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:42:59.395" level="TRACE">Arguments: [ ${switch}=u'leaf1-a' | ${intf}=u'ethernet9' | ${pg}=u'p4' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.396" level="TRACE">Arguments: [ u'leaf1-a' | u'ethernet9' | u'p4' ]</msg>
<msg timestamp="20140207 17:42:59.398" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-a Interface-name = ethernet9 port-group = p4
</msg>
<msg timestamp="20140207 17:42:59.400" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-a"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:42:59.402" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.404" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p4"
}
</msg>
<msg timestamp="20140207 17:42:59.425" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.427" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.427" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.427" starttime="20140207 17:42:59.395"></status>
</kw>
<msg timestamp="20140207 17:42:59.427" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.427" starttime="20140207 17:42:59.394"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-b</arg>
<arg>${h4_intf1}</arg>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:42:59.428" level="TRACE">Arguments: [ ${switch}=u'leaf1-b' | ${intf}=u'ethernet9' | ${pg}=u'p4' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.429" level="TRACE">Arguments: [ u'leaf1-b' | u'ethernet9' | u'p4' ]</msg>
<msg timestamp="20140207 17:42:59.431" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-b Interface-name = ethernet9 port-group = p4
</msg>
<msg timestamp="20140207 17:42:59.433" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-b"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:42:59.435" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.437" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p4"
}
</msg>
<msg timestamp="20140207 17:42:59.459" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.461" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.461" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.461" starttime="20140207 17:42:59.429"></status>
</kw>
<msg timestamp="20140207 17:42:59.461" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.461" starttime="20140207 17:42:59.428"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:42:59.462" level="TRACE">Arguments: [ u'p4' ]</msg>
<msg timestamp="20140207 17:42:59.463" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p4
</msg>
<msg timestamp="20140207 17:42:59.465" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p4"]
</msg>
<msg timestamp="20140207 17:42:59.467" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.469" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:42:59.495" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.496" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.496" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.496" starttime="20140207 17:42:59.462"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:42:59.497" level="TRACE">Arguments: [ ${pg}=u'p5' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.498" level="TRACE">Arguments: [ u'p5' ]</msg>
<msg timestamp="20140207 17:42:59.500" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p5
</msg>
<msg timestamp="20140207 17:42:59.502" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p5"]
</msg>
<msg timestamp="20140207 17:42:59.504" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.507" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p5"
}
</msg>
<msg timestamp="20140207 17:42:59.535" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.537" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.537" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.537" starttime="20140207 17:42:59.497"></status>
</kw>
<msg timestamp="20140207 17:42:59.537" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.537" starttime="20140207 17:42:59.497"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-a</arg>
<arg>${h5_intf0}</arg>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:42:59.538" level="TRACE">Arguments: [ ${switch}=u'leaf2-a' | ${intf}=u'ethernet8' | ${pg}=u'p5' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.539" level="TRACE">Arguments: [ u'leaf2-a' | u'ethernet8' | u'p5' ]</msg>
<msg timestamp="20140207 17:42:59.541" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-a Interface-name = ethernet8 port-group = p5
</msg>
<msg timestamp="20140207 17:42:59.543" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-a"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:42:59.545" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.547" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p5"
}
</msg>
<msg timestamp="20140207 17:42:59.569" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.571" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.571" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.571" starttime="20140207 17:42:59.538"></status>
</kw>
<msg timestamp="20140207 17:42:59.571" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.571" starttime="20140207 17:42:59.537"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-b</arg>
<arg>${h5_intf1}</arg>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:42:59.572" level="TRACE">Arguments: [ ${switch}=u'leaf2-b' | ${intf}=u'ethernet8' | ${pg}=u'p5' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.573" level="TRACE">Arguments: [ u'leaf2-b' | u'ethernet8' | u'p5' ]</msg>
<msg timestamp="20140207 17:42:59.575" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-b Interface-name = ethernet8 port-group = p5
</msg>
<msg timestamp="20140207 17:42:59.577" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-b"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:42:59.579" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.581" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p5"
}
</msg>
<msg timestamp="20140207 17:42:59.602" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.604" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.604" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.604" starttime="20140207 17:42:59.573"></status>
</kw>
<msg timestamp="20140207 17:42:59.604" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.604" starttime="20140207 17:42:59.572"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:42:59.604" level="TRACE">Arguments: [ u'p5' ]</msg>
<msg timestamp="20140207 17:42:59.606" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p5
</msg>
<msg timestamp="20140207 17:42:59.608" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p5"]
</msg>
<msg timestamp="20140207 17:42:59.609" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.611" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:42:59.630" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.632" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.632" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.632" starttime="20140207 17:42:59.604"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p6</arg>
</arguments>
<msg timestamp="20140207 17:42:59.633" level="TRACE">Arguments: [ ${pg}=u'p6' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.633" level="TRACE">Arguments: [ u'p6' ]</msg>
<msg timestamp="20140207 17:42:59.635" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p6
</msg>
<msg timestamp="20140207 17:42:59.637" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p6"]
</msg>
<msg timestamp="20140207 17:42:59.640" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.642" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p6"
}
</msg>
<msg timestamp="20140207 17:42:59.665" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.667" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.667" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.667" starttime="20140207 17:42:59.633"></status>
</kw>
<msg timestamp="20140207 17:42:59.667" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.667" starttime="20140207 17:42:59.632"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-a</arg>
<arg>${h6_intf0}</arg>
<arg>p6</arg>
</arguments>
<msg timestamp="20140207 17:42:59.668" level="TRACE">Arguments: [ ${switch}=u'leaf2-a' | ${intf}=u'ethernet9' | ${pg}=u'p6' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.669" level="TRACE">Arguments: [ u'leaf2-a' | u'ethernet9' | u'p6' ]</msg>
<msg timestamp="20140207 17:42:59.671" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-a Interface-name = ethernet9 port-group = p6
</msg>
<msg timestamp="20140207 17:42:59.673" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-a"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:42:59.675" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.677" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p6"
}
</msg>
<msg timestamp="20140207 17:42:59.701" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.703" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.703" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.703" starttime="20140207 17:42:59.669"></status>
</kw>
<msg timestamp="20140207 17:42:59.704" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.704" starttime="20140207 17:42:59.668"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-b</arg>
<arg>${h6_intf1}</arg>
<arg>p6</arg>
</arguments>
<msg timestamp="20140207 17:42:59.705" level="TRACE">Arguments: [ ${switch}=u'leaf2-b' | ${intf}=u'ethernet9' | ${pg}=u'p6' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:42:59.705" level="TRACE">Arguments: [ u'leaf2-b' | u'ethernet9' | u'p6' ]</msg>
<msg timestamp="20140207 17:42:59.707" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-b Interface-name = ethernet9 port-group = p6
</msg>
<msg timestamp="20140207 17:42:59.709" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-b"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:42:59.711" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:42:59.713" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p6"
}
</msg>
<msg timestamp="20140207 17:42:59.737" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:42:59.739" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:42:59.739" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:42:59.739" starttime="20140207 17:42:59.705"></status>
</kw>
<msg timestamp="20140207 17:42:59.739" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:42:59.739" starttime="20140207 17:42:59.704"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140207 17:42:59.740" level="TRACE">Arguments: [ u'5' ]</msg>
<msg timestamp="20140207 17:43:04.741" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20140207 17:43:04.741" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:04.741" starttime="20140207 17:42:59.739"></status>
</kw>
<msg timestamp="20140207 17:43:04.741" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:04.741" starttime="20140207 17:42:58.765"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
<arg>p1</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20140207 17:43:04.743" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' | ${pg}=u'p1' | ${vlan}=u'10' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:43:04.744" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' | u'p1' | u'10' ]</msg>
<msg timestamp="20140207 17:43:04.746" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h1h2h3 vns = h1h2h3 port-group = p1 vlan = 10
</msg>
<msg timestamp="20140207 17:43:04.748" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]/port-group-membership-rules[port-group-name="p1"]
</msg>
<msg timestamp="20140207 17:43:04.750" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:04.752" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p1", 
    "vlan": "10"
}
</msg>
<msg timestamp="20140207 17:43:04.771" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:04.772" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:04.772" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:04.772" starttime="20140207 17:43:04.743"></status>
</kw>
<msg timestamp="20140207 17:43:04.773" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:04.773" starttime="20140207 17:43:04.742"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
<arg>p2</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20140207 17:43:04.774" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' | ${pg}=u'p2' | ${vlan}=u'10' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:43:04.774" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' | u'p2' | u'10' ]</msg>
<msg timestamp="20140207 17:43:04.776" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h1h2h3 vns = h1h2h3 port-group = p2 vlan = 10
</msg>
<msg timestamp="20140207 17:43:04.778" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]/port-group-membership-rules[port-group-name="p2"]
</msg>
<msg timestamp="20140207 17:43:04.779" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:04.781" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p2", 
    "vlan": "10"
}
</msg>
<msg timestamp="20140207 17:43:04.804" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:04.806" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:04.806" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:04.806" starttime="20140207 17:43:04.774"></status>
</kw>
<msg timestamp="20140207 17:43:04.806" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:04.806" starttime="20140207 17:43:04.773"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
<arg>p3</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20140207 17:43:04.808" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' | ${pg}=u'p3' | ${vlan}=u'10' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:43:04.809" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' | u'p3' | u'10' ]</msg>
<msg timestamp="20140207 17:43:04.811" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h1h2h3 vns = h1h2h3 port-group = p3 vlan = 10
</msg>
<msg timestamp="20140207 17:43:04.814" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]/port-group-membership-rules[port-group-name="p3"]
</msg>
<msg timestamp="20140207 17:43:04.816" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:04.818" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p3", 
    "vlan": "10"
}
</msg>
<msg timestamp="20140207 17:43:04.850" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:04.852" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:04.852" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:04.852" starttime="20140207 17:43:04.808"></status>
</kw>
<msg timestamp="20140207 17:43:04.852" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:04.852" starttime="20140207 17:43:04.807"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140207 17:43:04.853" level="TRACE">Arguments: [ u'5' ]</msg>
<msg timestamp="20140207 17:43:09.853" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20140207 17:43:09.854" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:09.854" starttime="20140207 17:43:04.852"></status>
</kw>
<doc></doc>
<tags>
<tag>sanity</tag>
<tag>T5</tag>
</tags>
<status status="PASS" endtime="20140207 17:43:09.854" critical="yes" starttime="20140207 17:42:58.764"></status>
</test>
<test id="s1-t2" name="ping h4 to h5 dual rack dual leaf dynamic endpoints">
<kw type="setup" name="T5 base test setup">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:43:09.856" level="TRACE">Arguments: [  ]</msg>
<kw type="kw" name="BsnCommon.Base Test Setup">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:43:09.856" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20140207 17:43:09.857" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:09.857" starttime="20140207 17:43:09.856"></status>
</kw>
<kw type="kw" name="add a tenant">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
</arguments>
<msg timestamp="20140207 17:43:09.857" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' ]</msg>
<kw type="kw" name="T5.Rest Add Tenant">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
</arguments>
<msg timestamp="20140207 17:43:09.858" level="TRACE">Arguments: [ u'h1h2h3' ]</msg>
<msg timestamp="20140207 17:43:09.860" level="INFO">[T5.py:T5.rest_add_tenant:23] Input arguments: tenant = h1h2h3
</msg>
<msg timestamp="20140207 17:43:09.862" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]
</msg>
<msg timestamp="20140207 17:43:09.864" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:09.866" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h1h2h3"
}
</msg>
<msg timestamp="20140207 17:43:09.916" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:09.919" level="INFO">[T5.py:T5.rest_add_tenant:27] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:09.919" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:09.919" starttime="20140207 17:43:09.858"></status>
</kw>
<msg timestamp="20140207 17:43:09.919" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:09.919" starttime="20140207 17:43:09.857"></status>
</kw>
<kw type="kw" name="add a vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
</arguments>
<msg timestamp="20140207 17:43:09.920" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' ]</msg>
<kw type="kw" name="T5.Rest Add Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
</arguments>
<msg timestamp="20140207 17:43:09.920" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' ]</msg>
<msg timestamp="20140207 17:43:09.922" level="INFO">[T5.py:T5.rest_add_vns:115] Input arguments: tenant = h1h2h3 vns = h1h2h3
</msg>
<msg timestamp="20140207 17:43:09.924" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]
</msg>
<msg timestamp="20140207 17:43:09.926" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:09.929" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h1h2h3"
}
</msg>
<msg timestamp="20140207 17:43:09.999" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:09.999" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:09.999" starttime="20140207 17:43:09.920"></status>
</kw>
<msg timestamp="20140207 17:43:09.999" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:09.999" starttime="20140207 17:43:09.919"></status>
</kw>
<kw type="kw" name="add a tenant">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
</arguments>
<msg timestamp="20140207 17:43:10.000" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' ]</msg>
<kw type="kw" name="T5.Rest Add Tenant">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.001" level="TRACE">Arguments: [ u'h4h5h6' ]</msg>
<msg timestamp="20140207 17:43:10.003" level="INFO">[T5.py:T5.rest_add_tenant:23] Input arguments: tenant = h4h5h6
</msg>
<msg timestamp="20140207 17:43:10.006" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]
</msg>
<msg timestamp="20140207 17:43:10.008" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.010" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h4h5h6"
}
</msg>
<msg timestamp="20140207 17:43:10.068" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.070" level="INFO">[T5.py:T5.rest_add_tenant:27] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.070" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.070" starttime="20140207 17:43:10.000"></status>
</kw>
<msg timestamp="20140207 17:43:10.071" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.071" starttime="20140207 17:43:09.999"></status>
</kw>
<kw type="kw" name="add a vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
</arguments>
<msg timestamp="20140207 17:43:10.072" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' ]</msg>
<kw type="kw" name="T5.Rest Add Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.073" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' ]</msg>
<msg timestamp="20140207 17:43:10.075" level="INFO">[T5.py:T5.rest_add_vns:115] Input arguments: tenant = h4h5h6 vns = h4h5h6
</msg>
<msg timestamp="20140207 17:43:10.077" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]
</msg>
<msg timestamp="20140207 17:43:10.080" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.082" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h4h5h6"
}
</msg>
<msg timestamp="20140207 17:43:10.134" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.134" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.134" starttime="20140207 17:43:10.072"></status>
</kw>
<msg timestamp="20140207 17:43:10.135" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.135" starttime="20140207 17:43:10.071"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:43:10.136" level="TRACE">Arguments: [ ${pg}=u'p1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.136" level="TRACE">Arguments: [ u'p1' ]</msg>
<msg timestamp="20140207 17:43:10.138" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p1
</msg>
<msg timestamp="20140207 17:43:10.140" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p1"]
</msg>
<msg timestamp="20140207 17:43:10.142" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.144" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p1"
}
</msg>
<msg timestamp="20140207 17:43:10.175" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.177" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.177" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.177" starttime="20140207 17:43:10.136"></status>
</kw>
<msg timestamp="20140207 17:43:10.177" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.177" starttime="20140207 17:43:10.135"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-a</arg>
<arg>${h1_intf0}</arg>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:43:10.178" level="TRACE">Arguments: [ ${switch}=u'leaf0-a' | ${intf}=u'ethernet8' | ${pg}=u'p1' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.179" level="TRACE">Arguments: [ u'leaf0-a' | u'ethernet8' | u'p1' ]</msg>
<msg timestamp="20140207 17:43:10.181" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-a Interface-name = ethernet8 port-group = p1
</msg>
<msg timestamp="20140207 17:43:10.184" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-a"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:43:10.187" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.190" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p1"
}
</msg>
<msg timestamp="20140207 17:43:10.218" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.220" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.220" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.220" starttime="20140207 17:43:10.178"></status>
</kw>
<msg timestamp="20140207 17:43:10.220" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.220" starttime="20140207 17:43:10.177"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-b</arg>
<arg>${h1_intf1}</arg>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:43:10.221" level="TRACE">Arguments: [ ${switch}=u'leaf0-b' | ${intf}=u'ethernet8' | ${pg}=u'p1' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.222" level="TRACE">Arguments: [ u'leaf0-b' | u'ethernet8' | u'p1' ]</msg>
<msg timestamp="20140207 17:43:10.224" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-b Interface-name = ethernet8 port-group = p1
</msg>
<msg timestamp="20140207 17:43:10.226" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-b"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:43:10.228" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.230" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p1"
}
</msg>
<msg timestamp="20140207 17:43:10.256" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.260" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.260" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.260" starttime="20140207 17:43:10.222"></status>
</kw>
<msg timestamp="20140207 17:43:10.260" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.260" starttime="20140207 17:43:10.221"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p1</arg>
</arguments>
<msg timestamp="20140207 17:43:10.261" level="TRACE">Arguments: [ u'p1' ]</msg>
<msg timestamp="20140207 17:43:10.263" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p1
</msg>
<msg timestamp="20140207 17:43:10.264" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p1"]
</msg>
<msg timestamp="20140207 17:43:10.266" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.268" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:43:10.292" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.293" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.293" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.293" starttime="20140207 17:43:10.261"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:43:10.294" level="TRACE">Arguments: [ ${pg}=u'p2' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.295" level="TRACE">Arguments: [ u'p2' ]</msg>
<msg timestamp="20140207 17:43:10.297" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p2
</msg>
<msg timestamp="20140207 17:43:10.299" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p2"]
</msg>
<msg timestamp="20140207 17:43:10.301" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.303" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p2"
}
</msg>
<msg timestamp="20140207 17:43:10.327" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.329" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.329" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.329" starttime="20140207 17:43:10.295"></status>
</kw>
<msg timestamp="20140207 17:43:10.330" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.330" starttime="20140207 17:43:10.294"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-a</arg>
<arg>${h2_intf0}</arg>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:43:10.330" level="TRACE">Arguments: [ ${switch}=u'leaf0-a' | ${intf}=u'ethernet9' | ${pg}=u'p2' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.331" level="TRACE">Arguments: [ u'leaf0-a' | u'ethernet9' | u'p2' ]</msg>
<msg timestamp="20140207 17:43:10.333" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-a Interface-name = ethernet9 port-group = p2
</msg>
<msg timestamp="20140207 17:43:10.335" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-a"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:43:10.337" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.339" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p2"
}
</msg>
<msg timestamp="20140207 17:43:10.361" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.363" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.363" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.363" starttime="20140207 17:43:10.331"></status>
</kw>
<msg timestamp="20140207 17:43:10.363" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.363" starttime="20140207 17:43:10.330"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf0-b</arg>
<arg>${h2_intf1}</arg>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:43:10.364" level="TRACE">Arguments: [ ${switch}=u'leaf0-b' | ${intf}=u'ethernet9' | ${pg}=u'p2' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.365" level="TRACE">Arguments: [ u'leaf0-b' | u'ethernet9' | u'p2' ]</msg>
<msg timestamp="20140207 17:43:10.367" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf0-b Interface-name = ethernet9 port-group = p2
</msg>
<msg timestamp="20140207 17:43:10.369" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf0-b"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:43:10.371" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.373" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p2"
}
</msg>
<msg timestamp="20140207 17:43:10.392" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.394" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf0-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.394" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.394" starttime="20140207 17:43:10.365"></status>
</kw>
<msg timestamp="20140207 17:43:10.395" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.395" starttime="20140207 17:43:10.364"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p2</arg>
</arguments>
<msg timestamp="20140207 17:43:10.395" level="TRACE">Arguments: [ u'p2' ]</msg>
<msg timestamp="20140207 17:43:10.397" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p2
</msg>
<msg timestamp="20140207 17:43:10.399" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p2"]
</msg>
<msg timestamp="20140207 17:43:10.400" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.402" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:43:10.425" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.427" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.427" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.427" starttime="20140207 17:43:10.395"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:43:10.428" level="TRACE">Arguments: [ ${pg}=u'p3' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.429" level="TRACE">Arguments: [ u'p3' ]</msg>
<msg timestamp="20140207 17:43:10.431" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p3
</msg>
<msg timestamp="20140207 17:43:10.433" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p3"]
</msg>
<msg timestamp="20140207 17:43:10.435" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.437" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p3"
}
</msg>
<msg timestamp="20140207 17:43:10.497" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.499" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.499" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.499" starttime="20140207 17:43:10.428"></status>
</kw>
<msg timestamp="20140207 17:43:10.499" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.499" starttime="20140207 17:43:10.427"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-a</arg>
<arg>${h3_intf0}</arg>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:43:10.500" level="TRACE">Arguments: [ ${switch}=u'leaf1-a' | ${intf}=u'ethernet8' | ${pg}=u'p3' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.500" level="TRACE">Arguments: [ u'leaf1-a' | u'ethernet8' | u'p3' ]</msg>
<msg timestamp="20140207 17:43:10.502" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-a Interface-name = ethernet8 port-group = p3
</msg>
<msg timestamp="20140207 17:43:10.504" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-a"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:43:10.506" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.508" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p3"
}
</msg>
<msg timestamp="20140207 17:43:10.541" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.543" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.544" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.544" starttime="20140207 17:43:10.500"></status>
</kw>
<msg timestamp="20140207 17:43:10.544" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.544" starttime="20140207 17:43:10.499"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-b</arg>
<arg>${h3_intf1}</arg>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:43:10.545" level="TRACE">Arguments: [ ${switch}=u'leaf1-b' | ${intf}=u'ethernet8' | ${pg}=u'p3' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.546" level="TRACE">Arguments: [ u'leaf1-b' | u'ethernet8' | u'p3' ]</msg>
<msg timestamp="20140207 17:43:10.548" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-b Interface-name = ethernet8 port-group = p3
</msg>
<msg timestamp="20140207 17:43:10.550" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-b"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:43:10.552" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.554" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p3"
}
</msg>
<msg timestamp="20140207 17:43:10.580" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.583" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.583" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.583" starttime="20140207 17:43:10.546"></status>
</kw>
<msg timestamp="20140207 17:43:10.584" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.583" starttime="20140207 17:43:10.544"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p3</arg>
</arguments>
<msg timestamp="20140207 17:43:10.584" level="TRACE">Arguments: [ u'p3' ]</msg>
<msg timestamp="20140207 17:43:10.586" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p3
</msg>
<msg timestamp="20140207 17:43:10.588" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p3"]
</msg>
<msg timestamp="20140207 17:43:10.589" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.591" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:43:10.609" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.611" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.611" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.611" starttime="20140207 17:43:10.584"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:43:10.612" level="TRACE">Arguments: [ ${pg}=u'p4' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.613" level="TRACE">Arguments: [ u'p4' ]</msg>
<msg timestamp="20140207 17:43:10.614" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p4
</msg>
<msg timestamp="20140207 17:43:10.617" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p4"]
</msg>
<msg timestamp="20140207 17:43:10.619" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.621" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p4"
}
</msg>
<msg timestamp="20140207 17:43:10.653" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.655" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.655" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.655" starttime="20140207 17:43:10.612"></status>
</kw>
<msg timestamp="20140207 17:43:10.656" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.656" starttime="20140207 17:43:10.611"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-a</arg>
<arg>${h4_intf0}</arg>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:43:10.656" level="TRACE">Arguments: [ ${switch}=u'leaf1-a' | ${intf}=u'ethernet9' | ${pg}=u'p4' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.657" level="TRACE">Arguments: [ u'leaf1-a' | u'ethernet9' | u'p4' ]</msg>
<msg timestamp="20140207 17:43:10.659" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-a Interface-name = ethernet9 port-group = p4
</msg>
<msg timestamp="20140207 17:43:10.661" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-a"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:43:10.663" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.665" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p4"
}
</msg>
<msg timestamp="20140207 17:43:10.686" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.688" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.688" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.688" starttime="20140207 17:43:10.657"></status>
</kw>
<msg timestamp="20140207 17:43:10.688" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.688" starttime="20140207 17:43:10.656"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf1-b</arg>
<arg>${h4_intf1}</arg>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:43:10.689" level="TRACE">Arguments: [ ${switch}=u'leaf1-b' | ${intf}=u'ethernet9' | ${pg}=u'p4' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.690" level="TRACE">Arguments: [ u'leaf1-b' | u'ethernet9' | u'p4' ]</msg>
<msg timestamp="20140207 17:43:10.692" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf1-b Interface-name = ethernet9 port-group = p4
</msg>
<msg timestamp="20140207 17:43:10.694" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf1-b"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:43:10.696" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.699" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p4"
}
</msg>
<msg timestamp="20140207 17:43:10.722" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.724" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf1-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.724" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.724" starttime="20140207 17:43:10.690"></status>
</kw>
<msg timestamp="20140207 17:43:10.724" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.724" starttime="20140207 17:43:10.689"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p4</arg>
</arguments>
<msg timestamp="20140207 17:43:10.725" level="TRACE">Arguments: [ u'p4' ]</msg>
<msg timestamp="20140207 17:43:10.726" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p4
</msg>
<msg timestamp="20140207 17:43:10.728" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p4"]
</msg>
<msg timestamp="20140207 17:43:10.730" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.732" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:43:10.749" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.751" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.751" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.751" starttime="20140207 17:43:10.724"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:43:10.752" level="TRACE">Arguments: [ ${pg}=u'p5' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.753" level="TRACE">Arguments: [ u'p5' ]</msg>
<msg timestamp="20140207 17:43:10.755" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p5
</msg>
<msg timestamp="20140207 17:43:10.757" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p5"]
</msg>
<msg timestamp="20140207 17:43:10.759" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.761" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p5"
}
</msg>
<msg timestamp="20140207 17:43:10.781" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.783" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.783" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.783" starttime="20140207 17:43:10.752"></status>
</kw>
<msg timestamp="20140207 17:43:10.783" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.783" starttime="20140207 17:43:10.751"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-a</arg>
<arg>${h5_intf0}</arg>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:43:10.784" level="TRACE">Arguments: [ ${switch}=u'leaf2-a' | ${intf}=u'ethernet8' | ${pg}=u'p5' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.784" level="TRACE">Arguments: [ u'leaf2-a' | u'ethernet8' | u'p5' ]</msg>
<msg timestamp="20140207 17:43:10.786" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-a Interface-name = ethernet8 port-group = p5
</msg>
<msg timestamp="20140207 17:43:10.789" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-a"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:43:10.791" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.793" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p5"
}
</msg>
<msg timestamp="20140207 17:43:10.812" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.814" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.814" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.814" starttime="20140207 17:43:10.784"></status>
</kw>
<msg timestamp="20140207 17:43:10.815" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.815" starttime="20140207 17:43:10.783"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-b</arg>
<arg>${h5_intf1}</arg>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:43:10.816" level="TRACE">Arguments: [ ${switch}=u'leaf2-b' | ${intf}=u'ethernet8' | ${pg}=u'p5' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.816" level="TRACE">Arguments: [ u'leaf2-b' | u'ethernet8' | u'p5' ]</msg>
<msg timestamp="20140207 17:43:10.818" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-b Interface-name = ethernet8 port-group = p5
</msg>
<msg timestamp="20140207 17:43:10.820" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-b"]/interface[name="ethernet8"]
</msg>
<msg timestamp="20140207 17:43:10.822" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.824" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet8", 
    "port-group-name": "p5"
}
</msg>
<msg timestamp="20140207 17:43:10.845" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.847" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet8\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.847" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.847" starttime="20140207 17:43:10.816"></status>
</kw>
<msg timestamp="20140207 17:43:10.847" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.847" starttime="20140207 17:43:10.815"></status>
</kw>
<kw type="kw" name="T5.Rest Add Portgroup Lacp">
<doc></doc>
<arguments>
<arg>p5</arg>
</arguments>
<msg timestamp="20140207 17:43:10.848" level="TRACE">Arguments: [ u'p5' ]</msg>
<msg timestamp="20140207 17:43:10.849" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:251] Input arguments: port-group = p5
</msg>
<msg timestamp="20140207 17:43:10.851" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] RestClient: PATCH http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p5"]
</msg>
<msg timestamp="20140207 17:43:10.853" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.855" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] Data = {
    "mode": "lacp"
}
</msg>
<msg timestamp="20140207 17:43:10.877" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.patch:71] REST result:
{
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.879" level="INFO">[T5.py:T5.rest_add_portgroup_lacp:255] Output: {
    "content": {}, 
    "http_verb": "PATCH", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.879" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.879" starttime="20140207 17:43:10.848"></status>
</kw>
<kw type="kw" name="add a portgroup">
<doc></doc>
<arguments>
<arg>p6</arg>
</arguments>
<msg timestamp="20140207 17:43:10.880" level="TRACE">Arguments: [ ${pg}=u'p6' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup">
<doc></doc>
<arguments>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.880" level="TRACE">Arguments: [ u'p6' ]</msg>
<msg timestamp="20140207 17:43:10.882" level="INFO">[T5.py:T5.rest_add_portgroup:164] Input arguments: port-group = p6
</msg>
<msg timestamp="20140207 17:43:10.884" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name="p6"]
</msg>
<msg timestamp="20140207 17:43:10.886" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.888" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "p6"
}
</msg>
<msg timestamp="20140207 17:43:10.909" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.911" level="INFO">[T5.py:T5.rest_add_portgroup:168] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/fabric/port-group[name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.911" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.911" starttime="20140207 17:43:10.880"></status>
</kw>
<msg timestamp="20140207 17:43:10.911" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.911" starttime="20140207 17:43:10.879"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-a</arg>
<arg>${h6_intf0}</arg>
<arg>p6</arg>
</arguments>
<msg timestamp="20140207 17:43:10.912" level="TRACE">Arguments: [ ${switch}=u'leaf2-a' | ${intf}=u'ethernet9' | ${pg}=u'p6' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.913" level="TRACE">Arguments: [ u'leaf2-a' | u'ethernet9' | u'p6' ]</msg>
<msg timestamp="20140207 17:43:10.915" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-a Interface-name = ethernet9 port-group = p6
</msg>
<msg timestamp="20140207 17:43:10.917" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-a"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:43:10.919" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.921" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p6"
}
</msg>
<msg timestamp="20140207 17:43:10.939" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.941" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-a\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.941" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.941" starttime="20140207 17:43:10.912"></status>
</kw>
<msg timestamp="20140207 17:43:10.941" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.941" starttime="20140207 17:43:10.911"></status>
</kw>
<kw type="kw" name="add interface to portgroup">
<doc></doc>
<arguments>
<arg>leaf2-b</arg>
<arg>${h6_intf1}</arg>
<arg>p6</arg>
</arguments>
<msg timestamp="20140207 17:43:10.942" level="TRACE">Arguments: [ ${switch}=u'leaf2-b' | ${intf}=u'ethernet9' | ${pg}=u'p6' ]</msg>
<kw type="kw" name="T5.Rest Add Interface To Portgroup">
<doc></doc>
<arguments>
<arg>${switch}</arg>
<arg>${intf}</arg>
<arg>${pg}</arg>
</arguments>
<msg timestamp="20140207 17:43:10.943" level="TRACE">Arguments: [ u'leaf2-b' | u'ethernet9' | u'p6' ]</msg>
<msg timestamp="20140207 17:43:10.945" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:236] Input arguments: switch-name = leaf2-b Interface-name = ethernet9 port-group = p6
</msg>
<msg timestamp="20140207 17:43:10.947" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name="leaf2-b"]/interface[name="ethernet9"]
</msg>
<msg timestamp="20140207 17:43:10.949" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:10.951" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "ethernet9", 
    "port-group-name": "p6"
}
</msg>
<msg timestamp="20140207 17:43:10.977" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:10.979" level="INFO">[T5.py:T5.rest_add_interface_to_portgroup:240] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/core/switch-config[name=\"leaf2-b\"]/interface[name=\"ethernet9\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:10.979" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:10.979" starttime="20140207 17:43:10.942"></status>
</kw>
<msg timestamp="20140207 17:43:10.980" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:10.980" starttime="20140207 17:43:10.941"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140207 17:43:10.980" level="TRACE">Arguments: [ u'5' ]</msg>
<msg timestamp="20140207 17:43:15.981" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20140207 17:43:15.982" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:15.981" starttime="20140207 17:43:10.980"></status>
</kw>
<msg timestamp="20140207 17:43:15.982" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:15.982" starttime="20140207 17:43:09.855"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
<arg>p4</arg>
<arg>-1</arg>
</arguments>
<msg timestamp="20140207 17:43:15.983" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' | ${pg}=u'p4' | ${vlan}=u'-1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:43:15.984" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' | u'p4' | u'-1' ]</msg>
<msg timestamp="20140207 17:43:15.985" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h4h5h6 vns = h4h5h6 port-group = p4 vlan = -1
</msg>
<msg timestamp="20140207 17:43:15.987" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]/port-group-membership-rules[port-group-name="p4"]
</msg>
<msg timestamp="20140207 17:43:15.988" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:15.990" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p4", 
    "vlan": "-1"
}
</msg>
<msg timestamp="20140207 17:43:16.028" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:16.029" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:16.030" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:16.029" starttime="20140207 17:43:15.983"></status>
</kw>
<msg timestamp="20140207 17:43:16.030" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:16.030" starttime="20140207 17:43:15.982"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
<arg>p5</arg>
<arg>-1</arg>
</arguments>
<msg timestamp="20140207 17:43:16.031" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' | ${pg}=u'p5' | ${vlan}=u'-1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:43:16.031" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' | u'p5' | u'-1' ]</msg>
<msg timestamp="20140207 17:43:16.033" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h4h5h6 vns = h4h5h6 port-group = p5 vlan = -1
</msg>
<msg timestamp="20140207 17:43:16.035" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]/port-group-membership-rules[port-group-name="p5"]
</msg>
<msg timestamp="20140207 17:43:16.037" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:16.038" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p5", 
    "vlan": "-1"
}
</msg>
<msg timestamp="20140207 17:43:16.086" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:16.087" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:16.087" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:16.087" starttime="20140207 17:43:16.031"></status>
</kw>
<msg timestamp="20140207 17:43:16.088" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:16.088" starttime="20140207 17:43:16.030"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
<arg>p6</arg>
<arg>-1</arg>
</arguments>
<msg timestamp="20140207 17:43:16.089" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' | ${pg}=u'p6' | ${vlan}=u'-1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:43:16.089" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' | u'p6' | u'-1' ]</msg>
<msg timestamp="20140207 17:43:16.091" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h4h5h6 vns = h4h5h6 port-group = p6 vlan = -1
</msg>
<msg timestamp="20140207 17:43:16.093" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]/port-group-membership-rules[port-group-name="p6"]
</msg>
<msg timestamp="20140207 17:43:16.094" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=2Osmz3t2S64BRoWcNyXz7FcOrFqUTskH", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:43:16.096" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p6", 
    "vlan": "-1"
}
</msg>
<msg timestamp="20140207 17:43:16.142" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:43:16.144" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:43:16.144" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:43:16.144" starttime="20140207 17:43:16.089"></status>
</kw>
<msg timestamp="20140207 17:43:16.144" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:16.144" starttime="20140207 17:43:16.088"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140207 17:43:16.145" level="TRACE">Arguments: [ u'5' ]</msg>
<msg timestamp="20140207 17:43:21.146" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20140207 17:43:21.146" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:21.146" starttime="20140207 17:43:16.145"></status>
</kw>
<doc></doc>
<tags>
<tag>sanity</tag>
<tag>T5</tag>
</tags>
<status status="PASS" endtime="20140207 17:43:21.146" critical="yes" starttime="20140207 17:43:09.854"></status>
</test>
<kw type="teardown" name="BsnCommon.Base Suite Teardown">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:43:21.148" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20140207 17:43:21.149" level="INFO">[BsnCommon.py:BsnCommon.base_suite_teardown:36] Closing device connection for node 'c2'
</msg>
<msg timestamp="20140207 17:43:21.150" level="INFO">[devconf.py:autobot.devconf.close:222] Closing device 10.192.106.11
</msg>
<msg timestamp="20140207 17:43:21.152" level="INFO">[BsnCommon.py:BsnCommon.base_suite_teardown:36] Closing device connection for node 'c1'
</msg>
<msg timestamp="20140207 17:43:21.153" level="INFO">[devconf.py:autobot.devconf.close:222] Closing device 10.192.106.10
</msg>
<msg timestamp="20140207 17:43:21.153" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:43:21.153" starttime="20140207 17:43:21.148"></status>
</kw>
<doc>T5 Platform Smoke/Sanity Test Suite</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140207 17:43:21.153" starttime="20140207 17:42:53.197"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
<stat info="" links="" doc="" combined="" pass="2" fail="0">sanity</stat>
<stat info="" links="" doc="" combined="" pass="2" fail="0">T5</stat>
</tag>
<suite>
<stat fail="0" pass="2" id="s1" name="Temp">Temp</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
