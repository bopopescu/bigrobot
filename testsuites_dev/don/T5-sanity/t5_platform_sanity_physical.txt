== T5 Platform Sanity Test Suite ==

* Setting
Documentation    T5 Platform Smoke/Sanity Test Suite
Suite Setup      base suite setup
#Suite Teardown   base suite teardown
#Test Setup       T5 base test setup
#Test Teardown    T5 base test teardown
Force Tags       T5 
Library          keywords/BsnCommon.py
Library		 keywords_dev/don/T5Platform.py
Library		 keywords_dev/don/T5Utilities.py
Library          keywords/Mininet.py
Library	    	 keywords/Host.py
Resource	 keywords_dev/prashanth/t5_dualleaf_three_rack_physical_resource.txt
Library          keywords_dev/prashanth/T5.py
Library	         keywords_dev/prashanth/T5Fabric.py

* Variables
${h4_ip}  192.168.0.11
${h5_ip}  192.168.0.30
${h6_ip}  192.168.0.31
${h4_mac}	00:10:18:f0:e9:70
${h5_mac}	90:e2:ba:4f:80:dc
${h6_mac}	90:e2:ba:4e:bb:90
${h1_intf0}  ethernet48
${h1_intf1}  ethernet48
${h2_intf0}  ethernet47
${h2_intf1}  ethernet47
${h3_intf0}  ethernet1
${h3_intf1}  ethernet1
${h4_intf0}  ethernet2
${h4_intf1}  ethernet2
${h5_intf0}  ethernet48
${h5_intf1}  ethernet48
${h6_intf0}  ethernet47
${h6_intf1}  ethernet47
${h1_tag_ip}	192.168.4.20
${h2_tag_ip}	192.168.4.21
${h3_tag_ip}	192.168.4.10
${h1_tag_mac}  90:e2:ba:4e:bc:98
${h2_tag_mac}  90:e2:ba:4f:80:b1
${h3_tag_mac}  00:10:18:f0:eb:e0


* Test Case 

Failover By Rebooting & Re-verify Connectivity
   [Tags]  sanity 
   : FOR    ${Iteration}    IN RANGE    1    50
   \	Log To Console   \n================ 2K Endpoints Iteration ${Iteration} ===============\n
   \	cli verify cluster master reboot

Add physical switches to the controller 
   [Tags]  smoke  sanity  skipped
   sleep  5
   add fabric switch
   sleep  5
   rest verify fabric switch all
   rest verify fabric link 
   
Add h1,h2,h3 in to a VNS and verify the connectivity
   [Tags]  sanity   skipped
   add a tenant  h1h2h3
   add a vns  h1h2h3  h1h2h3
   add portgroup to vns  h1h2h3  h1h2h3  p1  10
   add portgroup to vns  h1h2h3  h1h2h3  p2  10
   add portgroup to vns  h1h2h3  h1h2h3  p3  10
   sleep  10
   ${loss}=  bash ping  h1  ${h2_tag_ip}  source_if=bond0.10
   Should Be True  ${loss} == 0 	
   ${loss}=  bash ping  h1  ${h3_tag_ip}  source_if=bond0.10
   Should Be True  ${loss} == 0   


Add h4,h5,h6 in to a VNS and verify the connectivity
   [Tags]  sanity   skipped
   add a tenant  h4h5h6
   add a vns  h4h5h6  h4h5h6
   add portgroup to vns  h4h5h6  h4h5h6  p4  -1
   add portgroup to vns  h4h5h6  h4h5h6  p5  -1
   add portgroup to vns  h4h5h6  h4h5h6  p6  -1
   sleep  10
   ${loss}=  bash ping  h5  ${h4_ip}  source_if=bond0
   Should Be True  ${loss} == 0		
   ${loss}=  bash ping  h5  ${h6_ip}  source_if=bond0
   Should Be True  ${loss} == 0					
   
 ping h5 to h6 dual leaf single rack static endpoints
   [Tags]  sanity    skipped 
   add a endpoint  A  A  e1 
   add a endpoint  A  A  e2 
   add portgroup to endpoint  A   A  e2  p6  -1
   add portgroup to endpoint  A   A  e1  p5  -1
   REST add ip endpoint  A  A  e1  ${h5_ip}
   REST add mac endpoint  A  A  e1  ${h5_mac}
   REST add ip endpoint  A  A  e2  ${h6_ip}
   REST add mac endpoint  A  A  e2  ${h6_mac}
   add portgroup to vns  A  A  p6  -1 
   add portgroup to vns  A  A  p5  -1
   #sleep  5
   #${loss}=  bash ping  h5  ${h6_ip}  source_if=bond0
   #Should Be True  ${loss} == 0 	
   
		
ping h4 to h5 dual rack dual leaf static endpoints
   [Tags]  sanity  skipped      
   add a endpoint  A  A  e1 
   add a endpoint  A  A  e2 
   add portgroup to endpoint  A   A  e2  p5  -1
   add portgroup to endpoint  A   A  e1  p4  -1
   REST add ip endpoint  A  A  e1  ${h4_ip}
   REST add mac endpoint  A  A  e1  ${h4_mac}
   REST add ip endpoint  A  A  e2  ${h5_ip}
   REST add mac endpoint  A  A  e2  ${h5_mac}
   add portgroup to vns  A  A  p5  -1 
   add portgroup to vns  A  A  p4  -1 
   #sleep  5
   #${loss}=  bash ping  h5  ${h4_ip}  source_if=bond0
   #Should Be True  ${loss} == 0   
   				
		
ping h1 to h2 dual leaf single rack static endpoints tag
   [Tags]  sanity   skipped
   add a endpoint  A  A  e1 
   add portgroup to endpoint  A  A  e1  p1  10
   add a endpoint  A  A  e2 
   add portgroup to endpoint  A  A  e2  p2  10
   REST add ip endpoint  A  A  e1  ${h1_tag_ip}
   REST add mac endpoint  A  A  e1  ${h1_tag_mac}
   REST add ip endpoint  A  A  e2  ${h2_tag_ip}
   REST add mac endpoint  A  A  e2  ${h2_tag_mac}
   add portgroup to vns  A  A  p2  10 
   add portgroup to vns  A  A  p1  10
   #sleep  5 
   #${loss}=  bash ping  h1  ${h2_tag_ip}  source_if=bond0.10
   #Should Be True  ${loss} == 0

   
ping h1 to h3 dual rack dual leaf static endpoints tag 
   [Tags]  sanity  skipped
   add a endpoint  A  A  e1  
   add portgroup to endpoint  A  A  e1  p1  10
   add a endpoint  A  A  e2 
   add portgroup to endpoint  A  A  e2  p3  10 
   REST add ip endpoint  A  A  e1  ${h1_tag_ip}
   REST add mac endpoint  A  A  e1  ${h1_tag_mac}
   REST add ip endpoint  A  A  e2  ${h3_tag_ip}
   REST add mac endpoint  A  A  e2  ${h3_tag_mac}
   add portgroup to vns  A  A  p3  10 
   add portgroup to vns  A  A  p1  10
   #sleep  5
   #${loss}=  bash ping  h1  ${h3_tag_ip}  source_if=bond0.10
   #Should Be True  ${loss} == 0  
   

Delete physical switches from the controller
	[Tags]  smoke  sanity  skipped
	delete fabric switch  

* Keywords

T5 base test setup
   base test setup
   add a portgroup  p1 
   add interface to portgroup  leaf0-a  ${h1_intf0}  p1
   add interface to portgroup  leaf0-b  ${h1_intf1}  p1
   rest add portgroup lacp  p1
   add a portgroup  p2 
   add interface to portgroup  leaf0-a  ${h2_intf0}  p2
   add interface to portgroup  leaf0-b  ${h2_intf1}  p2
   rest add portgroup lacp  p2
   add a portgroup  p3 
   add interface to portgroup  leaf1-a  ${h3_intf0}  p3
   add interface to portgroup  leaf1-b  ${h3_intf1}  p3
   rest add portgroup lacp  p3
   add a portgroup  p4 
   add interface to portgroup  leaf1-a  ${h4_intf0}  p4
   add interface to portgroup  leaf1-b  ${h4_intf1}  p4
   rest add portgroup lacp  p4
   add a portgroup  p5 
   add interface to portgroup  leaf2-a  ${h5_intf0}  p5
   add interface to portgroup  leaf2-b  ${h5_intf1}  p5
   rest add portgroup lacp  p5
   add a portgroup  p6 
   add interface to portgroup  leaf2-a  ${h6_intf0}  p6
   add interface to portgroup  leaf2-b  ${h6_intf1}  p6
   sleep  5
   
T5 base test teardown
   delete a tenant  A
   delete interface from portgroup  leaf0-a  ${h1_intf0}  p1
   delete interface from portgroup  leaf0-b  ${h1_intf1}  p1
   delete interface from portgroup  leaf0-a  ${h2_intf0}  p2
   delete interface from portgroup  leaf0-b  ${h2_intf1}  p2
   delete interface from portgroup  leaf1-a  ${h3_intf0}  p3 
   delete interface from portgroup  leaf1-b  ${h3_intf1}  p3
   delete interface from portgroup  leaf1-a  ${h4_intf0}  p4
   delete interface from portgroup  leaf1-b  ${h4_intf1}  p4
   delete interface from portgroup  leaf2-a  ${h5_intf0}  p5
   delete interface from portgroup  leaf2-b  ${h5_intf1}  p5
   delete interface from portgroup  leaf2-a  ${h6_intf0}  p6 
   delete interface from portgroup  leaf2-b  ${h6_intf1}  p6  
   delete a portgroup  p1
   delete a portgroup  p2
   delete a portgroup  p3
   delete a portgroup  p4
   delete a portgroup  p5
   delete a portgroup  p6
   base test teardown
   sleep  5
         
add a tenant  [Arguments]  ${tenant} 
  REST add tenant  ${tenant}    

delete a tenant  [Arguments]  ${tenant} 
  	REST delete tenant  ${tenant}    

add a vns  [Arguments]  ${tenant}  ${vns}  
	REST add vns  ${tenant}  ${vns}   

delete a vns  [Arguments]  ${tenant}  ${vns} 
  	REST delete vns  ${tenant}  ${vns}   

add a portgroup  [Arguments]  ${pg}
  	REST add portgroup  ${pg}    

delete a portgroup  [Arguments]  ${pg}
  	REST delete portgroup  ${pg}    

add a endpoint  [Arguments]  ${tenant}  ${vns}  ${endpoint} 
  	REST add endpoint  ${tenant}  ${vns}  ${endpoint}  

delete a endpoint  [Arguments]  ${tenant}  ${vns}  ${endpoint}
  	REST delete endpoint  ${tenant}  ${vns}  ${endpoint}  

add interface to portgroup  [Arguments]  ${switch}  ${intf}  ${pg} 
  	REST add interface to portgroup  ${switch}  ${intf}  ${pg}  

delete interface from portgroup  [Arguments]  ${switch}  ${intf}  ${pg} 
  	REST delete interface from portgroup  ${switch}  ${intf}  ${pg}  

add portgroup to vns  [Arguments]  ${tenant}  ${vns}  ${pg}  ${vlan}
  	REST add portgroup to vns  ${tenant}  ${vns}  ${pg}  ${vlan} 

add portgroup to endpoint  [Arguments]  ${tenant}  ${vns}  ${endpoint}  ${pg}  ${vlan} 
  REST add portgroup to endpoint  ${tenant}  ${vns}  ${endpoint}  ${pg}  ${vlan} 

delete portgroup from vns  [Arguments]  ${tenant}  ${vns}  ${pg}  ${vlan} 
  REST delete portgroup from vns  ${tenant}  ${vns}  ${pg}  ${vlan}
  


 
