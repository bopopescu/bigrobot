<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20140207 17:47:31.965" generator="Robot 2.8.3 (Python 2.7.6 on darwin)">
<suite source="/Users/donj/Documents/workspace/bigrobot/testsuites_dev/don/T5-sanity/temp.txt" id="s1" name="Temp">
<kw type="setup" name="BsnCommon.Base Suite Setup">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:47:32.190" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20140207 17:47:32.246" level="INFO">[test.py:autobot.test.__init__:34] Loading config file /Users/donj/Documents/workspace/bigrobot/autobot/config/bsn.yaml
</msg>
<msg timestamp="20140207 17:47:32.250" level="INFO">[test.py:autobot.test.__init__:42] Loading topology file temp.topo
</msg>
<msg timestamp="20140207 17:47:32.254" level="INFO">[test.py:autobot.test.initialize:330] Initializing controller 'c2'
</msg>
<msg timestamp="20140207 17:47:32.255" level="INFO">[node.py:autobot.node.pingable_or_die:55] Ping 10.192.106.11 ('c2')
</msg>
<msg timestamp="20140207 17:47:32.257" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping command: ping -c 1 -W 100 10.192.106.11
</msg>
<msg timestamp="20140207 17:47:32.286" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping output:
PING 10.192.106.11 (10.192.106.11): 56 data bytes
64 bytes from 10.192.106.11: icmp_seq=0 ttl=64 time=23.410 ms

--- 10.192.106.11 ping statistics ---
1 packets transmitted, 1 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 23.410/23.410/23.410/0.000 ms
</msg>
<msg timestamp="20140207 17:47:32.289" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping result: Ping host '10.192.106.11' - 1 transmitted, 1 received, 0% loss

----
</msg>
<msg timestamp="20140207 17:47:32.290" level="INFO">[node.py:autobot.node.__init__:95] name=c2 host=10.192.106.11 user=admin password=adminadmin
</msg>
<msg timestamp="20140207 17:47:32.292" level="INFO">[devconf.py:autobot.devconf.__init__:48] Connecting to host 10.192.106.11 (login:admin, password:adminadmin)
</msg>
<msg timestamp="20140207 17:47:32.610" level="DEBUG">[chan 1] Max packet in: 34816 bytes</msg>
<msg timestamp="20140207 17:47:34.066" level="INFO">[devconf.py:autobot.devconf.__init__:75] Using devconf driver '&lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x107503150&gt;' (name: 'bsn_controller')
</msg>
<msg timestamp="20140207 17:47:34.068" level="INFO">[test.py:autobot.test.initialize:385] Exscript driver for 'c2': &lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x107503150&gt;
</msg>
<msg timestamp="20140207 17:47:34.069" level="INFO">[test.py:autobot.test.initialize:386] Node 'c2' is platform 'bvs'
</msg>
<msg timestamp="20140207 17:47:34.070" level="INFO">[test.py:autobot.test.initialize:330] Initializing controller 'c1'
</msg>
<msg timestamp="20140207 17:47:34.071" level="INFO">[node.py:autobot.node.pingable_or_die:55] Ping 10.192.106.10 ('c1')
</msg>
<msg timestamp="20140207 17:47:34.073" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping command: ping -c 1 -W 100 10.192.106.10
</msg>
<msg timestamp="20140207 17:47:34.080" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping output:
PING 10.192.106.10 (10.192.106.10): 56 data bytes
64 bytes from 10.192.106.10: icmp_seq=0 ttl=64 time=1.041 ms

--- 10.192.106.10 ping statistics ---
1 packets transmitted, 1 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 1.041/1.041/1.041/0.000 ms
</msg>
<msg timestamp="20140207 17:47:34.082" level="INFO">[node.py:autobot.node.pingable_or_die:56] Ping result: Ping host '10.192.106.10' - 1 transmitted, 1 received, 0% loss

----
</msg>
<msg timestamp="20140207 17:47:34.083" level="INFO">[node.py:autobot.node.__init__:95] name=c1 host=10.192.106.10 user=admin password=adminadmin
</msg>
<msg timestamp="20140207 17:47:34.085" level="INFO">[devconf.py:autobot.devconf.__init__:48] Connecting to host 10.192.106.10 (login:admin, password:adminadmin)
</msg>
<msg timestamp="20140207 17:47:34.436" level="DEBUG">[chan 1] Max packet in: 34816 bytes</msg>
<msg timestamp="20140207 17:47:38.521" level="INFO">[devconf.py:autobot.devconf.__init__:75] Using devconf driver '&lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x107503150&gt;' (name: 'bsn_controller')
</msg>
<msg timestamp="20140207 17:47:38.523" level="INFO">[test.py:autobot.test.initialize:385] Exscript driver for 'c1': &lt;Exscript.protocols.drivers.bsn_controller.BsnControllerDriver object at 0x107503150&gt;
</msg>
<msg timestamp="20140207 17:47:38.524" level="INFO">[test.py:autobot.test.initialize:386] Node 'c1' is platform 'bvs'
</msg>
<msg timestamp="20140207 17:47:38.526" level="INFO">[__init__.py:autobot.helpers.prettify_log:318] self._topology: 
{'c1': &lt;autobot.node.ControllerNode object at 0x107b8eb90&gt;,
 'c2': &lt;autobot.node.ControllerNode object at 0x10709f210&gt;}
</msg>
<msg timestamp="20140207 17:47:38.527" level="INFO">[test.py:autobot.test.initialize:389] Test object initialization completed.
</msg>
<msg timestamp="20140207 17:47:38.528" level="INFO">[test.py:autobot.test.setup_controller_firewall_allow_rest_access:458] Enabling REST access via firewall filters
</msg>
<msg timestamp="20140207 17:47:38.529" level="INFO">[test.py:autobot.test.setup_controller_http_session_cookie:483] Setting up HTTP session cookies for REST access
</msg>
<msg timestamp="20140207 17:47:38.531" level="INFO">[restclient.py:autobot.restclient.request_session_cookie:48] session_cookie_url: /api/v1/auth/login
</msg>
<msg timestamp="20140207 17:47:38.533" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] RestClient: POST http://10.192.106.11:8080/api/v1/auth/login
</msg>
<msg timestamp="20140207 17:47:38.534" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Headers = {
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:38.536" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Data = {
    "password": "adminadmin", 
    "user": "admin"
}
</msg>
<msg timestamp="20140207 17:47:38.640" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] REST result:
{
    "content": {
        "error_message": "", 
        "session_cookie": "8z2MbKbWUEbs-b9pFOp36CZmvPYBUmi2", 
        "success": true
    }, 
    "http_verb": "POST", 
    "request_url": "http://10.192.106.11:8080/api/v1/auth/login", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:38.642" level="INFO">[restclient.py:autobot.restclient.set_session_cookie:56] Saving session cookie 8z2MbKbWUEbs-b9pFOp36CZmvPYBUmi2
</msg>
<msg timestamp="20140207 17:47:38.643" level="INFO">[test.py:autobot.test.setup_controller_firewall_allow_rest_access:458] Enabling REST access via firewall filters
</msg>
<msg timestamp="20140207 17:47:38.645" level="INFO">[test.py:autobot.test.setup_controller_http_session_cookie:483] Setting up HTTP session cookies for REST access
</msg>
<msg timestamp="20140207 17:47:38.646" level="INFO">[restclient.py:autobot.restclient.request_session_cookie:48] session_cookie_url: /api/v1/auth/login
</msg>
<msg timestamp="20140207 17:47:38.648" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] RestClient: POST http://10.192.106.10:8080/api/v1/auth/login
</msg>
<msg timestamp="20140207 17:47:38.650" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Headers = {
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:38.651" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] Data = {
    "password": "adminadmin", 
    "user": "admin"
}
</msg>
<msg timestamp="20140207 17:47:38.757" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.post:59] REST result:
{
    "content": {
        "error_message": "", 
        "session_cookie": "aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
        "success": true
    }, 
    "http_verb": "POST", 
    "request_url": "http://10.192.106.10:8080/api/v1/auth/login", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:38.759" level="INFO">[restclient.py:autobot.restclient.set_session_cookie:56] Saving session cookie aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc
</msg>
<msg timestamp="20140207 17:47:38.760" level="INFO">[Controller.py:Controller.cli_save_running_config:94] Copying running-config to file on node 'c2'
</msg>
<msg timestamp="20140207 17:47:38.762" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Switching from cli to enable mode
</msg>
<msg timestamp="20140207 17:47:38.781" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Execute command on 'c2': 'copy running-config file://running-config-bigrobot'
</msg>
<msg timestamp="20140207 17:47:38.811" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] enable content on 'c2':
copy running-config file://running-config-bigrobot
Error: Invalid Use: unsupported dest: file://running-config-bigrobot
Controller-2# 

----
</msg>
<msg timestamp="20140207 17:47:38.812" level="INFO">[Controller.py:Controller.cli_save_running_config:94] Copying running-config to file on node 'c1'
</msg>
<msg timestamp="20140207 17:47:38.814" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Switching from cli to enable mode
</msg>
<msg timestamp="20140207 17:47:38.837" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] Execute command on 'c1': 'copy running-config file://running-config-bigrobot'
</msg>
<msg timestamp="20140207 17:47:38.870" level="INFO">[BsnCommon.py:BsnCommon.base_suite_setup:29] enable content on 'c1':
copy running-config file://running-config-bigrobot
Error: Invalid Use: unsupported dest: file://running-config-bigrobot
Controller-10# 

----
</msg>
<msg timestamp="20140207 17:47:38.870" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:38.870" starttime="20140207 17:47:32.190"></status>
</kw>
<test id="s1-t1" name="ping h1 to h2 dual leaf single rack dynamic endpoints tag">
<kw type="kw" name="add a tenant">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
</arguments>
<msg timestamp="20140207 17:47:38.873" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' ]</msg>
<kw type="kw" name="T5.Rest Add Tenant">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
</arguments>
<msg timestamp="20140207 17:47:38.873" level="TRACE">Arguments: [ u'h1h2h3' ]</msg>
<msg timestamp="20140207 17:47:38.875" level="INFO">[T5.py:T5.rest_add_tenant:23] Input arguments: tenant = h1h2h3
</msg>
<msg timestamp="20140207 17:47:38.877" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]
</msg>
<msg timestamp="20140207 17:47:38.879" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:38.880" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h1h2h3"
}
</msg>
<msg timestamp="20140207 17:47:38.905" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:38.906" level="INFO">[T5.py:T5.rest_add_tenant:27] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:38.907" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:38.907" starttime="20140207 17:47:38.873"></status>
</kw>
<msg timestamp="20140207 17:47:38.907" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:38.907" starttime="20140207 17:47:38.872"></status>
</kw>
<kw type="kw" name="add a vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
</arguments>
<msg timestamp="20140207 17:47:38.908" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' ]</msg>
<kw type="kw" name="T5.Rest Add Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
</arguments>
<msg timestamp="20140207 17:47:38.908" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' ]</msg>
<msg timestamp="20140207 17:47:38.910" level="INFO">[T5.py:T5.rest_add_vns:115] Input arguments: tenant = h1h2h3 vns = h1h2h3
</msg>
<msg timestamp="20140207 17:47:38.912" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]
</msg>
<msg timestamp="20140207 17:47:38.913" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:38.915" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h1h2h3"
}
</msg>
<msg timestamp="20140207 17:47:38.936" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:38.936" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:38.936" starttime="20140207 17:47:38.908"></status>
</kw>
<msg timestamp="20140207 17:47:38.936" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:38.936" starttime="20140207 17:47:38.907"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
<arg>p1</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20140207 17:47:38.937" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' | ${pg}=u'p1' | ${vlan}=u'10' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:47:38.938" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' | u'p1' | u'10' ]</msg>
<msg timestamp="20140207 17:47:38.939" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h1h2h3 vns = h1h2h3 port-group = p1 vlan = 10
</msg>
<msg timestamp="20140207 17:47:38.941" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]/port-group-membership-rules[port-group-name="p1"]
</msg>
<msg timestamp="20140207 17:47:38.943" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:38.945" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p1", 
    "vlan": "10"
}
</msg>
<msg timestamp="20140207 17:47:39.013" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:39.015" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p1\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:39.015" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:39.015" starttime="20140207 17:47:38.938"></status>
</kw>
<msg timestamp="20140207 17:47:39.016" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:39.016" starttime="20140207 17:47:38.936"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
<arg>p2</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20140207 17:47:39.017" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' | ${pg}=u'p2' | ${vlan}=u'10' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:47:39.017" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' | u'p2' | u'10' ]</msg>
<msg timestamp="20140207 17:47:39.019" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h1h2h3 vns = h1h2h3 port-group = p2 vlan = 10
</msg>
<msg timestamp="20140207 17:47:39.021" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]/port-group-membership-rules[port-group-name="p2"]
</msg>
<msg timestamp="20140207 17:47:39.023" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:39.026" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p2", 
    "vlan": "10"
}
</msg>
<msg timestamp="20140207 17:47:39.047" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:39.048" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p2\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:39.049" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:39.049" starttime="20140207 17:47:39.017"></status>
</kw>
<msg timestamp="20140207 17:47:39.049" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:39.049" starttime="20140207 17:47:39.016"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h1h2h3</arg>
<arg>h1h2h3</arg>
<arg>p3</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20140207 17:47:39.050" level="TRACE">Arguments: [ ${tenant}=u'h1h2h3' | ${vns}=u'h1h2h3' | ${pg}=u'p3' | ${vlan}=u'10' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:47:39.050" level="TRACE">Arguments: [ u'h1h2h3' | u'h1h2h3' | u'p3' | u'10' ]</msg>
<msg timestamp="20140207 17:47:39.052" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h1h2h3 vns = h1h2h3 port-group = p3 vlan = 10
</msg>
<msg timestamp="20140207 17:47:39.054" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h1h2h3"]/vns[name="h1h2h3"]/port-group-membership-rules[port-group-name="p3"]
</msg>
<msg timestamp="20140207 17:47:39.056" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:39.057" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p3", 
    "vlan": "10"
}
</msg>
<msg timestamp="20140207 17:47:39.119" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:39.121" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h1h2h3\"]/vns[name=\"h1h2h3\"]/port-group-membership-rules[port-group-name=\"p3\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:39.121" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:39.121" starttime="20140207 17:47:39.050"></status>
</kw>
<msg timestamp="20140207 17:47:39.121" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:39.121" starttime="20140207 17:47:39.049"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140207 17:47:39.121" level="TRACE">Arguments: [ u'5' ]</msg>
<msg timestamp="20140207 17:47:44.122" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20140207 17:47:44.122" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:44.122" starttime="20140207 17:47:39.121"></status>
</kw>
<doc></doc>
<tags>
<tag>sanity</tag>
<tag>T5</tag>
</tags>
<status status="PASS" endtime="20140207 17:47:44.123" critical="yes" starttime="20140207 17:47:38.871"></status>
</test>
<test id="s1-t2" name="ping h4 to h5 dual rack dual leaf dynamic endpoints">
<kw type="kw" name="add a tenant">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
</arguments>
<msg timestamp="20140207 17:47:44.125" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' ]</msg>
<kw type="kw" name="T5.Rest Add Tenant">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
</arguments>
<msg timestamp="20140207 17:47:44.126" level="TRACE">Arguments: [ u'h4h5h6' ]</msg>
<msg timestamp="20140207 17:47:44.127" level="INFO">[T5.py:T5.rest_add_tenant:23] Input arguments: tenant = h4h5h6
</msg>
<msg timestamp="20140207 17:47:44.129" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]
</msg>
<msg timestamp="20140207 17:47:44.131" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:44.132" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h4h5h6"
}
</msg>
<msg timestamp="20140207 17:47:44.186" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:44.188" level="INFO">[T5.py:T5.rest_add_tenant:27] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:44.188" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:44.188" starttime="20140207 17:47:44.125"></status>
</kw>
<msg timestamp="20140207 17:47:44.188" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:44.188" starttime="20140207 17:47:44.124"></status>
</kw>
<kw type="kw" name="add a vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
</arguments>
<msg timestamp="20140207 17:47:44.189" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' ]</msg>
<kw type="kw" name="T5.Rest Add Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
</arguments>
<msg timestamp="20140207 17:47:44.190" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' ]</msg>
<msg timestamp="20140207 17:47:44.191" level="INFO">[T5.py:T5.rest_add_vns:115] Input arguments: tenant = h4h5h6 vns = h4h5h6
</msg>
<msg timestamp="20140207 17:47:44.193" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]
</msg>
<msg timestamp="20140207 17:47:44.195" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:44.196" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "name": "h4h5h6"
}
</msg>
<msg timestamp="20140207 17:47:44.221" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:44.221" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:44.221" starttime="20140207 17:47:44.190"></status>
</kw>
<msg timestamp="20140207 17:47:44.221" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:44.221" starttime="20140207 17:47:44.189"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
<arg>p4</arg>
<arg>-1</arg>
</arguments>
<msg timestamp="20140207 17:47:44.222" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' | ${pg}=u'p4' | ${vlan}=u'-1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:47:44.223" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' | u'p4' | u'-1' ]</msg>
<msg timestamp="20140207 17:47:44.224" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h4h5h6 vns = h4h5h6 port-group = p4 vlan = -1
</msg>
<msg timestamp="20140207 17:47:44.226" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]/port-group-membership-rules[port-group-name="p4"]
</msg>
<msg timestamp="20140207 17:47:44.228" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:44.230" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p4", 
    "vlan": "-1"
}
</msg>
<msg timestamp="20140207 17:47:44.284" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:44.287" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p4\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:44.287" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:44.287" starttime="20140207 17:47:44.222"></status>
</kw>
<msg timestamp="20140207 17:47:44.287" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:44.287" starttime="20140207 17:47:44.221"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
<arg>p5</arg>
<arg>-1</arg>
</arguments>
<msg timestamp="20140207 17:47:44.289" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' | ${pg}=u'p5' | ${vlan}=u'-1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:47:44.290" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' | u'p5' | u'-1' ]</msg>
<msg timestamp="20140207 17:47:44.292" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h4h5h6 vns = h4h5h6 port-group = p5 vlan = -1
</msg>
<msg timestamp="20140207 17:47:44.294" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]/port-group-membership-rules[port-group-name="p5"]
</msg>
<msg timestamp="20140207 17:47:44.297" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:44.299" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p5", 
    "vlan": "-1"
}
</msg>
<msg timestamp="20140207 17:47:44.369" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:44.371" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p5\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:44.371" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:44.371" starttime="20140207 17:47:44.289"></status>
</kw>
<msg timestamp="20140207 17:47:44.371" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:44.371" starttime="20140207 17:47:44.288"></status>
</kw>
<kw type="kw" name="add portgroup to vns">
<doc></doc>
<arguments>
<arg>h4h5h6</arg>
<arg>h4h5h6</arg>
<arg>p6</arg>
<arg>-1</arg>
</arguments>
<msg timestamp="20140207 17:47:44.372" level="TRACE">Arguments: [ ${tenant}=u'h4h5h6' | ${vns}=u'h4h5h6' | ${pg}=u'p6' | ${vlan}=u'-1' ]</msg>
<kw type="kw" name="T5.Rest Add Portgroup To Vns">
<doc></doc>
<arguments>
<arg>${tenant}</arg>
<arg>${vns}</arg>
<arg>${pg}</arg>
<arg>${vlan}</arg>
</arguments>
<msg timestamp="20140207 17:47:44.373" level="TRACE">Arguments: [ u'h4h5h6' | u'h4h5h6' | u'p6' | u'-1' ]</msg>
<msg timestamp="20140207 17:47:44.374" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:281] Input arguments: tenant = h4h5h6 vns = h4h5h6 port-group = p6 vlan = -1
</msg>
<msg timestamp="20140207 17:47:44.376" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] RestClient: PUT http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name="h4h5h6"]/vns[name="h4h5h6"]/port-group-membership-rules[port-group-name="p6"]
</msg>
<msg timestamp="20140207 17:47:44.378" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Headers = {
    "Cookie": "session_cookie=aQaWeEPg_qOIkVdefEyQxF8LLXFKUmyc", 
    "content-type": "application/json"
}
</msg>
<msg timestamp="20140207 17:47:44.380" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] Data = {
    "port-group-name": "p6", 
    "vlan": "-1"
}
</msg>
<msg timestamp="20140207 17:47:44.413" level="INFO">[bsn_restclient.py:autobot.bsn_restclient.put:67] REST result:
{
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}

----
</msg>
<msg timestamp="20140207 17:47:44.416" level="INFO">[T5.py:T5.rest_add_portgroup_to_vns:285] Output: {
    "content": {}, 
    "http_verb": "PUT", 
    "request_url": "http://10.192.106.10:8080/api/v1/data/controller/applications/bvs/tenant[name=\"h4h5h6\"]/vns[name=\"h4h5h6\"]/port-group-membership-rules[port-group-name=\"p6\"]", 
    "status_code": "200", 
    "status_descr": "OK", 
    "success": true
}
</msg>
<msg timestamp="20140207 17:47:44.416" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20140207 17:47:44.416" starttime="20140207 17:47:44.372"></status>
</kw>
<msg timestamp="20140207 17:47:44.416" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:44.416" starttime="20140207 17:47:44.371"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140207 17:47:44.417" level="TRACE">Arguments: [ u'5' ]</msg>
<msg timestamp="20140207 17:47:49.418" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20140207 17:47:49.419" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:49.419" starttime="20140207 17:47:44.417"></status>
</kw>
<doc></doc>
<tags>
<tag>sanity</tag>
<tag>T5</tag>
</tags>
<status status="PASS" endtime="20140207 17:47:49.419" critical="yes" starttime="20140207 17:47:44.123"></status>
</test>
<kw type="teardown" name="BsnCommon.Base Suite Teardown">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20140207 17:47:49.420" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20140207 17:47:49.422" level="INFO">[BsnCommon.py:BsnCommon.base_suite_teardown:36] Closing device connection for node 'c2'
</msg>
<msg timestamp="20140207 17:47:49.423" level="INFO">[devconf.py:autobot.devconf.close:222] Closing device 10.192.106.11
</msg>
<msg timestamp="20140207 17:47:49.424" level="INFO">[BsnCommon.py:BsnCommon.base_suite_teardown:36] Closing device connection for node 'c1'
</msg>
<msg timestamp="20140207 17:47:49.425" level="INFO">[devconf.py:autobot.devconf.close:222] Closing device 10.192.106.10
</msg>
<msg timestamp="20140207 17:47:49.426" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20140207 17:47:49.425" starttime="20140207 17:47:49.420"></status>
</kw>
<doc>T5 Platform Smoke/Sanity Test Suite</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140207 17:47:49.426" starttime="20140207 17:47:31.966"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
<stat info="" links="" doc="" combined="" pass="2" fail="0">sanity</stat>
<stat info="" links="" doc="" combined="" pass="2" fail="0">T5</stat>
</tag>
<suite>
<stat fail="0" pass="2" id="s1" name="Temp">Temp</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
