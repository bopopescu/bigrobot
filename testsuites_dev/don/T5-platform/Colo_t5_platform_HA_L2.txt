== T5 Platform HA Test Suite - Physical Test Bed ==

* Setting
Documentation    T5 Controller Platform Test Suite - Colo Testbed
Suite Setup      T5 base suite setup
#Suite Teardown   T5 base suite teardown
Test Setup       T5 Platform Test Setup
Test Teardown    T5 Platform Test Teardown
Force Tags       T5Platform  HA  L2
Library          keywords/BsnCommon.py
Library          keywords/Mininet.py
Library	    	 keywords/Host.py
Library          keywords/T5.py
Library	         keywords/T5L3.py
Library	         keywords/T5Platform.py
Library	         keywords/T5Utilities.py

* Variables
@{spineList}  00:00:04:00:01:00:00:01  00:00:04:00:01:00:00:02
@{leafList}  00:00:04:00:02:00:00:01  00:00:04:00:02:00:00:02  00:00:04:00:02:00:00:03


* Test Case 

Test
	[Tags]	temp2
	gather forwarding	arp-table
	gather forwarding	ep-table
	gather forwarding	l3-cidr-table
	gather forwarding	l3-host-table
	gather forwarding	my-station-table
	gather forwarding	router-ip-table
	
Test
	[Tags] 	temp
	rest configure testpath	test-name=myTest1	timeout=600		src-tenant=autoT1	src-vns=v1	src-ip=10.10.10.51	dst-tenant=autoT1	dst-vns=v1	dst-ip=10.10.10.53	ip-protocol=icmp
	rest configure testpath	test-name=myTest2	timeout=600		src-tenant=autoT1	src-vns=v1	src-ip=10.10.10.53	dst-tenant=autoT1	dst-vns=v2	dst-ip=20.20.20.54	ip-protocol=icmp	
	${returnVal}=	rest verify testpath	myTest1
	Should be true 	${returnVal}
	${returnVal}=	rest verify testpath	myTest2
	Should be true 	${returnVal}
	#${returnVal}=	rest verify testpath timeout  myTest2
	#Should be true 	${returnVal}
					

Configure Multiple L2 Tenants With Single VNS & Failover
	[Tags]	sanity  feature
	Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology 
	Configure 2 Tenants with Different VLAN properties
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
	Reboot the master node & verify fabric integrity
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 

Verify HA Cluster Formation
   [Tags]  sanity  feature
   Verify the cluster formation 
   
Verify Cluster Election Take-Leader
	[Tags]  sanity  feature 
	Verify cluster election take leader
	
Verify Cluster Election Re-run
	[Tags]  feature  
	Verify cluster election rerun 
	
Verify Cluster Master Reboot
	[Tags]  sanity  feature
	Reboot the master node & verify fabric integrity
	
Verify Cluster Slave Reboot
	[Tags]  sanity  feature
	Reboot the Slave node & verify fabric integrity


Master Failover/Failback & Verify Connectivity
   [Tags]  feature  
   Failover/Failback by rebooting the master and verify connectivity
   
Slave Failover/Failback & Verify Connectivity
   [Tags]  feature 
   Failover/Failback by rebooting the slave and verify connectivity

Cluster Election Take-Leader & Verify Connectivity
   [Tags]  feature    
   # To be: This test case only checks the take-leader in slave.
   # 			Need to implement this in the master
   Failover/Failback by issuing take-leader in master & verify connectivity


Reboot Peer Leaf Switch During Failover & Verify Connectivity
	[Tags]  feature  
	Reboot the master node & verify fabric integrity
	

Stress Configure & Delete Multiple L3 Tenants With Single VNS & Failover
	[Tags]	stress
	: FOR    ${Iteration}    IN RANGE    1    26
	\	start floodlight monitor
	\	Log To Console   \n================ Configure & Delete L3 Tenants & Failover - Iteration ${Iteration} ===============\n
	\	rest delete tenant  autoT1
    \	rest delete tenant  autoT2
   	\	auto delete fabric switch  ${spineList}  ${leafList}  2
    \	auto delete fabric portgroups
    \	sleep  60
	\	Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology 
	\	Configure 2 Tenants with Different VLAN properties
	\	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
	\	Reboot the master node & verify fabric integrity
	\	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology    
	\	stop floodlight monitor

Clean Config
    [Tags]  clean
    start floodlight monitor
    rest delete tenant  autoT1
    rest delete tenant  autoT2
    auto delete fabric switch  ${spineList}  ${leafList}  2
    auto delete fabric portgroups
    stop floodlight monitor

########################################################################################################################################

* Keywords      

Verify the cluster formation 

	${returnVal}=  rest verify show cluster
	Should Be True  ${returnVal}

Verify cluster election take leader

	${returnVal}=  rest verify cluster election take leader
	Should Be True  ${returnVal}
	

Verify cluster election rerun 

	${returnVal}=  rest verify cluster election rerun
	Should Be True  ${returnVal}
	

Reboot the master node & verify fabric integrity

	${returnVal}=  cli verify cluster master reboot
	Should Be True  ${returnVal}
	
	
Reboot the Slave node & verify fabric integrity

	${returnVal}=  cli verify cluster slave reboot
	Should Be True  ${returnVal}
	
	
Failover/Failback by rebooting the master and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Rebooting Master - Iteration ${Iteration} ===============\n
   \	${returnVal}=  cli verify cluster master reboot
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   

Failover/Failback by rebooting the slave and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Rebooting Slave - Iteration ${Iteration} ===============\n
   \	${returnVal}=	cli verify cluster slave reboot
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   

Failover/Failback by issuing take-leader in master & verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Election-Take-Leader - Iteration ${Iteration} ===============\n
   \	${returnVal}=  rest verify cluster election take leader
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 

Re-run the election and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Election-Rerun - Iteration ${Iteration} ===============\n
   \	${returnVal}=	rest verify cluster election rerun
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   

Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology 

   auto configure fabric switch  ${spineList}  ${leafList}  2
   sleep  30
   Set Test Variable  ${h1_intf0}  ethernet17
   Set Test Variable  ${h1_intf1}  ethernet17
   Set Test Variable  ${h2_intf0}  ethernet19
   Set Test Variable  ${h2_intf1}  ethernet19
   Set Test Variable  ${h3_intf0}  ethernet21
   Set Test Variable  ${h3_intf1}  ethernet21
   Set Test Variable  ${h4_intf0}  ethernet17
   Set Test Variable  ${h4_intf1}  ethernet18
   Set Test Variable  ${h5_intf0}  ethernet19
   Set Test Variable  ${h5_intf1}  ethernet20
   Set Test Variable  ${h6_intf0}  ethernet21
   Set Test Variable  ${h6_intf1}  ethernet22
   
   
   rest add portgroup  p1
   rest add interface to portgroup  leaf0-a  ${h1_intf0}  p1
   rest add interface to portgroup  leaf0-b  ${h1_intf1}  p1
   rest add portgroup lacp  p1
   rest add portgroup  p2
   rest add interface to portgroup  leaf0-a  ${h2_intf0}  p2
   rest add interface to portgroup  leaf0-b  ${h2_intf1}  p2
   rest add portgroup lacp  p2
   rest add portgroup  p3
   rest add interface to portgroup  leaf0-a  ${h3_intf0}  p3
   rest add interface to portgroup  leaf0-b  ${h3_intf1}  p3
   rest add portgroup lacp  p3
   rest add portgroup  p4
   rest add interface to portgroup  leaf1-a  ${h4_intf0}  p4
   rest add interface to portgroup  leaf1-a  ${h4_intf1}  p4
   rest add portgroup lacp  p4
   rest add portgroup  p5
   rest add interface to portgroup  leaf1-a  ${h5_intf0}  p5
   rest add interface to portgroup  leaf1-a  ${h5_intf1}  p5
   rest add portgroup lacp  p5
   rest add portgroup  p6
   rest add interface to portgroup  leaf1-a  ${h6_intf0}  p6
   rest add interface to portgroup  leaf1-a  ${h6_intf1}  p6
   rest add portgroup lacp  p6
   sleep  10


Configure 2 Tenants with Different VLAN properties
   
   Set Test Variable  ${subMask}  24
   Set Test Variable  ${vns1ip}  10.10.10.100
   Set Test Variable  ${vns2ip}  20.20.20.100

   rest add tenant  autoT1
   rest add vns  autoT1  v1
   rest add portgroup to vns  autoT1  v1  p1  10
   rest add portgroup to vns  autoT1  v1  p2  10
   rest add portgroup to vns  autoT1  v1  p3  10
   rest add router intf  autoT1  v1
   rest add vns ip  autoT1  v1  ${vns1ip}  ${subMask}
   
   rest add vns  autoT1  v2
   rest add portgroup to vns  autoT1  v2  p4  20
   rest add portgroup to vns  autoT1  v2  p5  20
   rest add portgroup to vns  autoT1  v2  p6  20
   rest add router intf  autoT1  v2
   rest add vns ip  autoT1  v2  ${vns2ip}  ${subMask}
   
   rest add tenant  autoT2
   rest add vns  autoT2  v3
   rest add interface to vns  autoT2  v3  leaf0-a  ethernet33  -1
   rest add interface to vns  autoT2  v3  leaf0-a  ethernet34  -1
   rest add interface to vns  autoT2  v3  leaf0-a  ethernet35  -1
   rest add interface to vns  autoT2  v3  leaf1-a  ethernet33  -1
   rest add interface to vns  autoT2  v3  leaf1-a  ethernet34  -1
   rest add interface to vns  autoT2  v3  leaf1-a  ethernet35  -1

   sleep  30
   

Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 

   Set Test Variable  ${subMask}  24
   Set Test Variable  ${h1bond10ip}  10.10.10.51
   Set Test Variable  ${h2bond10ip}	 10.10.10.52
   Set Test Variable  ${h3bond10ip}	 10.10.10.53
   Set Test Variable  ${vns1ip}  10.10.10.100
   
   Set Test Variable  ${h4bond20ip} 	20.20.20.54
   Set Test Variable  ${h5bond20ip}	20.20.20.55
   Set Test Variable  ${h6bond20ip}	20.20.20.56
   Set Test Variable  ${vns2ip}  20.20.20.100
   
   Set Test Variable  ${h1ip}	192.168.1.20
   Set Test Variable  ${h2ip}	192.168.1.21
   Set Test Variable  ${h3ip}	192.168.1.10
   Set Test Variable  ${h4ip}	192.168.1.11
   
   
   ###	Verify L2 ping between autoT1-v1   
   ${returnVal}=  platform bash ping  h1  ${h2bond10ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h1  ${h3bond10ip}
   Should Be True  ${returnVal}  
   #${returnVal}=  platform bash ping  h2  ${h3bond10ip}
   #Should Be True  ${returnVal}  
   

   ###	Verify L2 ping between autoT1-v2
   ${returnVal}=  platform bash ping  h4  ${h5bond20ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h4  ${h6bond20ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h5  ${h6bond20ip}
   Should Be True  ${returnVal}   
   
   ###	Verify L3 ping between autoT1-v1 & autoT1-v2
   #${returnVal}=  platform bash ping  h1  ${h4bond20ip}
   #Should Be True  ${returnVal}
   #${returnVal}=  platform bash ping  h1  ${h5bond20ip}
   #Should Be True  ${returnVal}
   #${returnVal}=  platform bash ping  h1  ${h6bond20ip}
   #Should Be True  ${returnVal}
  
   #${returnVal}=  platform bash ping  h4  ${h2bond10ip}
   #Should Be True  ${returnVal}
   #${returnVal}=  platform bash ping  h5  ${h2bond10ip}
   #Should Be True  ${returnVal}
   #${returnVal}=  platform bash ping  h6  ${h2bond10ip}
   #Should Be True  ${returnVal}
   
   
   
   ###	Verify ping between autoT2
   #${returnVal}=  platform bash ping  h1  ${h2ip}
   #Should Be True  ${returnVal}  
   #${returnVal}=  platform bash ping  h1  ${h3ip}
   #Should Be True  ${returnVal}  
   #${returnVal}=  platform bash ping  h1  ${h4ip}
   #Should Be True  ${returnVal}  
   #${returnVal}=  platform bash ping  h2  ${h3ip}
   #Should Be True  ${returnVal}  
   #${returnVal}=  platform bash ping  h2  ${h4ip}
   #Should Be True  ${returnVal}  
   #${returnVal}=  platform bash ping  h3  ${h4ip}
   #Should Be True  ${returnVal}  
   

T5 base suite setup

	base suite setup


T5 base suite teardown   

   rest delete tenant  autoT1
   rest delete tenant  autoT2
   auto delete fabric switch  ${spineList}  ${leafList}  2
   auto delete fabric portgroups
   base suite teardown
   
T5 Platform Test Setup
	start floodlight monitor
	
T5 Platform Test Teardown
	stop floodlight monitor
   
   
