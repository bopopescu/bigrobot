* Setting
Documentation   T5 inter tenant L3 Test Suite
Suite Setup     T5 base suite setup
Suite Teardown  T5 base suite teardown
Test Setup      test setup topology
Test Teardown   test teardown topology
Force Tags      T5     L3      IronHorse
Library         keywords/BsnCommon.py
Library         keywords/Host.py
Library         keywords/T5.py
Library         keywords/T5L3.py
Library         keywords/T5Platform.py
Library         keywords/SwitchLight.py
Library         keywords/T5Utilities.py
Library         keywords/BsnCommon.py
Library         Collections.py
Library         keywords/Ixia.py
Library         keywords/KVMOperations.py
Resource        testsuites/T5/L3//T5_L3_physical_inter/t5_layer3_physical_inter_variables.txt
Resource        testsuites/T5/t5_dualleaf_three_rack_physical_resource.txt

* Test Cases
L3 inter tenant forwarding between endpoints on the same rack but different switch
    L3 inter tenant forwarding between endpoints on the same rack but different switch
    [Tags]      feature    testpath   TC001      
    
Inter tenant DHCP relay
    Inter tenant DHCP relay
    [Tags]      sanity      feature         dhcp-relay          TC002       
    
Dhcp request from other host in other tenants with dhcp enabled but no inter tenant route
    Dhcp request from other host in other tenants with dhcp enabled but no inter tenant route
    [Tags]      feature         dhcp-relay                      TC003

Dhcp request from other host in other tenants without dhcp relay enabled but with inter tenant route
    Dhcp request from other host in other tenants without dhcp relay enabled but with inter tenant route
    [Tags]      feature         dhcp-relay                      TC004

Inter tenant dhcp relay with multiple dhcp servers
    Inter tenant dhcp relay with multiple dhcp servers
    [Tags]      feature         dhcp-relay              runfailed1  TC005
    
Host moved to another vns on another tenant and renew dhcp 
    Host moved to another vns on another tenant and renew dhcp 
    [Tags]      feature         dhcp-relay              runfailed       TC006

Overlapping IP subnet with and without private keyword
    Overlapping IP subnet with and without private keyword
    [Tags]          feature             TC007

One public IP and multiple private IP
    One public IP and multiple private IP
    [Tags]          feature         TC008

Verify private IP is able to communicate with other vns in the same tenant
    Verify private IP is able to communicate with other vns in the same tenant
    [Tags]          feature    testpath     TC009

Controller HA failover via reboot of master
    Controller HA failover via reboot of master
    [Tags]          feature         HA        TC010

L3 inter tenant traceroute with icmp and udp probe
    L3 inter tenant traceroute with icmp and udp probe
    [Tags]          feature         runfailed       TC011

Add and delete endpoints with L3 inter tenant traffic
    Add and delete endpoints with L3 inter tenant traffic
    [Tags]          feature         TC012

Verify private subnet cannot be routed via system router
    Verify private subnet cannot be routed via system router
    [Tags]          feature    testpath     TC013     

L3 inter tenant traffic with jumbo frame
    L3 inter tenant traffic with jumbo frame
    [Tags]          feature         TC014

L3 inter tenant with CRC errors
    L3 inter tenant with CRC errors
    [Tags]          feature         runfailed   TC015

L3 inter tenant shutdown and bringup both leaf switch in a dual tor setup
    L3 inter tenant shutdown and bringup both leaf switch in a dual tor setup
    [Tags]          feature         TC016

L3 inter tenant shutdown and bringup both spine switch 
    L3 inter tenant shutdown and bringup both spine switch
    [Tags]          feature              TC017
          
Controller HA failover with dhcp-relay
    Controller HA failover with dhcp-relay
    [Tags]          feature         dhcp-relay      HA  TC018

Active Controller reboot with dhcp-relay
    Active Controller reboot with dhcp-relay
    [Tags]          feature         dhcp-relay          HA  TC019

Verify inter tenant L3 traffic is getting drop with null next hop
    Verify inter tenant L3 traffic is getting drop with null next hop
    [Tags]          feature             runfailed    testpath       TC020
 
Restart ofad on leaf with dhcp-relay
    Restart ofad on leaf with dhcp-relay
    [Tags]          feature         dhcp-relay      TC021

Restart ofad on spine with dhcp-relay
    Restart ofad on spine with dhcp-relay
    [Tags]          feature         dhcp-relay          runfailed    TC022

Dhcp request from overlapping private IP and public IP
    Dhcp request from overlapping private IP and public IP
    [Tags]          solution            dhcp-relay          runfailed   TC023
                    
Enable and disable tenant logical router interface
    Enable and disable tenant logical router interface
    [Tags]          feature     testpath          runfailed     TC024

* Keywords

L3 inter tenant forwarding between endpoints on the same rack but different switch
### host onboard nic is 1gig, switchlight will not support 1gig interface
    BASH init intf                              h5                              bond0
    BASH init intf                              h6                              bond0
    BASH ifup intf                              h5                              eth1
    BASH ifup intf                              h6                              em2
    BASH init intf                              h5                              eth1
    BASH init intf                              h6                              em2
    BASH add ip address                         h5                              10.251.1.31/24          eth1
    BASH add ip address                         h6                              10.252.1.31/24          em2
    BASH add route                              h5                              10.252.1.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.252.1.1
    REST add interface to vns                   X                               X1                      ${leaf2_a}          ${leaf2a_host5}            -1
    REST add interface to vns                   Y                               Y1                      ${leaf2_b}          ${leaf2b_host6}            -1
    sleep                                       1
    BASH ping                                   h5                              10.252.1.31             count=5
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      eth1
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}   
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2a_host5}
    ${mac2} =                                   BASH get intf mac               h6                      em2
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf2b_host6}
    REST show endpoints     
    ${loss} =                                   BASH ping                       h5                      10.252.1.31             count=10
    Should Be True                              ${loss} < 20     
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.31  dst-ip=10.252.1.31
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-SameRackDifferentSwitch  src-ip=10.251.1.31  dst-ip=10.252.1.31 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-SameRackDifferentSwitch  HostPing  leaf  spine  leaf  host=h5  ip=10.252.1.31
    Should Be True  ${returnVal}
    BASH init intf                              h5                              eth1
    BASH init intf                              h6                              em2
    

Overlapping IP subnet with and without private keyword
    REST add tenant                                 A
    REST add tenant                                 B
    REST add vns                                    A                           A1
    REST add vns                                    A                           A2
    REST add vns                                    A                           A3
    REST add router intf                            A                           A1
    REST add router intf                            A                           A2
    REST add router intf                            A                           A3  
    REST add vns                                    B                           B1
    REST add vns                                    B                           B2
    REST add vns                                    B                           B3
    REST add router intf                            B                           B1
    REST add router intf                            B                           B2
    REST add router intf                            B                           B3  
    REST add vns ip                                 A                           A1              10.101.0.1              24
    sleep                                           2   
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              25
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              24
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.254            25
    Should Not Be True                              ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.126            25
    Should Not Be True                              ${result}
    sleep                                           2
    REST add vns ip                                 A                           A1              10.101.0.1              24                      private=true
    sleep                                           2   
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              25
    Should Be True                                  ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              24
    Should Be True                                  ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.254            25
    Should Be True                                  ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.126            25
    Should Be True                                  ${result}
    sleep                                           2
    REST add vns ip                                 A                           A1              10.101.0.1              24                      
    sleep                                           2   
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              25      private=true
    Should Be True                                  ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              24      private=true
    Should Be True                                  ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.254            25      private=true
    Should Be True                                  ${result}
    sleep                                           2
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.126            25      private=true
    Should Be True                                  ${result}
    sleep                                           2

One public IP and multiple private IP
    REST add tenant                                 A
    REST add tenant                                 B
    REST add tenant                                 C
    REST add tenant                                 D
    REST add tenant                                 E
    REST add vns                                    A                           A1
    REST add vns                                    B                           B1
    REST add vns                                    C                           C1
    REST add vns                                    D                           D1
    REST add vns                                    E                           E1
    REST add router intf                            A                           A1
    REST add router intf                            B                           B1
    REST add router intf                            C                           C1
    REST add router intf                            D                           D1
    REST add router intf                            E                           E1      
    REST add vns ip                                 A                           A1              10.101.0.1              24
    sleep                                           2   
    ${result} =                                     REST add vns ip             B               B1                      10.101.0.1              24      private=true
    Should Be True                                  ${result}
    ${result} =                                     REST add vns ip             C               C1                      10.101.0.1              24      private=true
    Should Be True                                  ${result}
    ${result} =                                     REST add vns ip             D               D1                      10.101.0.1              24      private=true
    Should Be True                                  ${result}
    ${result} =                                     REST add vns ip             E               E1                      10.101.0.1              24      private=true
    Should Be True                                  ${result}

Verify private IP is able to communicate with other vns in the same tenant
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf1_pc2}            -1
    REST add vns ip                             X                               X1                      10.251.1.1              24              private=true
    REST add vns ip                             Y                               Y1                      10.251.1.1              24              private=true
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h6                              10.251.2.11/24          bond0   
    BASH add ip address                         h3                              10.251.1.11/24          bond0
    BASH add ip address                         h4                              10.252.2.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h5                              10.251.0.0/16           10.251.1.1
    BASH add route                              h6                              10.251.0.0/16           10.251.2.1
    BASH add route                              h6                              10.252.0.0/16           10.251.2.1
    BASH add route                              h3                              10.251.0.0/16           10.251.1.1
    BASH add route                              h3                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.2.1
    BASH add route                              h4                              10.252.0.0/16           10.252.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=5
    BASH ping                                   h6                              10.251.2.1              count=5
    BASH ping                                   h3                              10.251.1.1              count=5
    BASH ping                                   h4                              10.252.2.1              count=5
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.2.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.251.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result} 
    ${mac3} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac3}
    Should Be True                              ${result}                       
    ${mac4} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac4}
    Should Be True                              ${result} 
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0    
    rest clear testpath   
    ${returnVal}=  rest verify testpath error code  ambiguous endpoints  src-ip=10.251.1.11  dst-ip=10.251.2.11
    Should Be True  ${returnVal}     
    ${returnVal}=  rest configure testpath controller view  src-tenant=X  src-segment=X1  src-ip=10.251.1.11  dst-tenant=X  dst-segment=X2  dst-ip=10.251.2.11
    Should Be True  ${returnVal}       
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-PrivateIPtoOtherVNS-1  src-tenant=X  src-segment=X1  src-ip=10.251.1.11  dst-tenant=X  dst-segment=X2  dst-ip=10.251.2.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-PrivateIPtoOtherVNS-1   HostPing  leaf  host=h5  ip=10.251.2.11
    Should Be True  ${returnVal}
    ${loss} =                                   BASH ping                       h3                      10.252.2.11             count=10
    Should Be True                              ${loss} == 0    
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-tenant=Y  src-segment=Y1  src-ip=10.251.1.11  dst-tenant=Y  dst-segment=Y2  dst-ip=10.252.2.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-PrivateIPtoOtherVNS-2  src-tenant=Y  src-segment=Y1  src-ip=10.251.1.11  dst-tenant=Y  dst-segment=Y2  dst-ip=10.252.2.11  
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-PrivateIPtoOtherVNS-2  HostPing  leaf  host=h3  ip=10.252.2.11  
    Should Be True  ${returnVal}
    ${loss} =                                   BASH ping                       h3                      10.251.2.11             count=10
    Should Be True                              ${loss} == 100   
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-tenant=Y  src-segment=Y1  src-ip=10.251.1.11  dst-tenant=X  dst-segment=X2  dst-ip=10.251.2.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-PrivateIPtoOtherVNS-3  src-tenant=Y  src-segment=Y1  src-ip=10.251.1.11  dst-tenant=X  dst-segment=X2  dst-ip=10.251.2.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-PrivateIPtoOtherVNS-3  HostPing  leaf  host=h3  ip=10.251.2.11  
    Should Be True  ${returnVal} 
    ${loss} =                                   BASH ping                       h6                      10.252.2.11             count=10
    Should Be True                              ${loss} == 0  
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-tenant=X  src-segment=X2  src-ip=10.251.2.11  dst-tenant=Y  dst-segment=Y2  dst-ip=10.252.2.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-PrivateIPtoOtherVNS-4  src-tenant=X  src-segment=X2  src-ip=10.251.2.11  dst-tenant=Y  dst-segment=Y2  dst-ip=10.252.2.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-PrivateIPtoOtherVNS-4  HostPing  leaf  host=h6  ip=10.252.2.11
    Should Be True  ${returnVal}   
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h5                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h6                              10.251.0.0/16           10.251.2.1
    BASH delete route                           h6                              10.252.0.0/16           10.251.2.1
    BASH delete route                           h3                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.2.1
    BASH delete route                           h4                              10.252.0.0/16           10.252.2.1


L3 inter tenant with CRC errors
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf0_b}              ${ixia2}                -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h6                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.1.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.252.1.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->b              frame_rate=1000             frame_size=9216             frame_cnt=10000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames   ${stream1}              stream1
    sleep                                       1
    ${stream2}=                                 L3 add                          name=stream2            flow=a<->b              frame_rate=1000             frame_size=9216             frame_cnt=10000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1           crc=True                    
    start traffic                               ${stream2}
    sleep  10
    stop traffic                                ${stream2}
    calculate loss                              transmitted_frames              received_valid_frames   ${stream2}              stream2    
    BASH delete route                           h5                              10.252.1.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.252.1.1


L3 inter tenant traceroute with icmp and udp probe
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc2}            -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h6                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.1.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.252.1.1
    sleep                                       2
    BASH ping                                   h5                              10.252.1.11             count=10
    BASH run command                            h5                              route -n
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 10.252.1.11
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.1.1 
    ${result} =                                 Set Variable                    ${string[2]} 
    Should Contain                              ${result}                       \ 2\ \ * * * 
    ${result} =                                 Set Variable                    ${string[3]} 
    Should Contain                              ${result}                       \ 3\ \ * * * 
    ${result} =                                 Set Variable                    ${string[4]} 
    Should Contain                              ${result}                       \ 4\ \ 10.252.1.11 
    ${string} =                                 BASH run command                h5                      traceroute -n -m 5 -I 10.252.1.11
    ${result} =                                 Set Variable                    ${string[1]} 
    Should Contain                              ${result}                       \ 1\ \ 10.251.1.1 
    ${result} =                                 Set Variable                    ${string[2]} 
    Should Contain                              ${result}                       \ 2\ \ * * * 
    ${result} =                                 Set Variable                    ${string[3]} 
    Should Contain                              ${result}                       \ 3\ \ * * * 
    ${result} =                                 Set Variable                    ${string[4]} 
    Should Contain                              ${result}                       \ 4\ \ 10.252.1.11 
    BASH delete route                           h5                              10.252.1.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.252.1.1

    
Inter tenant dhcp relay 
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    ${ipAddr5a} =                               BASH get interface ipv4         h5                      bond0
    Should Be Empty                             ${ipAddr5a}                     
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} == 100
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} == 100
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1
    

Dhcp request from other host in other tenants with dhcp enabled but no inter tenant route
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    #REST enable dhcp relay                      Y                               Y1  
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    REST delete static routes                   Y                               10.251.0.0/16       
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${ipAddr3} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Be Empty                             ${ipAddr3}
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}
    Should Be True                              ${loss} == 100
    REST add static routes                      Y                               10.251.0.0/16            {"tenant": "system"}
    sleep                                       1
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}
    Should Be True                              ${loss} < 20
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1

Dhcp request from other host in other tenants without dhcp relay enabled but with inter tenant route
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH release dhcpv4 address                 h2                              bond0.1002
    BASH release dhcpv4 address                 h5                              bond0
    sleep                                       1
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Be Empty                             ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Be Empty                             ${ipAddr5}  
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${state2} =                                 Set Variable                    ${result[0]['state']}   
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
#    Should Contain                              ${state2}                       L2 Only
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${state5} =                                 Set Variable                    ${result[0]['state']}   
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
#    Should Contain                              ${state5}                       L2 Only
    sleep                                       5
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} == 100
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} == 100
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1
    

Host moved to another vns on another tenant and renew dhcp 
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h1                              10.253.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    REST delete portgroup from vns              Y                               Y1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Z                               Z3                      ${leaf2_pc1}            -1
    REST add dhcp relay                         Z                               Z3                      10.251.1.11
    sleep                                       1
    REST show forwarding dhcp table
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}   
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    ${segment} =                                Set Variable                    ${result[0]['segment']}
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    Should Contain                              ${segment}                      Z3
    BASH add route                              h5                              10.251.0.0/16           10.253.3.1
    sleep                                       1   
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} == 100
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} == 100
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1


Inter tenant dhcp relay with multiple dhcp servers
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc2}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf1_pc2}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH delete tag                             h2                              bond0.1002              soft_error=${true}      
    BASH delete tag                             h3                              bond0.1003              soft_error=${true}      
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH add ip address                         h2                              10.251.1.11/24          bond0
    BASH start service                          h2                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h2                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add ip address                         h3                              10.252.1.11/24          bond0
    BASH start service                          h3                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h3                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h2                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    REST add dhcp relay                         X                               X2                      10.252.1.11
    REST add dhcp relay                         Y                               Y2                      10.251.1.11
    REST add dhcprelay circuitid                Y                               Y2                      10.251.1.11             private vns Y2
    sleep                                       5
    ${mac1} =                                   BASH get intf mac               h1                      bond0
#    ${result} =                                 REST show endpoints mac         ${mac1}
#    Should Not Be Empty                         ${result}
#    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
#    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
#    ${mac3} =                                   BASH get intf mac               h3                      bond0
#    ${result} =                                 REST show endpoints mac         ${mac3}
#    Should Not Be Empty                         ${result}
#    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
#    Should Contain                              ${attachpoint}                  ${leaf1_pc1}
    ${ipAddr1} =                                BASH renew dhcpv4 address       h1                      bond0
    Should Not Be Empty                         ${ipAddr1}
    ${ipAddr4} =                                BASH renew dhcpv4 address       h4                      bond0
    Should Not Be Empty                         ${ipAddr4}
    sleep                                       1
    BASH ping                                   h1                              ${ipAddr4}              count=5
    ${loss} =                                   BASH ping                       h1                      ${ipAddr4}          count=5
    Should Be True                              ${loss} < 20
    ${value} =                                  BASH release dhcpv4 address     h1                      bond0
    Should Be True                              ${value}
    BASH stop service                           h3                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h3                      isc-dhcp-server
    Should Contain                              ${value}                        is stopped
    ${ipAddr1} =                                BASH renew dhcpv4 address       h1                      bond0
    Should Be Empty                             ${ipAddr1}
    BASH stop service                           h2                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h2                      isc-dhcp-server
    Should Contain                              ${value}                        is stopped
    ${value} =                                  BASH release dhcpv4 address     h4                      bond0
    Should Be True                              ${value}
    BASH delete route                           h2                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1
    
Controller HA failover via reboot of master
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=9216             frame_cnt=100000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep  10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    ${value} =                                  CLI verify cluster master reboot
    Should Be True                              ${value}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5   
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    

Spine reboot
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=1000             frame_size=9216             frame_cnt=10000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    CLI restart switch                          s1
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1   
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    
Leaf reboot
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=1000             frame_size=9216             frame_cnt=10000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    CLI restart switch                          s5
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1   
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    
        
Add and delete endpoints with L3 inter tenant traffic   
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    REST delete portgroup from vns              X                               X1                      ${leaf2_pc1}            -1
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100  
    sleep                                       1
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 40    
#   ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=1000             frame_size=9216             frame_cnt=10000
#   ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
#   start traffic                               ${stream1}
#   sleep  10
#   stop traffic                                ${stream1}
#   verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    


Controller HA failover with dhcp-relay
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    #REST enable dhcp relay                      Y                               Y1  
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}  
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20        
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1
    
Active Controller reboot with dhcp-relay
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    #REST enable dhcp relay                      Y                               Y1  
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    ${value} =                                  CLI verify cluster master reboot
    Should Be True                              ${value}
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}  
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20        
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1  


Dhcp request from overlapping private IP and public IP
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    BASH init intf                              h5                              bond0
    BASH init intf                              h6                              bond0
    BASH init intf                              h2                              bond0
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y3                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X3                      ${leaf2_pc2}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH init intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h1                              10.251.0.0/16           10.251.1.1
    REST add vns ip                             X                               X3                      10.251.3.1              24          private=true
    REST add vns ip                             Y                               Y3                      10.251.3.1              24  
    REST add dhcp relay                         Y                               Y3                      10.251.1.11
    #REST enable dhcp relay                      Y                               Y3
    REST add dhcp relay                         X                               X3                      10.251.1.11
    #REST enable dhcp relay                      X                               X3
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr6} =                                BASH renew dhcpv4 address       h6                      bond0
    Should Not Be Empty                         ${ipAddr6}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Be Empty                             ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h6                              10.251.0.0/16           10.251.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr6}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac6} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac6}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf2_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr6}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
#    ${state} =                                  Set Variable                    ${result[0]['state']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
#    Should Contain                              ${state}                        L2 Only
    Dictionary Should Not Contain Key           ${result}                       ip-address
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h6                              10.251.0.0/16           10.251.1.1


Restart ofad on leaf with dhcp-relay
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    #REST enable dhcp relay                      Y                               Y1  
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    BASH restart process                        s3                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s1                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    BASH restart process                        s4                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s1                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}  
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20        
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1
    
Restart ofad on spine with dhcp-relay
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc1}            -1
    BASH delete tag                             h1                              bond0.1001              soft_error=${true}      
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0
    BASH start service                          h1                              isc-dhcp-server
    sleep                                       1
    ${value} =                                  BASH check service status       h1                      isc-dhcp-server
    Should Contain                              ${value}                        is started
    sleep                                       1
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    REST add dhcp relay                         Y                               Y1                      10.251.1.11
    #REST enable dhcp relay                      Y                               Y1  
    sleep                                       5
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}
    ${mac1} =                                   BASH get intf mac               h1                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc1}
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    BASH ping                                   h1                              ${ipAddr2}              count=10
    BASH ping                                   h1                              ${ipAddr5}              count=10
    ${mac2} =                                   BASH get intf mac               h2                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20    
    ${value} =                                  BASH release dhcpv4 address     h2                      bond0.1002
    Should Be True                              ${value}
    ${value} =                                  BASH release dhcpv4 address     h5                      bond0
    Should Be True                              ${value}
    BASH restart process                        s7                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s7                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    BASH restart process                        s8                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s8                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    ${ipAddr2} =                                BASH renew dhcpv4 address       h2                      bond0.1002
    Should Not Be Empty                         ${ipAddr2}
    ${ipAddr5} =                                BASH renew dhcpv4 address       h5                      bond0
    Should Not Be Empty                         ${ipAddr5}  
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    BASH add route                              h5                              10.251.0.0/16           10.252.1.1
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}
    Should Contain                              ${ipAddr}                       ${ipAddr2}
    ${mac5} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac5}
    Should Not Be Empty                         ${result}
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}
    ${ipAddr} =                                 Set Variable                    ${result[0]['ip-address'][0]['ip-address']}  
    Should Contain                              ${attachpoint}                  ${leaf2_pc1}
    Should Contain                              ${ipAddr}                       ${ipAddr5}
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      ${ipAddr2}              count=10
    Should Be True                              ${loss} < 20    
    ${loss} =                                   BASH ping                       h1                      ${ipAddr5}              count=10
    Should Be True                              ${loss} < 20        
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    BASH delete route                           h5                              10.251.0.0/16           10.252.1.1
    
L3 inter tenant shutdown and bringup both leaf switch in a dual tor setup
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    REST add shutdown fabric switch             s3
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    REST delete shutdown fabric switch          s3
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    sleep                                       1
    REST add shutdown fabric switch             s4
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    REST delete shutdown fabric switch          s4
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1

L3 inter tenant shutdown and bringup both spine switch
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    REST add shutdown fabric switch             s1
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    REST delete shutdown fabric switch          s1
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    sleep                                       1
    REST add shutdown fabric switch             s2
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    REST delete shutdown fabric switch          s2
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1

Link flap between leaf and spine
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000             frame_size=9216             frame_cnt=400000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep  10
    #CLI disable interface                       s3                              ${leaf0a_spine0}    
    REST disable fabric interface               ${leaf0_a}                       ${leaf0a_spine0}
    sleep                                       5   
    log traffic rate                            tx_rate                         rx_rate                 a                       c
    #CLI enable interface                        s3                              ${leaf0a_spine0}    
    REST enable fabric interface                ${leaf0_a}                       ${leaf0a_spine0}
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1    
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1

        
Verify private subnet cannot be routed via system router            
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   X                               X2                      ${leaf2_pc2}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            -1
    REST add portgroup to vns                   Y                               Y2                      ${leaf1_pc2}            -1
    REST add vns ip                             X                               X1                      10.251.1.1              24              private=true
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h6                              10.251.2.11/24          bond0   
    BASH add ip address                         h3                              10.252.1.11/24          bond0
    BASH add ip address                         h4                              10.252.2.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h5                              10.251.0.0/16           10.251.1.1
    BASH add route                              h6                              10.251.0.0/16           10.251.2.1
    BASH add route                              h6                              10.252.0.0/16           10.251.2.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    BASH add route                              h3                              10.252.0.0/16           10.252.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.2.1
    BASH add route                              h4                              10.252.0.0/16           10.252.2.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=5
    BASH ping                                   h6                              10.251.2.1              count=5
    BASH ping                                   h3                              10.252.1.1              count=5
    BASH ping                                   h4                              10.252.2.1              count=5
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.251.2.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.2.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result} 
    ${mac3} =                                   BASH get intf mac               h3                      bond0
    ${result} =                                 REST show endpoints mac         ${mac3}
    Should Be True                              ${result}                       
    ${mac4} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac4}
    Should Be True                              ${result} 
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.251.2.11             count=10
    Should Be True                              ${loss} == 0  
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.251.2.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-PrivateSubnet  src-ip=10.251.1.11  dst-ip=10.251.2.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-PrivateSubnet  HostPing  leaf  host=h5  ip=10.251.2.11
    Should Be True  ${returnVal}
    ${loss} =                                   BASH ping                       h5                      10.252.2.11             count=10
    Should Be True                              ${loss} == 100    
    ${returnVal}=  rest verify testpath error code  dropped due to private segment  src-ip=10.251.1.11  dst-ip=10.252.2.11
    Should Be True  ${returnVal}    
    ${loss} =                                   BASH ping                       h3                      10.251.1.11             count=10
    Should Be True                              ${loss} == 100    
    ${returnVal}=  rest verify testpath error code  no route  src-ip=10.252.1.11  dst-ip=10.251.1.11
    Should Be True  ${returnVal}    
    ${loss} =                                   BASH ping                       h6                      10.252.2.11             count=10
    Should Be True                              ${loss} == 0    
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h5                              10.251.0.0/16           10.251.1.1
    BASH delete route                           h6                              10.251.0.0/16           10.251.2.1
    BASH delete route                           h6                              10.252.0.0/16           10.251.2.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1
    BASH delete route                           h3                              10.252.0.0/16           10.252.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.2.1
    BASH delete route                           h4                              10.252.0.0/16           10.252.2.1


L3 inter tenant traffic with jumbo frame
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000             frame_size=9216             frame_cnt=100000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    
Verify inter tenant L3 traffic is getting drop with null next hop
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h1                              10.252.1.11             count=3
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0  
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-NullNextHop  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-NullNextHop  HostPing  leaf  spine  leaf  host=h1  ip=10.252.1.11
    Should Be True  ${returnVal}
    REST add static routes                      X                               10.252.0.0/16  
    REST show l3 cidr table         
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100   
    ${returnVal}=  rest verify testpath error code  dropped by route  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}       
    REST delete static routes                   X                               10.252.0.0/16   
    REST add static routes                      X                               0.0.0.0/0               {"tenant": "system"}
    REST show l3 cidr table         
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0   
    # For this test test path is still active. So just probing the previous test
    ${returnVal}=  rest verify testpath fabric view  Test-NullNextHop  HostPing  leaf  spine  leaf  host=h1  ip=10.252.1.11
    Should Be True  ${returnVal}
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1

            
Enable and disable tenant logical router interface
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf0_b}              ${ixia2}                -1
    BASH ifconfig ip address                    h5                              10.251.1.11/24          bond0   
    BASH ifconfig ip address                    h6                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.1.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.252.1.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    REST disable router intf                    system                          Y
    sleep                                       1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100   
    ${returnVal}=  rest verify testpath error code  uninstalled interface  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}      
    REST enable router intf                     system                          Y
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 50    
    REST disable router intf                    X                               system
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100    
    ${returnVal}=  rest verify testpath error code  uninstalled interface  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}      
    REST enable router intf                     X                               system 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} < 50 
    rest clear testpath   
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-UninstalledInterface  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-UninstalledInterface  HostPing  leaf  spine  leaf  host=h5  ip=10.252.1.11
    Should Be True  ${returnVal}   
    BASH delete route                           h5                              10.252.1.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.252.1.1



initialize host
    BASH run command                                h1                                ifdown bond0
    BASH run command                                h2                                ifdown bond0
    BASH run command                                h3                                ifdown bond0
    BASH run command                                h4                                ifdown bond0
    BASH run command                                h5                                ifdown bond0
    BASH run command                                h6                                ifdown bond0
    sleep                                           1
    BASH run command                                h1                                ifup eth2
    sleep                                           1
    BASH run command                                h1                                ifup eth3
    BASH run command                                h2                                ifup eth2
    sleep                                           1
    BASH run command                                h2                                ifup eth3
    BASH run command                                h3                                ifup eth2
    sleep                                           1
    BASH run command                                h3                                ifup eth3
    BASH run command                                h4                                ifup eth2
    sleep                                           1
    BASH run command                                h4                                ifup eth3
    BASH run command                                h5                                ifup eth2
    sleep                                           1
    BASH run command                                h5                                ifup eth3
    BASH run command                                h6                                ifup eth2
    sleep                                           1
    BASH run command                                h6                                ifup eth3
    sleep                                           1
    BASH run command                                h6                                ifup p1p1
    sleep                                           1
    BASH run command                                h6                                ifup p1p2
    BASH ifup intf                              h1                                bond0
    BASH ifup intf                              h2                                bond0
    BASH ifup intf                              h3                                bond0
    BASH ifup intf                              h4                                bond0
    BASH ifup intf                              h5                                bond0
    BASH ifup intf                              h6                                bond0
    BASH init intf                              h1                                bond0
    BASH init intf                              h2                                bond0
    BASH init intf                              h3                                bond0
    BASH init intf                              h4                                bond0
    BASH init intf                              h5                                bond0
    BASH init intf                              h6                                bond0
    BASH release dhcpv4 address                 h1                              bond0
    BASH release dhcpv4 address                 h2                              bond0
    BASH release dhcpv4 address                 h3                              bond0
    BASH release dhcpv4 address                 h4                              bond0
    BASH release dhcpv4 address                 h5                              bond0
    BASH release dhcpv4 address                 h6                              bond0
    BASH stop service                           h1                                isc-dhcp-server
    BASH stop service                           h2                                isc-dhcp-server
    BASH stop service                           h3                                isc-dhcp-server
    BASH kill process                           h1                              dhclient
    BASH kill process                           h2                              dhclient
    BASH kill process                           h3                              dhclient
    BASH kill process                           h4                              dhclient
    BASH kill process                           h5                              dhclient
    BASH kill process                           h6                              dhclient    
#    BASH delete tag                             h1                              bond0.1001              soft_error=${true}
#    BASH delete tag                             h2                              bond0.1002              soft_error=${true}
#    BASH delete tag                             h3                              bond0.1003              soft_error=${true}
#    BASH delete tag                             h4                              bond0.1004              soft_error=${true}
#    BASH delete tag                             h5                              bond0.1005              soft_error=${true}
#    BASH delete tag                             h6                              bond0.1006              soft_error=${true}
    # BASH init intf                              h1                              eth1
    # BASH init intf                              h1                              eth2
    # BASH init intf                              h1                              eth3
    # BASH init intf                              h2                              eth1
    # BASH init intf                              h2                              eth2
    # BASH init intf                              h2                              eth3
    # BASH init intf                              h3                              eth1
    # BASH init intf                              h3                              eth2
    # BASH init intf                              h3                              eth3
    # BASH init intf                              h4                              eth1
    # BASH init intf                              h4                              eth2
    # BASH init intf                              h4                              eth3
    # BASH init intf                              h5                              eth1
    # BASH init intf                              h5                              eth2
    # BASH init intf                              h5                              eth3
    # BASH init intf                              h6                              em2
    # BASH init intf                              h6                              p1p1
    # BASH init intf                              h6                              p1p2
    # BASH init intf                              h1                              bond0
    # BASH init intf                              h2                              bond0
    # BASH init intf                              h3                              bond0
    # BASH init intf                              h4                              bond0
    # BASH init intf                              h5                              bond0
    # BASH init intf                              h6                              bond0
    # BASH ifdown intf                            h1                              bond0
    # BASH ifdown intf                            h2                              bond0
    # BASH ifdown intf                            h3                              bond0
    # BASH ifdown intf                            h4                              bond0
    # BASH ifdown intf                            h5                              bond0
    # BASH ifdown intf                            h6                              bond0   
    # BASH release dhcpv4 address                 h1                              bond0
    # BASH release dhcpv4 address                 h2                              bond0
    # BASH release dhcpv4 address                 h3                              bond0
    # BASH release dhcpv4 address                 h4                              bond0
    # BASH release dhcpv4 address                 h5                              bond0
    # BASH release dhcpv4 address                 h6                              bond0
    # ${result} =                                 BASH run command                h1                     ifconfig
    # log                                         host1 ifconfig is ${result}
    # ${result} =                                 BASH run command                h2                     ifconfig
    # log                                         host2 ifconfig is ${result}
    # ${result} =                                 BASH run command                h3                     ifconfig
    # log                                         host3 ifconfig is ${result}
    # ${result} =                                 BASH run command                h4                     ifconfig
    # log                                         host4 ifconfig is ${result}
    # ${result} =                                 BASH run command                h5                     ifconfig
    # log                                         host5 ifconfig is ${result}
    # ${result} =                                 BASH run command                h6                     ifconfig
    # log                                         host6 ifconfig is ${result}
    # BASH stop service                           h1                              isc-dhcp-server
    


test setup topology
    initialize host
    
    sleep                                           1
#    Start Floodlight Monitor 
    REST add tenant                                 X
    REST add tenant                                 Y
    REST add tenant                                 Z
    REST add tenant                                 system
    REST add vns                                    X                           X1
    REST add vns                                    X                           X2
    REST add vns                                    X                           X3
    REST add vns                                    Y                           Y1
    REST add vns                                    Y                           Y2
    REST add vns                                    Y                           Y3
    REST add vns                                    Z                           Z1
    REST add vns                                    Z                           Z2
    REST add vns                                    Z                           Z3
    REST add router intf                            X                           X1
    REST add router intf                            X                           X2
    REST add router intf                            X                           X3
    REST add router intf                            Y                           Y1
    REST add router intf                            Y                           Y2
    REST add router intf                            Y                           Y3
    REST add router intf                            Z                           Z1
    REST add router intf                            Z                           Z2
    REST add router intf                            Z                           Z3  
    REST add vns ip                                 X                           X1              10.251.1.1              24  
    REST add vns ip                                 X                           X2              10.251.2.1              24  
    REST add vns ip                                 X                           X3              10.251.3.1              24  
    REST add vns ip                                 Y                           Y1              10.252.1.1              24  
    REST add vns ip                                 Y                           Y2              10.252.2.1              24  
    REST add vns ip                                 Y                           Y3              10.252.3.1              24  
    REST add vns ip                                 Z                           Z1              10.253.1.1              24  
    REST add vns ip                                 Z                           Z2              10.253.2.1              24  
    REST add vns ip                                 Z                           Z3              10.253.3.1              24  
    REST add interface to portgroup                 ${leaf0_a}                  ${leaf0_pc1_intf1}                  ${leaf0_pc1}
    REST add interface to portgroup                 ${leaf0_b}                  ${leaf0_pc1_intf2}                  ${leaf0_pc1}
    REST add interface to portgroup                 ${leaf0_a}                  ${leaf0_pc2_intf1}                  ${leaf0_pc2}
    REST add interface to portgroup                 ${leaf0_b}                  ${leaf0_pc2_intf2}                  ${leaf0_pc2}
    REST add interface to portgroup                 ${leaf1_a}                  ${leaf1_pc1_intf1}                  ${leaf1_pc1}
    REST add interface to portgroup                 ${leaf1_b}                  ${leaf1_pc1_intf2}                  ${leaf1_pc1}
    REST add interface to portgroup                 ${leaf1_a}                  ${leaf1_pc2_intf1}                  ${leaf1_pc2}
    REST add interface to portgroup                 ${leaf1_b}                  ${leaf1_pc2_intf2}                  ${leaf1_pc2}
    REST add interface to portgroup                 ${leaf2_a}                  ${leaf2_pc1_intf1}                  ${leaf2_pc1}
    REST add interface to portgroup                 ${leaf2_b}                  ${leaf2_pc1_intf2}                  ${leaf2_pc1}
    REST add interface to portgroup                 ${leaf2_a}                  ${leaf2_pc2_intf1}                  ${leaf2_pc2}
    REST add interface to portgroup                 ${leaf2_b}                  ${leaf2_pc2_intf2}                  ${leaf2_pc2}    
    REST add tenant routers intf to system          X
    REST add tenant routers intf to system          Y
    REST add tenant routers intf to system          Z
    REST add system intf to tenant routers          X
    REST add system intf to tenant routers          Y
    REST add system intf to tenant routers          Z
#   REST add policy                                 X                           allow_all
#   REST add policy                                 Y                           allow_all
#   ${result} =                                     REST add policy item        X                   allow_all           10      permit          {"tenant-name": "X"}, "dst": {"tenant-name": "system"}
#   Should Be True                                  ${result}
#   ${result} =                                     REST add policy item        X                   allow_all           20      permit          {"tenant-name": "system"}, "dst": {"tenant-name": "X"}
#   Should Be True                                  ${result}
    REST add static routes                          X                           10.252.0.0/16        {"tenant": "system"}        
    REST add static routes                          X                           10.253.0.0/16        {"tenant": "system"}
    REST add static routes                          Y                           10.251.0.0/16        {"tenant": "system"}
    REST add static routes                          Y                           10.253.0.0/16        {"tenant": "system"}
    REST add static routes                          Z                           10.251.0.0/16        {"tenant": "system"}        
    REST add static routes                          Z                           10.252.0.0/16        {"tenant": "system"}        
    

test teardown topology
    delete traffic
    REST delete vns ip                              X                           X1              10.251.1.1              24  
    REST delete vns ip                              X                           X2              10.251.2.1              24  
    REST delete vns ip                              X                           X3              10.251.3.1              24  
    REST delete vns ip                              Y                           Y1              10.252.1.1              24  
    REST delete vns ip                              Y                           Y2              10.252.2.1              24  
    REST delete vns ip                              Y                           Y3              10.252.3.1              24  
    REST delete vns ip                              Z                           Z1              10.253.1.1              24  
    REST delete vns ip                              Z                           Z2              10.253.2.1              24  
    REST delete vns ip                              Z                           Z3              10.253.3.1              24  
    REST delete vns                                 X                           X1
    REST delete vns                                 X                           X2
    REST delete vns                                 X                           X3
    REST delete vns                                 Y                           Y1
    REST delete vns                                 Y                           Y2
    REST delete vns                                 Y                           Y3
    REST delete vns                                 Z                           Z1
    REST delete vns                                 Z                           Z2
    REST delete vns                                 Z                           Z3
    REST delete tenant                              X
    REST delete tenant                              Y
    REST delete tenant                              Z
    REST delete tenant routers intf to system       X
    REST delete tenant routers intf to system       Y
    REST delete tenant routers intf to system       Z
    initialize host
#    Stop Floodlight Monitor    
    BASH ifdown intf                                h3                          bond0
    BASH restart networking service                 h1                          timeout=60
    BASH restart networking service                 h3                          timeout=60
    BASH restart networking service                 h6                          timeout=60
    

T5 base suite setup
    base suite setup
    add fabric switch
    sleep                                           5
    ${result} =                                     CLI verify controller       s1                          c1      
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s1                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s2                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s2                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s3                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s3                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s4                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s4                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s5                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s5                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s6                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s6                          c2
    Should Be True                                  ${result}       
    REST add portgroup                              ${leaf0_pc1}
    REST add portgroup                              ${leaf0_pc2}
    REST add portgroup                              ${leaf1_pc1}
    REST add portgroup                              ${leaf1_pc2}
    REST add portgroup                              ${leaf2_pc1}
    REST add portgroup                              ${leaf2_pc2}
    REST add portgroup lacp                         ${leaf0_pc1}
    REST add portgroup lacp                         ${leaf0_pc2}
    REST add portgroup lacp                         ${leaf1_pc1}
    REST add portgroup lacp                         ${leaf1_pc2}
    REST add portgroup lacp                         ${leaf2_pc1}
    REST add portgroup lacp                         ${leaf2_pc2}

  
T5 base suite teardown
    REST delete portgroup                               ${leaf0_pc1}
    REST delete portgroup                               ${leaf0_pc2}
    REST delete portgroup                               ${leaf1_pc1}
    REST delete portgroup                               ${leaf1_pc2}
    REST delete portgroup                               ${leaf2_pc1}
    REST delete portgroup                               ${leaf2_pc2}
    delete fabric switch  



verify results   [Arguments]  ${transmitted_frames}  ${received_valid_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report}=  fetch port stats  stream=${stream}  
    ${tx_value}=  verify dict key  ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${stream_name}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value} 
    Log         ${in_range}
    Should be true  ${in_range} 
    
calculate loss   [Arguments]  ${transmitted_frames}  ${received_valid_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report} =     fetch port stats    stream=${stream}  
    ${tx_value} =   verify dict key     ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value} =   verify dict key     ${report}  ${stream_name}  ${received_valid_frames}
    ${loss} =       evaluate            ${tx_value} - ${rx_value}
    Log             ${loss}
    
verify traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log     ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    ixia verify traffic rate  ${tx_value}  ${rx_value} 

log traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log     ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    Log     ${tx_value}
    Log     ${rx_value} 
 

        
