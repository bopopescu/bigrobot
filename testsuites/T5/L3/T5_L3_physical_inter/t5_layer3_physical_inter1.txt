* Setting
Documentation   T5 inter tenant L3 Test Suite
Suite Setup     T5 base suite setup
Suite Teardown  T5 base suite teardown
Test Setup      test setup topology
Test Teardown   test teardown topology
Force Tags      T5     L3      IronHorse
Library         keywords/BsnCommon.py
Library         keywords/Host.py
Library         keywords/T5.py
Library         keywords/T5L3.py
Library         keywords/T5Platform.py
Library         keywords/SwitchLight.py
Library         keywords/T5Utilities.py
Library         keywords/BsnCommon.py
Library         Collections.py
Library         keywords/Ixia.py
Library         keywords/KVMOperations.py
Resource        testsuites/T5/L3//T5_L3_physical_inter/t5_layer3_physical_inter_variables.txt
Resource        testsuites/T5/t5_dualleaf_three_rack_physical_resource.txt

* Test Cases
TC01 Inter tenant L3 untagged traffic with dynamic endpoints same rack
    L3 inter tenant same rack untagged with dynamic endpoints
    [Tags]     sanity       feature     testpath

TC02 Inter tenant L3 untagged traffic with dynamic endpoints across rack
    L3 inter tenant across rack untagged with dynamic endpoints
    [Tags]     sanity       feature     testpath
    
TC03 Inter tenant L3 tagged traffic with dynamic endpoints same rack
    L3 inter tenant same rack tagged with dynamic endpoints
    [Tags]     sanity       feature     testpath
    
TC04 inter tenant L3 tagged traffic with dynamic endpoints across rack
    L3 inter tenant across rack tagged with dynamic endpoints
    [Tags]     sanity       feature     testpath
    
TC05 Add and delete default route on tenant
    Add and delete default route on tenant router
    [Tags]      feature         testpath
   

TC06 Add and delete more specific route on tenant over existing static route
    Add and delete more specific route on tenant over existing static route
    [Tags]      feature          testpath

TC07 Add and delete tenant system interface on tenant router
    Add and delete tenant system interface on tenant router
    [Tags]      feature          testpath

TC08 Add and delete tenant router interface on system tenant
    Add and delete tenant router interface on system tenant
    [Tags]      feature          testpath

TC09 L3 ttl one forwarding
    Verify inter tenant L3 traffic with ttl value of one two and three
    [Tags]      feature                 

TC10 L3 inter tenant forwarding with end host moved to another port
    L3 inter tenant host moved 
    [Tags]      feature        testpath         

TC11 L3 inter tenant forwarding split horizon on the same port 
    manual passed
    [Tags]      feature     manual
    
TC12 Move ecmp endpoint to another attachment point and verify L3 forwarding
    manual passed
    [Tags]          manual          feature         ecmp        

TC13 Verify L3 traffic switch over to different path when the same route is applied with different nexthop or tenant
    manual passed
    [Tags]          manual          feature         

TC14 L3 inter tenant traffic behavior in headless mode
    manual passed
    [Tags]          manual          feature         

TC15 Link flap between leaf and spine
    Link flap between leaf and spine
    [Tags]          feature         

TC16 L3 inter tenant forwarding to external router
    manual passed
    [Tags]          manual          feature         

TC17 L3 inter tenant forwarding to VRRP routers
    manual passed
    [Tags]          manual          feature
    
TC18 L3 inter tenant destroy active controller VM from KVM
    manual passed
    [Tags]          manual            feature        

TC19 L3 inter tenant destroy standby controller VM from KVM
    manual passed
    [Tags]          manual           feature  

TC20 inter tenant ecmp forwarding in headless mode
    manual passed
    [Tags]          manual          solution            ecmp

TC21 inter tenant dhcp relay in headless mode
    manual passed
    [Tags]          manual          solution            dhcp-relay  

TC22 Verify L3 inter tenant forwarding after controller upgrade
    manual failed
    [Tags]          manual          feature                 

TC23 Verify inter tenant ecmp forwarding after controller upgrade
    manual failed
    [Tags]          manual          feature                 

TC24 Verify inter tenant dhcp-relay functionality after controller upgrade
    manual failed
    [Tags]          manual          feature    

TC25 Add and delete nexthop group
    manual passed
    [Tags]          manual              feature            

TC26 Add and delete nexthop group in system
    manual passed
    [Tags]          manual              feature     negative             

TC27 Add and delete nexthop group IP 
    manual passed
    [Tags]          manual              feature            
                    
TC28 Add and delete route pointing to nexthop group in tenant
    manual passed
    [Tags]          manual              feature            
                    
TC29 Add and delete route pointing to different nexthop group in system
    manual passed
    [Tags]          manual              feature            

TC30 Add and delete route pointing to nexthop group in system
    manual passed
    [Tags]          manual              feature            

TC31 Add and delete route pointing to unknown nexthop group in system
    manual untested
    [Tags]          manual              feature            

TC32 Add and delete route pointing to nexthop group defined in other tenant in system
    manual untested
    [Tags]          manual              feature            

TC33 Add and delete route pointing to nexthop group defined in tenantX in tenantY
    manual untested
    [Tags]          manual              feature            

TC34 Verify nexthop group config is still applied on HA failover
    manual untested
    [Tags]          manual              feature            HA
    
TC35 Verify routing loop is not causing packets to loop forever
    manual passed
    [Tags]          manual          feature   
    
TC36 Spine reboot
    Spine reboot
    [Tags]          feature         HA          

TC37 Leaf reboot
    Leaf reboot
    [Tags]          feature         HA 
    
TC38 Restart ofad on leaf switch
    Restart ofad on leaf switch
    [Tags]          feature         

TC39 Restart ofad on spine switch
    Restart ofad on spine switch
    [Tags]          feature  

TC40 Controller HA failover via CLI
    Controller HA failover via CLI
    [Tags]          feature         HA 
* Keywords
L3 inter tenant same rack untagged with dynamic endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0   
    BASH ifup intf                              h5                              bond0   
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf2_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf0_b}              ${ixia2}                -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h6                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.1.0/24           10.251.1.1
    BASH add route                              h6                              10.251.1.0/24           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h6                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h6                      10.252.1.1
    Should Be True                              ${value} 
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h6                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    rest clear testpath 
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test1  src-ip=10.251.1.11  dst-ip=10.252.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test1  HostPing  leaf  spine  leaf  host=h5  ip=10.252.1.11
    Should Be True  ${returnVal}
#   ${stream1}=                                 L3 add                          name=stream1            flow=a<->b              frame_rate=1000             frame_size=9216             frame_cnt=10000
#   ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
#   start traffic                               ${stream1}
#   sleep  10
#   stop traffic                                ${stream1}
#    verify results                                 transmitted_frames              received_valid_frames   ${stream1}              stream1
    BASH delete route                           h5                              10.252.1.0/24           10.251.1.1
    BASH delete route                           h6                              10.251.1.0/24           10.252.1.1

    
L3 inter tenant across rack untagged with dynamic endpoints 
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0   
    rest clear testpath  
    ${returnVal}=  rest configure testpath controller view   src-ip=10.252.1.11  dst-ip=10.251.1.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test2  src-ip=10.252.1.11  dst-ip=10.251.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test2  HostPing  leaf  spine  leaf  host=h4  ip=10.251.1.11
    Should Be True  ${returnVal}
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    

L3 inter tenant same rack tagged with dynamic endpoints
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0               
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf0_b}              ${ixia2}                201
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001  
    BASH add ip address                         h2                              10.252.1.11/24          bond0.1002
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
#   ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Not Be True                          ${value}        
#   ${value} =                                  BASH verify arp                 h2                      10.252.1.1
#   Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0   
    rest clear testpath 
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test3  src-ip=10.251.1.11  dst-ip=10.252.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test3  HostPing  leaf  spine  leaf  host=h2  ip=10.251.1.11
    Should Be True  ${returnVal}
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    
    
L3 inter tenant across rack tagged with dynamic endpoints   
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                201 
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
#   BASH ping                                   h1                              10.251.1.1              count=10
#   BASH ping                                   h3                              10.252.1.1              count=10
#   ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#   Should Not Be True                          ${value}        
#   ${value} =                                  BASH verify arp                 h3                      10.252.1.1
#   Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    rest clear testpath  
    ${returnVal}=  rest configure testpath controller view   src-ip=10.252.1.11  dst-ip=10.251.1.11
    Should Be True  ${returnVal}
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test4  src-ip=10.252.1.11  dst-ip=10.251.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test4  HostPing  leaf  spine  leaf  host=h3   ip=10.251.1.11
    Should Be True  ${returnVal}  
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1
    



Add and delete default route on tenant router
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                201 
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
#   BASH ping                                   h1                              10.251.1.1              count=10
#   BASH ping                                   h3                              10.252.1.1              count=10
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0        
    REST delete static routes                   X                               10.252.0.0/16              
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100      
    ${returnVal}=  rest verify testpath error code  no route  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal} 
    REST add static routes                      X                               0.0.0.0/0               {"tenant": "system"}
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0      
    rest clear testpath 
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}  
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-DefaultRoute  src-ip=10.251.1.11  dst-ip=10.252.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-DefaultRoute  HostPing  leaf  spine  leaf  host=h1  ip=10.252.1.11
    Should Be True  ${returnVal}
    REST delete static routes                   X                               0.0.0.0/0               
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100     
    ${returnVal}=  rest verify testpath error code  no route  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}    
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1
    


Add and delete tenant system interface on tenant router
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                201 
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    sleep                                       10  
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0   
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}     
    REST delete system intf to tenant routers       X
    sleep                                           1
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100      
    ${returnVal}=  rest verify testpath error code  uninstalled interface  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal} 
    REST add system intf to tenant routers      X
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0  
    rest clear testpath 
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}       
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-SysInterface  src-ip=10.251.1.11  dst-ip=10.252.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-SysInterface  HostPing  leaf  spine  leaf  host=h1  ip=10.252.1.11
    Should Be True  ${returnVal}
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1
    

Add and delete tenant router interface on system tenant
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                201 
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    sleep                                       10  
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0        
    REST delete tenant routers intf to system   Y
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 100    
    ${returnVal}=  rest verify testpath error code  no route  src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}        
    REST add tenant routers intf to system      Y
    sleep                                       1
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0   
    rest clear testpath
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-TenantInterface  src-ip=10.251.1.11  dst-ip=10.252.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-TenantInterface  HostPing  leaf  spine  leaf  host=h1  ip=10.252.1.11
    Should Be True  ${returnVal}
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1


Add and delete more specific route on tenant over existing static route
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   X                               X2                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    REST add portgroup to vns                   Y                               Y2                      ${leaf1_pc2}            -1
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h2                              bond0                   1002
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h2                              bond0.1002
    BASH ifup intf                              h3                              bond0.1003
    BASH ifup intf                              h4                              bond0
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h2                              10.251.2.11/24          bond0.1002
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add ip address                         h4                              10.252.2.11/24          bond0
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h1                              10.251.0.0/16           10.251.1.1
    BASH add route                              h2                              10.252.0.0/16           10.251.2.1
    BASH add route                              h2                              10.251.0.0/16           10.251.2.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    BASH add route                              h3                              10.252.0.0/16           10.252.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.2.1
    BASH add route                              h4                              10.252.0.0/16           10.252.2.1
    sleep                                       5
    REST delete static routes                   X                               0.0.0.0/0   
    REST add static routes                      X                               10.252.0.0/16           {"tenant": "system"}
    REST delete static routes                   Y                               0.0.0.0/0   
    REST add static routes                      Y                               10.251.0.0/16           {"tenant": "system"}
    BASH ping                                   h1                              10.252.1.11             count=5
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} < 40
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}    
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value} 
    REST add nexthop group                      X                               A1
    REST add nexthopGroup ip                    X                              A1                       10.251.2.11
    REST add static routes                      X                              10.252.1.0/24             {"next-hop-group": "A1"}
    sleep                                       1
    ${returnVal} =                              verify ping with tcpdump        h1                      10.252.1.11            h2      bond0       ICMP echo request   
    Should Be True                              ${returnVal}    
    ${returnVal} =                              verify ping with tcpdump        h1                      10.252.1.11            h2      bond0       10.252.1.11   
    Should Be True                              ${returnVal}    
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=5
    Should Be True                              ${loss} == 100
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    ## Here Test Path should show the forwarding as true, since route is directed to a garbage hop
    Should Be True  ${returnVal}    
    REST delete static routes                   X                               10.252.1.0/24
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} < 40
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}    
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1

Verify inter tenant L3 traffic with ttl value of one two and three
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0   
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1003
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                201 
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h3                              bond0                   1003
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h3                              bond0.1003
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1003
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
#    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
#    Should Not Be True                          ${value}        
#    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
#    Should Not Be True                          ${value}    
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h3                      10.252.1.1
    Should Be True                              ${value}        
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h3                      bond0.1003
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints     
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0        
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10            ttl=1
    Should Be True                              ${loss} == 100      
    ${result} =                                 BASH content                    h1
    log                                         result from bash ping is ${result}
    Should Contain X Times                      ${result}                       Time to live exceeded   10
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10            ttl=2
    Should Be True                              ${loss} == 100      
    ${result} =                                 BASH content                    h1
    log                                         result from bash ping is ${result}
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10            ttl=3
    Should Be True                              ${loss} == 100
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10            ttl=4
    Should Be True                              ${loss} == 0
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h3                              10.251.0.0/16           10.252.1.1
    

L3 inter tenant host moved 
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    BASH delete tag                             h3                              bond0.1002              soft_error=${true}              
    REST add portgroup to vns                   X                               X1                      ${leaf0_pc1}            1001
    REST add portgroup to vns                   Y                               Y1                      ${leaf0_pc2}            1002
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc1}            1002
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                101
    REST add interface to vns                   Y                               Y1                      ${leaf0_b}              ${ixia2}                201
    BASH add tag                                h1                              bond0                   1001
    BASH add tag                                h2                              bond0                   1002
    BASH ifup intf                              h1                              bond0.1001
    BASH ifup intf                              h2                              bond0.1002
    BASH add ip address                         h1                              10.251.1.11/24          bond0.1001  
    BASH add ip address                         h2                              10.252.1.11/24          bond0.1002
    BASH add route                              h1                              10.252.0.0/16           10.251.1.1
    BASH add route                              h2                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h1                              10.252.1.11             count=10
    ${value} =                                  BASH verify arp                 h1                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h2                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h1                      bond0.1001
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h2                      bond0.1002
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}   
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf0_pc2}    
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}    
    sleep                                       5
    BASH init intf                              h2                              bond0.1002
    BASH ifdown intf                            h2                              bond0
    BASH add tag                                h3                              bond0                   1002
    BASH set mac address                        h3                              bond0.1002              ${mac2}
    BASH ifup intf                              h3                              bond0.1002
    BASH add ip address                         h3                              10.252.1.11/24          bond0.1002
    BASH add route                              h3                              10.251.0.0/16           10.252.1.1
    ${mac3} =                                   BASH get intf mac               h3                      bond0.1002
    Should Be Equal                             ${mac3}                         ${mac2}
    BASH ping                                   h3                              10.252.1.1              count=5
    ${loss} =                                   BASH ping                       h1                      10.252.1.11             count=10
    Should Be True                              ${loss} < 20    
    rest clear testpath
    ${returnVal}=  rest configure testpath controller view   src-ip=10.251.1.11  dst-ip=10.252.1.11
    Should Be True  ${returnVal}           
    ${returnVal}=  rest configure testpath fabric_view  test-name=Test-TenantMove  src-ip=10.251.1.11  dst-ip=10.252.1.11 
    Should Be True  ${returnVal}
    ${returnVal}=  rest verify testpath fabric view  Test-TenantMove  HostPing  leaf  spine  leaf  host=h1  ip=10.252.1.11
    Should Be True  ${returnVal}
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}   
    ${attachpoint} =                            Set Variable                    ${result[0]['attachment-point']}    
    Should Contain                              ${attachpoint}                  ${leaf1_pc1}
    BASH delete tag                             h3                              bond0.1002              soft_error=${true}
    BASH delete route                           h1                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h2                              10.251.0.0/16           10.252.1.1  
    Restart ofad on leaf switch
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=9216             frame_cnt=1000000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    BASH restart process                        s3                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s3                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    
Restart ofad on spine switch
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=9216             frame_cnt=1000000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    BASH restart process                        s2                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s2                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
    
Controller HA failover via CLI
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0       
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0           
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1  
    BASH add ip address                         h5                              10.251.1.11/24          bond0   
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5   
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}        
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}    
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}                       
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}                       
    REST show endpoints 
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0    
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=9216             frame_cnt=100000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1                       
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep  10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    ${value} =                                  REST verify cluster election take leader
    Should Be True                              ${value}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5   
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0        
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1

Restart ofad on leaf switch
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}
    REST show endpoints
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000            frame_size=9216             frame_cnt=1000000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    BASH restart process                        s3                              ofad                    timeout=60
    sleep                                       5
    ${value} =                                  BASH check service status       s3                      ofad
    Should Contain                              ${value}                        is started
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1

Link flap between leaf and spine
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}
    REST show endpoints
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=10000             frame_size=9216             frame_cnt=400000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep  10
    #CLI disable interface                       s3                              ${leaf0a_spine0}
    REST disable fabric interface               ${leaf0_a}                       ${leaf0a_spine0}
    sleep                                       5
    log traffic rate                            tx_rate                         rx_rate                 a                       c
    #CLI enable interface                        s3                              ${leaf0a_spine0}
    REST enable fabric interface                ${leaf0_a}                       ${leaf0a_spine0}
    sleep                                       10
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
 
Spine reboot
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}
    REST show endpoints
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=1000             frame_size=9216             frame_cnt=10000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    CLI restart switch                          s1
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1

Leaf reboot
    BASH ifup intf                              h1                              bond0
    BASH ifup intf                              h2                              bond0
    BASH ifup intf                              h3                              bond0
    BASH ifup intf                              h4                              bond0
    BASH ifup intf                              h5                              bond0
    BASH ifup intf                              h6                              bond0
    REST add portgroup to vns                   X                               X1                      ${leaf2_pc1}            -1
    REST add portgroup to vns                   Y                               Y1                      ${leaf1_pc2}            -1
    REST add interface to vns                   X                               X1                      ${leaf0_a}              ${ixia1}                -1
    REST add interface to vns                   Y                               Y1                      ${leaf1_a}              ${ixia3}                -1
    BASH add ip address                         h5                              10.251.1.11/24          bond0
    BASH add ip address                         h4                              10.252.1.11/24          bond0
    BASH add route                              h5                              10.252.0.0/16           10.251.1.1
    BASH add route                              h4                              10.251.0.0/16           10.252.1.1
    sleep                                       5
    BASH ping                                   h5                              10.251.1.1              count=10
    BASH ping                                   h4                              10.252.1.1              count=10
    ${value} =                                  BASH verify arp                 h5                      10.251.1.1
    Should Be True                              ${value}
    ${value} =                                  BASH verify arp                 h4                      10.252.1.1
    Should Be True                              ${value}
    ${mac1} =                                   BASH get intf mac               h5                      bond0
    ${result} =                                 REST show endpoints mac         ${mac1}
    Should Be True                              ${result}
    ${mac2} =                                   BASH get intf mac               h4                      bond0
    ${result} =                                 REST show endpoints mac         ${mac2}
    Should Be True                              ${result}
    REST show endpoints
    ${loss} =                                   BASH ping                       h5                      10.252.1.11             count=10
    Should Be True                              ${loss} == 0
    ${stream1}=                                 L3 add                          name=stream1            flow=a<->c              frame_rate=1000             frame_size=9216             frame_cnt=10000
    ...                                         src_ip=10.251.1.101             src_gw=10.251.1.1       dst_ip=10.252.1.101     dst_gw=10.252.1.1
    start traffic                               ${stream1}
    sleep  10
    stop traffic                                ${stream1}
    verify results                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    start traffic                               ${stream1}
    sleep                                       5
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    CLI restart switch                          s5
    sleep                                       10
    verify traffic rate                         tx_rate                         rx_rate                 a                       c
    sleep                                       5
    stop traffic                                ${stream1}
    calculate loss                              transmitted_frames              received_valid_frames       ${stream1}              stream1
    BASH delete route                           h5                              10.252.0.0/16           10.251.1.1
    BASH delete route                           h4                              10.251.0.0/16           10.252.1.1
   
initialize host
    BASH run command                                h1                                ifdown bond0
    BASH run command                                h2                                ifdown bond0
    BASH run command                                h3                                ifdown bond0
    BASH run command                                h4                                ifdown bond0
    BASH run command                                h5                                ifdown bond0
    BASH run command                                h6                                ifdown bond0
    sleep                                           1
    BASH run command                                h1                                ifup eth2
    sleep                                           1
    BASH run command                                h1                                ifup eth3
    BASH run command                                h2                                ifup eth2
    sleep                                           1
    BASH run command                                h2                                ifup eth3
    BASH run command                                h3                                ifup eth2
    sleep                                           1
    BASH run command                                h3                                ifup eth3
    BASH run command                                h4                                ifup eth2
    sleep                                           1
    BASH run command                                h4                                ifup eth3
    BASH run command                                h5                                ifup eth2
    sleep                                           1
    BASH run command                                h5                                ifup eth3
    BASH run command                                h6                                ifup eth2
    sleep                                           1
    BASH run command                                h6                                ifup eth3
    sleep                                           1
    BASH run command                                h6                                ifup p1p1
    sleep                                           1
    BASH run command                                h6                                ifup p1p2
    BASH ifup intf                              h1                                bond0
    BASH ifup intf                              h2                                bond0
    BASH ifup intf                              h3                                bond0
    BASH ifup intf                              h4                                bond0
    BASH ifup intf                              h5                                bond0
    BASH ifup intf                              h6                                bond0
    BASH init intf                              h1                                bond0
    BASH init intf                              h2                                bond0
    BASH init intf                              h3                                bond0
    BASH init intf                              h4                                bond0
    BASH init intf                              h5                                bond0
    BASH init intf                              h6                                bond0
    BASH release dhcpv4 address                 h1                              bond0
    BASH release dhcpv4 address                 h2                              bond0
    BASH release dhcpv4 address                 h3                              bond0
    BASH release dhcpv4 address                 h4                              bond0
    BASH release dhcpv4 address                 h5                              bond0
    BASH release dhcpv4 address                 h6                              bond0
    BASH stop service                           h1                                isc-dhcp-server
    BASH stop service                           h2                                isc-dhcp-server
    BASH stop service                           h3                                isc-dhcp-server
    BASH kill process                           h1                              dhclient
    BASH kill process                           h2                              dhclient
    BASH kill process                           h3                              dhclient
    BASH kill process                           h4                              dhclient
    BASH kill process                           h5                              dhclient
    BASH kill process                           h6                              dhclient    
#    BASH delete tag                             h1                              bond0.1001              soft_error=${true}
#    BASH delete tag                             h2                              bond0.1002              soft_error=${true}
#    BASH delete tag                             h3                              bond0.1003              soft_error=${true}
#    BASH delete tag                             h4                              bond0.1004              soft_error=${true}
#    BASH delete tag                             h5                              bond0.1005              soft_error=${true}
#    BASH delete tag                             h6                              bond0.1006              soft_error=${true}
    # BASH init intf                              h1                              eth1
    # BASH init intf                              h1                              eth2
    # BASH init intf                              h1                              eth3
    # BASH init intf                              h2                              eth1
    # BASH init intf                              h2                              eth2
    # BASH init intf                              h2                              eth3
    # BASH init intf                              h3                              eth1
    # BASH init intf                              h3                              eth2
    # BASH init intf                              h3                              eth3
    # BASH init intf                              h4                              eth1
    # BASH init intf                              h4                              eth2
    # BASH init intf                              h4                              eth3
    # BASH init intf                              h5                              eth1
    # BASH init intf                              h5                              eth2
    # BASH init intf                              h5                              eth3
    # BASH init intf                              h6                              em2
    # BASH init intf                              h6                              p1p1
    # BASH init intf                              h6                              p1p2
    # BASH init intf                              h1                              bond0
    # BASH init intf                              h2                              bond0
    # BASH init intf                              h3                              bond0
    # BASH init intf                              h4                              bond0
    # BASH init intf                              h5                              bond0
    # BASH init intf                              h6                              bond0
    # BASH ifdown intf                            h1                              bond0
    # BASH ifdown intf                            h2                              bond0
    # BASH ifdown intf                            h3                              bond0
    # BASH ifdown intf                            h4                              bond0
    # BASH ifdown intf                            h5                              bond0
    # BASH ifdown intf                            h6                              bond0   
    # BASH release dhcpv4 address                 h1                              bond0
    # BASH release dhcpv4 address                 h2                              bond0
    # BASH release dhcpv4 address                 h3                              bond0
    # BASH release dhcpv4 address                 h4                              bond0
    # BASH release dhcpv4 address                 h5                              bond0
    # BASH release dhcpv4 address                 h6                              bond0
    # ${result} =                                 BASH run command                h1                     ifconfig
    # log                                         host1 ifconfig is ${result}
    # ${result} =                                 BASH run command                h2                     ifconfig
    # log                                         host2 ifconfig is ${result}
    # ${result} =                                 BASH run command                h3                     ifconfig
    # log                                         host3 ifconfig is ${result}
    # ${result} =                                 BASH run command                h4                     ifconfig
    # log                                         host4 ifconfig is ${result}
    # ${result} =                                 BASH run command                h5                     ifconfig
    # log                                         host5 ifconfig is ${result}
    # ${result} =                                 BASH run command                h6                     ifconfig
    # log                                         host6 ifconfig is ${result}
    # BASH stop service                           h1                              isc-dhcp-server    

test setup topology
    initialize host
    
    sleep                                           1
#    Start Floodlight Monitor 
    REST add tenant                                 X
    REST add tenant                                 Y
    REST add tenant                                 Z
    REST add tenant                                 system
    REST add vns                                    X                           X1
    REST add vns                                    X                           X2
    REST add vns                                    X                           X3
    REST add vns                                    Y                           Y1
    REST add vns                                    Y                           Y2
    REST add vns                                    Y                           Y3
    REST add vns                                    Z                           Z1
    REST add vns                                    Z                           Z2
    REST add vns                                    Z                           Z3
    REST add router intf                            X                           X1
    REST add router intf                            X                           X2
    REST add router intf                            X                           X3
    REST add router intf                            Y                           Y1
    REST add router intf                            Y                           Y2
    REST add router intf                            Y                           Y3
    REST add router intf                            Z                           Z1
    REST add router intf                            Z                           Z2
    REST add router intf                            Z                           Z3  
    REST add vns ip                                 X                           X1              10.251.1.1              24  
    REST add vns ip                                 X                           X2              10.251.2.1              24  
    REST add vns ip                                 X                           X3              10.251.3.1              24  
    REST add vns ip                                 Y                           Y1              10.252.1.1              24  
    REST add vns ip                                 Y                           Y2              10.252.2.1              24  
    REST add vns ip                                 Y                           Y3              10.252.3.1              24  
    REST add vns ip                                 Z                           Z1              10.253.1.1              24  
    REST add vns ip                                 Z                           Z2              10.253.2.1              24  
    REST add vns ip                                 Z                           Z3              10.253.3.1              24  
    REST add interface to portgroup                 ${leaf0_a}                  ${leaf0_pc1_intf1}                  ${leaf0_pc1}
    REST add interface to portgroup                 ${leaf0_b}                  ${leaf0_pc1_intf2}                  ${leaf0_pc1}
    REST add interface to portgroup                 ${leaf0_a}                  ${leaf0_pc2_intf1}                  ${leaf0_pc2}
    REST add interface to portgroup                 ${leaf0_b}                  ${leaf0_pc2_intf2}                  ${leaf0_pc2}
    REST add interface to portgroup                 ${leaf1_a}                  ${leaf1_pc1_intf1}                  ${leaf1_pc1}
    REST add interface to portgroup                 ${leaf1_b}                  ${leaf1_pc1_intf2}                  ${leaf1_pc1}
    REST add interface to portgroup                 ${leaf1_a}                  ${leaf1_pc2_intf1}                  ${leaf1_pc2}
    REST add interface to portgroup                 ${leaf1_b}                  ${leaf1_pc2_intf2}                  ${leaf1_pc2}
    REST add interface to portgroup                 ${leaf2_a}                  ${leaf2_pc1_intf1}                  ${leaf2_pc1}
    REST add interface to portgroup                 ${leaf2_b}                  ${leaf2_pc1_intf2}                  ${leaf2_pc1}
    REST add interface to portgroup                 ${leaf2_a}                  ${leaf2_pc2_intf1}                  ${leaf2_pc2}
    REST add interface to portgroup                 ${leaf2_b}                  ${leaf2_pc2_intf2}                  ${leaf2_pc2}    
    REST add tenant routers intf to system          X
    REST add tenant routers intf to system          Y
    REST add tenant routers intf to system          Z
    REST add system intf to tenant routers          X
    REST add system intf to tenant routers          Y
    REST add system intf to tenant routers          Z
#   REST add policy                                 X                           allow_all
#   REST add policy                                 Y                           allow_all
#   ${result} =                                     REST add policy item        X                   allow_all           10      permit          {"tenant-name": "X"}, "dst": {"tenant-name": "system"}
#   Should Be True                                  ${result}
#   ${result} =                                     REST add policy item        X                   allow_all           20      permit          {"tenant-name": "system"}, "dst": {"tenant-name": "X"}
#   Should Be True                                  ${result}
    REST add static routes                          X                           10.252.0.0/16        {"tenant": "system"}
    REST add static routes                          Y                           10.251.0.0/16        {"tenant": "system"}
        
    

test teardown topology
    delete traffic
    REST delete vns ip                              X                           X1              10.251.1.1              24  
    REST delete vns ip                              X                           X2              10.251.2.1              24  
    REST delete vns ip                              X                           X3              10.251.3.1              24  
    REST delete vns ip                              Y                           Y1              10.252.1.1              24  
    REST delete vns ip                              Y                           Y2              10.252.2.1              24  
    REST delete vns ip                              Y                           Y3              10.252.3.1              24  
    REST delete vns ip                              Z                           Z1              10.253.1.1              24  
    REST delete vns ip                              Z                           Z2              10.253.2.1              24  
    REST delete vns ip                              Z                           Z3              10.253.3.1              24  
    REST delete vns                                 X                           X1
    REST delete vns                                 X                           X2
    REST delete vns                                 X                           X3
    REST delete vns                                 Y                           Y1
    REST delete vns                                 Y                           Y2
    REST delete vns                                 Y                           Y3
    REST delete vns                                 Z                           Z1
    REST delete vns                                 Z                           Z2
    REST delete vns                                 Z                           Z3
    REST delete tenant                              X
    REST delete tenant                              Y
    REST delete tenant                              Z
    REST delete tenant routers intf to system       X
    REST delete tenant routers intf to system       Y
    REST delete tenant routers intf to system       Z
    initialize host
#    Stop Floodlight Monitor    
    BASH ifdown intf                                h3                          bond0
    BASH restart networking service                 h1                          timeout=60
    BASH restart networking service                 h3                          timeout=60
    BASH restart networking service                 h6                          timeout=60
    

T5 base suite setup
    base suite setup
    add fabric switch
    sleep                                           5
    ${result} =                                     CLI verify controller       s1                          c1      
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s1                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s2                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s2                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s3                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s3                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s4                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s4                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s5                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s5                          c2
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s6                          c1
    Should Be True                                  ${result}
    ${result} =                                     CLI verify controller       s6                          c2
    Should Be True                                  ${result}       
    REST add portgroup                              ${leaf0_pc1}
    REST add portgroup                              ${leaf0_pc2}
    REST add portgroup                              ${leaf1_pc1}
    REST add portgroup                              ${leaf1_pc2}
    REST add portgroup                              ${leaf2_pc1}
    REST add portgroup                              ${leaf2_pc2}
    REST add portgroup lacp                         ${leaf0_pc1}
    REST add portgroup lacp                         ${leaf0_pc2}
    REST add portgroup lacp                         ${leaf1_pc1}
    REST add portgroup lacp                         ${leaf1_pc2}
    REST add portgroup lacp                         ${leaf2_pc1}
    REST add portgroup lacp                         ${leaf2_pc2}

  
T5 base suite teardown
    REST delete portgroup                               ${leaf0_pc1}
    REST delete portgroup                               ${leaf0_pc2}
    REST delete portgroup                               ${leaf1_pc1}
    REST delete portgroup                               ${leaf1_pc2}
    REST delete portgroup                               ${leaf2_pc1}
    REST delete portgroup                               ${leaf2_pc2}
    delete fabric switch  



verify results   [Arguments]  ${transmitted_frames}  ${received_valid_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report}=  fetch port stats  stream=${stream}  
    ${tx_value}=  verify dict key  ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${stream_name}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value} 
    Log         ${in_range}
    Should be true  ${in_range} 
    
calculate loss   [Arguments]  ${transmitted_frames}  ${received_valid_frames}  ${stream}  ${stream_name}
    Sleep  5
    ${report} =     fetch port stats    stream=${stream}  
    ${tx_value} =   verify dict key     ${report}  ${stream_name}  ${transmitted_frames}
    ${rx_value} =   verify dict key     ${report}  ${stream_name}  ${received_valid_frames}
    ${loss} =       evaluate            ${tx_value} - ${rx_value}
    Log             ${loss}
    
verify traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log     ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    ixia verify traffic rate  ${tx_value}  ${rx_value} 

log traffic rate   [Arguments]  ${tx_rate}  ${rx_rate}  ${tx_intf}  ${rx_intf}
    Sleep  5
    ${report}=  fetch port stats
    Log     ${report}
    ${tx_value}=  verify dict key  ${report}  ${tx_intf}  transmitted_frame_rate
    ${rx_value}=  verify dict key  ${report}  ${rx_intf}  received_valid_frame_rate
    Log     ${tx_value}
    Log     ${rx_value} 
 
    