* Settings
Documentation    T5 Test Suite
Suite Setup      BPDU Guard suite setup
Suite Teardown   base suite teardown
Test Setup       BPDU Guard test setup 
Test Teardown    BPDU Guard test teardown 
Force Tags       IronHorse   T5
Library          keywords/BsnCommon.py
Library          keywords/Controller.py
Library			 keywords/Mininet.py
Library		     keywords/Host.py
Library		     keywords/Ixia.py
Library	         keywords/T5.py
Library          keywords/T5L3.py
Library	         keywords/T5Platform.py
Library	         keywords/Controller.py
Library	         keywords/SwitchLight.py


* Variable
 
${short}  3
${medium}  5
${long}   30
${verylong}    120 
${arista_sw}    s100
${arista_intf}    ethernet17
${sw}             leaf2-a
${intf}           ethernet17

  


* Test Case
 

T1.1 BPDU guard rstp untagged	 
	verify switch interface is up    ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	port recover from bpdu down state		${sw}   ${intf}		
	[Tags] 	sanity  feature  bpdu_guard      

T1.2 BPDU guard recovery: config interface shut no shut in in controller	 
 	log   covered in T1.1
	[Tags] 	sanity  feature  bpdu_guard     

T1.3 BPDU guard recovery: config interface shut no shut in switch	 
 	 
 	verify switch interface is up   ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	config   s100	  no spanning-tree vlan 100 

	cli_disable_interface   ${sw}      		${intf}
	cli_enable_interface    ${sw}      		${intf}
	sleep  ${short}
	Wait Until Keyword Succeeds  	60 sec  5 sec   verify switch interface is up    ${sw}   ${intf} 
  	 
	[Tags]  full  feature   bpdu_guard    skipped 


T1.4 BPDU guard recovery: deleting interface in controller	 
	
	verify switch interface is up     ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	 ${sw}   ${intf}
 	config   s100	  no spanning-tree vlan 100 	
	rest_disable_fabric_interface	         ${sw}   ${intf}
	rest_delete_fabric_interface        ${sw}   ${intf} 
	sleep  ${short}
	
	Wait Until Keyword Succeeds  	60 sec  5 sec   verify switch interface is up    ${sw}   ${intf} 
 
   	
	[Tags] 	full  feature   bpdu_guard    
	

T2.1 BPDU guard rstp tagged
	arista setup trunk vlan 100	
	verify switch interface is up    ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	port recover from bpdu down state		${sw}   ${intf}		
	[Tags] 	sanity  feature  bpdu_guard     
	 

T2.2 BPDU guard mstp
	arista setup mstp	
 	verify switch interface is up    ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	port recover from bpdu down state		${sw}   ${intf}		
	[Tags] 	sanity  feature  bpdu_guard     
	 
T2.3 BPDU guard rapid-pvst with not matched vlan negative
	arista setup rapid-pvst	
 	verify switch interface is up    ${sw}   ${intf} 	
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	Wait Until Keyword Succeeds  	60 sec  	5 sec   verify switch interface is up    ${sw}   ${intf} 

	
	[Tags] 	sanity  negative  bpdu_guard       

T3.1 BPDU guard with interface configure in vns mismatch vlan
	rest_add_tenant  BPDU
 	rest_add_vns     BPDU  V10  
 	rest_add_interface_to_vns     BPDU     V10     ${sw}   ${intf}   10
	sleep  ${short}
	cli_show_running_tenant	   
 		
	arista setup mstp	
 	verify switch interface is up    ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	
	port recover from bpdu down state		${sw}   ${intf}
	
	[Tags]  full 	feature   bpdu_guard    
	 
T3.2 BPDU guard with interface configure in vns match vlan
	rest_add_tenant  BPDU
 	rest_add_vns     BPDU  V10  
 	rest_add_interface_to_vns     BPDU     V10     ${sw}   ${intf}   100
	sleep  ${short}
	cli_show_running_tenant	   
 		
	arista setup mstp	
 	verify switch interface is up    ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	port recover from bpdu down state		${sw}   ${intf}	
	
	[Tags] 	full  feature   bpdu_guard    

T3.3 BPDU guard rapid-pvst with matched vlan
	arista setup rapid-pvst	
 	verify switch interface is up    ${sw}   ${intf}
	rest_add_tenant  BPDU
 	rest_add_vns     BPDU  V100
 	rest_add_interface_to_vns     BPDU     V100     ${sw}   ${intf}   100
  	
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	port recover from bpdu down state		${sw}   ${intf}		
	
	[Tags] 	full  feature   bpdu_guard     

	 
T3.4 BPDU guard with interface configure in vns port group
	rest_add_tenant  BPDU
 	rest_add_vns     BPDU  V10  
	rest_add_portgroup 	p-BPDU
	rest_add_interface_to_portgroup	  ${sw}    ${intf}     	p-BPDU 
	rest_add_portgroup_to_vns 	      BPDU  V10   p-BPDU   100
 	sleep  ${short}
	cli_show_running_tenant	    		
	arista setup mstp	
 	verify switch interface is up     ${sw}   ${intf}
 	config   s100	  spanning-tree vlan 100    	
 	sleep  ${short}
	verify switch interface is BPDU down	${sw}   ${intf}
	port recover from bpdu down state		${sw}   ${intf}		
	[Tags] 	full  feature   bpdu_guard    
	 
    

* Keywords


# bpdu guard 

BPDU Guard suite setup
 	base suite setup 
	arista setup access vlan 100	
	set fabric switches 	
	rest_delete_portgroup_all 
	rest_delete_tenant_all
	sleep   ${long}	
	Wait Until Keyword Succeeds   10 min  30 sec   Verify all switches connected back 
		
 
BPDU Guard test setup
 	config   s100	   no spanning-tree vlan 100
 	${result}=  rest_verify_fabric_interface_BPDU_Down   ${sw}   ${intf} 
 	log  result is ${result}
 	Run Keyword if    ${result}    Flap interface   ${sw}   ${intf}   	  
	base test setup	
	
BPDU Guard test teardown  
 	config   s100	   no spanning-tree vlan 100 	
	Run Keyword If Test Failed     Reboot switches and wait till come back 	 	
 	${result}=  rest_verify_fabric_interface_BPDU_Down   ${sw}   ${intf} 
 	log  result is ${result}
 	Run Keyword if    ${result}    Flap interface   ${sw}   ${intf}  	
	Wait Until Keyword Succeeds   	1 min  5 sec  verify switch interface is up    ${sw}   ${intf}	  	 	 
    base test teardown 

Reboot switches and wait till come back  
	cli_controller_reboot_switch    
	sleep   ${long}	
	Wait Until Keyword Succeeds  	10 min 	30 sec   Verify all switches connected back 

set fabric switches  
 	${switches}=  get_all_switch_nodes  
	log   switches are ${switches}
 	: FOR    ${sw}   IN   @{switches}   
	\   ${alias}=   get_node_alias   ${sw} 	
	\	Run Keyword If	'arista' in '${alias}'	Continue For Loop
	\   ${mac}  params  node=${sw}  key=mac
	\   ${dpid}=  	Set Variable 	 00:00:${mac}             
  	\   Run Keyword if   'spine' in '${alias}' 	   add fabric switch spine    ${alias}     ${dpid}
  	\   sleep    1
  	\ 	Run Keyword if   'spine' in '${alias}'     rest_verify_fabric_switch_role    ${dpid}   spine
    \   Run Keyword if   'leaf' in '${alias}' 	   add fabric switch leaf     ${alias}     ${dpid}   rack${alias[4]}
    \   sleep    1 
    \   Run Keyword if   'leaf' in '${alias}' 	   rest_verify_fabric_switch_role    ${dpid}   leaf

add fabric switch spine   [Arguments]   ${node}   ${dpid}  
	rest add switch               ${node}
	rest add dpid                 ${node}          ${dpid}  
	rest add fabric role          ${node}          spine

add fabric switch leaf   [Arguments]   ${node}   ${dpid}   ${leafg}     
	rest add switch               ${node}
	rest add dpid                 ${node}         ${dpid} 
	rest add fabric role          ${node}         leaf
	rest_add_leaf_group           ${node}         ${leafg} 
 
Verify all switches connected back
 	${switches}=  rest_get_disconnect_switch
	log   the disconnected switches are ${switches}  	
	Should Be Empty   ${switches}	

    
arista setup trunk vlan 100		
 	config   ${arista_sw}	   no spanning-tree vlan 100       
  	config   ${arista_sw}	   interface ${arista_intf} 
  	config   ${arista_sw}	   no switchport mode access   	 
 	config   ${arista_sw}	   no switchport access vlan 100
 	config   ${arista_sw}      switchport mode trunk
 	config   ${arista_sw}      switchport trunk allowed vlan 100
 	config   ${arista_sw}      no shutdown 	
 	config   ${arista_sw}	   exit  	

arista setup access vlan 100		
	log  config vlan
    config   ${arista_sw}      vlan 100
  	config   ${arista_sw}	   name BPDU    
	config   ${arista_sw}      spanning-tree mode none 	  	
 	config   ${arista_sw}	   no spanning-tree vlan 100  
	config   ${arista_sw}      spanning-tree mode rstp 	 	
  	config   ${arista_sw}	   interface ${arista_intf} 
  	config   ${arista_sw}	   no switchport trunk allowed vlan 100
    config   ${arista_sw}	   no switchport mode trunk
  	config   ${arista_sw}	   switchport mode access   	 
 	config   ${arista_sw}	   switchport access vlan 100
  	config   ${arista_sw}      no shutdown 		
 	config   ${arista_sw}	   exit  	

arista setup rstp			 
    config   ${arista_sw}      spanning-tree mode rstp

arista setup mstp			 
    config   ${arista_sw}      spanning-tree mode mstp

arista setup rapid-pvst			 
    config   ${arista_sw}      spanning-tree mode rapid-pvst

arista setup none stp			 
    config   ${arista_sw}      spanning-tree mode none
  	    

Flap interface  	[Arguments]   ${switch}   ${intf}  
	rest_disable_fabric_interface	    ${switch}   ${intf} 
	rest_enable_fabric_interface        ${switch}   ${intf} 


verify switch interface is up	[Arguments]  ${switch}   ${intf}  
	${info}=  rest_get_fabric_interface_info   ${switch}  ${intf}
	Should Be Equal as Strings 		up      ${info['state']}

verify switch interface is BPDU down	[Arguments]  ${switch}   ${intf}  
	${result}=  rest_verify_fabric_interface_BPDU_Down     ${switch}   ${intf} 
	Should be True     ${result}    
	 	
port recover from bpdu down state 	[Arguments]  ${switch}   ${intf}  
 	config   s100	  no spanning-tree vlan 100 	
	rest_disable_fabric_interface		${switch}   ${intf}  
	rest_enable_fabric_interface       ${switch}   ${intf} 
	sleep  ${short}
	Wait Until Keyword Succeeds  	60 sec	5 sec   verify switch interface is up    ${sw}   ${intf} 
	
	
	 
 