== T5 Platform HA - Robustness Test Suite - Physical Test Bed ==

* Setting
Documentation    T5 Controller Platform Robustness Test Suite - Physical Testbed
Suite Setup      T5 base suite setup
#Suite Teardown   T5 base suite teardown
Test Setup       T5 Platform test setup
Test Teardown    T5 Platform test teardown
Force Tags       T5  IronHorse  robustness
Library          keywords/BsnCommon.py
Library          keywords/Mininet.py
Library	    	 keywords/Host.py
Library          keywords/T5.py
Library	         keywords/T5L3.py
Library	         keywords/T5Platform.py
Library	         keywords/T5Utilities.py
Resource		 testsuites_dev/don/physical_variables.txt


* Variables
@{spineList}  00:00:04:00:01:00:00:01  00:00:04:00:01:00:00:02
@{leafList}  00:00:04:00:02:00:00:01  00:00:04:00:02:00:00:02  00:00:04:00:02:00:00:03  00:00:04:00:02:00:00:04  00:00:04:00:02:00:00:05  00:00:04:00:02:00:00:06


@{vnsIntIPDict}  v1  10.10.10.100  v2  20.20.20.100  v3  30.30.30.100  v4  40.40.40.100  v5 50.50.50.100  v6 60.60.60.100
@{v1MemberPGList}   v1  PG   p1  10
@{v1MemberIntList}  v1  INT  leaf0-a  ethernet33  -1  leaf1-a  ethernet33  -1
@{v2MemberPGList}   v2  PG   p2  20  p4  20
@{v2MemberIntList}  v2  INT  leaf0-a  ethernet34  -1  leaf1-a  ethernet34  -1
@{v3MemberPGList}   v3  PG   p5  30  p6  40
@{v3MemberIntList}  v3  INT  leaf0-b  ethernet35  -1

* Test Case 

Configure 6/1 Setup - 6 Tenants with 1 VNS Each
   [Tags]   manual-untested
   Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology
   ${vnsIntIPs}=  Create List  v1  10.10.10.100  v2  20.20.20.100  v3  30.30.30.100  v4  40.40.40.100  v5  50.50.50.100  v6  60.60.60.100
   ${v1MemPGs}=  Create List  v1  PG  p1  10
   ${v2MemPGs}=  Create List  v2  PG  p2  20
   ${v3MemPGs}=  Create List  v3  PG  p3  30
   ${v4MemPGs}=  Create List  v4  PG  p4  40
   ${v5MemPGs}=  Create List  v5  PG  p5  50
   ${v6MemPGs}=  Create List  v6  PG  p6  60
   auto configure tenants	 6  1   ${vnsIntIPs}  ${v1MemPGs}  ${v2MemPGs}  ${v3MemPGs}  ${v4MemPGs}  ${v5MemPGs}  ${v6MemPGs}  
   
   
Configure Hosts for 6/1 Setup
	[Tags]   skipped
	bash network restart  h1
	bash add tag  h1  bond0  10 
	bash add ip address  h1  10.10.10.51/24  bond0.10
	bash ifup intf  h1  bond0.10
	bash add route  h1  20.20.20.0/24  10.10.10.100  bond0.10
	bash add route  h1  30.30.30.0/24  10.10.10.100  bond0.10
	bash add route  h1  40.40.40.0/24  10.10.10.100  bond0.10
	bash add route  h1  50.50.50.0/24  10.10.10.100  bond0.10

	bash network restart  h2
	bash add tag  h2  bond0  20 
	bash add ip address  h2  20.20.20.52/24  bond0.20
	bash ifup intf  h2  bond0.20
	bash add route  h2  10.10.10.0/24  20.20.20.100  bond0.20
	bash add route  h2  30.30.30.0/24  20.20.20.100  bond0.20
	bash add route  h2  40.40.40.0/24  20.20.20.100  bond0.20
	bash add route  h2  50.50.50.0/24  20.20.20.100  bond0.20

	bash network restart  h3
	bash add tag  h3  bond0  30 
	bash add ip address  h3  30.30.30.53/24  bond0.30
	bash ifup intf  h3  bond0.30
	bash add route  h3  10.10.10.0/24  30.30.30.100  bond0.30
	bash add route  h3  20.20.20.0/24  30.30.30.100  bond0.30
	bash add route  h3  40.40.40.0/24  30.30.30.100  bond0.30
	bash add route  h3  50.50.50.0/24  30.30.30.100  bond0.30

	bash network restart  h4
	bash add tag  h4  bond0  40 
	bash add ip address  h4  40.40.40.54/24  bond0.40
	bash ifup intf  h4  bond0.40
	bash add route  h4  10.10.10.0/24  40.40.40.100  bond0.40
	bash add route  h4  20.20.20.0/24  40.40.40.100  bond0.40
	bash add route  h4  30.30.30.0/24  40.40.40.100  bond0.40
	bash add route  h4  50.50.50.0/24  40.40.40.100  bond0.40
	
	bash network restart  h5
	bash add tag  h5  bond0  50 
	bash add ip address  h5  50.50.50.55/24  bond0.50
	bash ifup intf  h5  bond0.50
	bash add route  h5  10.10.10.0/24  50.50.50.100  bond0.50
	bash add route  h5  20.20.20.0/24  50.50.50.100  bond0.50
	bash add route  h5  30.30.30.0/24  50.50.50.100  bond0.50
	bash add route  h5  40.40.40.0/24  50.50.50.100  bond0.50
	

	#vconfig add bond0 10
	#ifconfig bond0.10 10.10.10.52 netmask 255.255.255.0 up
	#route add -net 20.20.20.0/24 gw 10.10.10.100 dev bond0.10

Configure Multiple L2 Tenants With Single VNS
	[Tags]	skipped
	Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology
	Configure 2 Tenants with Different VLAN properties
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
	

T1 Fabric Robustness During All Switch Reboot & HA Failover
	[Tags]  skipped 
	${returnVal}=	verify HA with disruption	switchReboot	during	failover  		switch=spine0 spine1
	Should be true  ${returnVal}


T2 Fabric Robustness During All Switch Reboot & Active Controller Reboot
	[Tags]  skipped 
	${returnVal}=	verify HA with disruption	switchReboot	during	activeReboot   switch=spine0 spine1 leaf0-a leaf0-b leaf1-a leaf1-b leaf2-a leaf2-b
	Should be true  ${returnVal}
	
T3 Fabric Robustness During All Switch Reboot & Standby Controller Reboot
	[Tags]  skipped 
	${returnVal}=	verify HA with disruption	switchReboot	during	standbyReboot	switch=spine0 leaf0-a leaf0-b leaf1-a
	Should be true  ${returnVal}

Verify HA Cluster Formation
   [Tags]  skipped
   Verify the cluster formation 
   
Verify Cluster Election Take-Leader
	[Tags]  skipped
	Verify cluster election take leader
	
Verify Cluster Election Re-run
	[Tags]  skipped  
	Verify cluster election rerun 
	
Verify Cluster Master Reboot
	[Tags]  skipped
	Reboot the master node & verify fabric integrity
	
Verify Cluster Slave Reboot
	[Tags]  skipped
	Reboot the Slave node & verify fabric integrity


Master Failover/Failback & Verify Connectivity
   [Tags]  skipped  
   Failover/Failback by rebooting the master and verify connectivity
   
Slave Failover/Failback & Verify Connectivity
   [Tags]  skipped 
   Failover/Failback by rebooting the slave and verify connectivity

Cluster Election Take-Leader & Verify Connectivity
   [Tags]  skipped    
   # To be: This test case only checks the take-leader in slave.
   # 			Need to implement this in the master
   Failover/Failback by issuing take-leader in master & verify connectivity

Reboot Peer Leaf Switch During Failover & Verify Connectivity
	[Tags]  skipped  
	
	Reboot the master node & verify fabric integrity

Stress Configure & Delete Multiple L3 Tenants With Single VNS & Failover
	[Tags]  skipped
	: FOR    ${Iteration}    IN RANGE    1    26
	\	Log To Console   \n================ Configure & Delete L3 Tenants & Failover - Iteration ${Iteration} ===============\n
	\	rest delete tenant  autoT1
    \	rest delete tenant  autoT2
   	\	auto delete fabric switch  ${spineList}  ${leafList}  2
    \	auto delete fabric portgroups
    \	sleep  60
	\	Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Regression Topology 
	\	Configure 2 Tenants with Different VLAN properties
	\	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Regression Topology 
	\	Reboot the master node & verify fabric integrity
	\	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Regression Topology    


Master Reboot Stress Test For 200 Times
   [Tags]  skipped 
   Stress Failover/Failback by rebooting the master and verify connectivity
   Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   
Master System Failover Stress Test For 250 Times
   [Tags]  skipped 
   #Stress Failover/Failback by rebooting the master and verify connectivity
   Stress Failover/Failback by failing over the master and verify connectivity
   Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   
Slave Failover/Failback Stress Test For 25 Times
   [Tags]  skipped
   Stress Failover/Failback by rebooting the slave and verify connectivity
   Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 

Cluster Election Take-Leader Stress Test For 25 Times
   [Tags]  skipped  
   # To be: This test case only checks the take-leader in slave.
   # 			Need to implement this in the master
   Failover/Failback by issuing take-leader in master & verify connectivity

Cluster Election Re-run Stress Test For 25 Times
   [Tags]  skipped  
   # To be: Make sure to do it on both master & slave when the commands
   #		are finalized
   Re-run the election and verify connectivity
   

###########################################################################################
# Stub test cases for the Robustnesss Test Suite
###########################################################################################

Consecutive connect/disconnect of switches 
	[Tags]  manual
	manual passed
	
Consecutive Power off controller
	[Tags]  manual  jira-BSC-5972
	manual failed
	
Changing leaf groups
	[Tags]  manual-untested
	manual untested
	
Headless mode verifications
	[Tags]  manual  bsc-5972
	manual failed 

Disconnect peer leaf switch lag links
	[Tags]  manual-untested
	manual untested
	
Reboot peer leaf switches. 
	[Tags]  manual-untested
	manual untested
	
Add links / New traffic paths
	[Tags]  manual-untested
	manual untested
	
Remove links
	[Tags]  manual-untested
	manual untested
	
Bring back the controller. Verify the fabric integrity
	[Tags]  manual
	manual passed

Packet of death: Consecutive pacekt of death 
	[Tags]  manual-untested
	manual untested

Split Brian Scenarios
	[Tags]  manual-untested
	manual untested
	
Changing VIP/IP /Cluster properties of the Controller cluster
	[Tags]    manual-untested
	manual untested
	
Traffic prioritization on the switch cpu to-controller traffic 
	[Tags]    manual-untested
	manual untested
	
Remove stdby controller & add another stdby controller with the same IP as earlier one
	[Tags]    manual-untested
	manual untested
	
Large VFT push during switch reboots 
	[Tags]     manual-untested
	manual untested
	
Enable log levels to Debug along with all the switch logs punting to the controller and controller push it to an external splunk server 
	[Tags]    manual-untested
	manual untested
	
Controller tries to program and switch disconnects and connects again
	[Tags]    manual-untested
	manual untested
	
Penetration test
	[Tags]    manual-untested
	manual untested

Reboot Management switch
	[Tags]    manual-untested
	manual untested
	
Interface Disable/Enable - Perhaps in a loop
	[Tags]    manual-untested
	manual untested
	
Bond/LAG configuration/ De-configuration
	[Tags]    manual-untested
	manual untested

Platform Switch: Add/Remove rack lag links
	[Tags]    manual-untested
	manual untested
	
Interface shutdowns / bringup
	[Tags]    manual-untested
	manual untested
	
Power down/up switch
	[Tags]    manual-untested
	manual untested
	
Performance during VFT push from the controller
	[Tags]    manual-untested
	manual untested

Add/Remove peer lags
	[Tags]    manual-untested
	manual untested
	
Consecutive reboot of peer leaf (dual-tor context)
	[Tags]    manual-untested
	manual untested

Consecutive reboots of spines
	[Tags]    manual-untested
	manual untested
	
Consecutive reboots of leaves
	[Tags]    manual-untested
	manual untested

Traffic convergence during island forming
	[Tags]    manual-untested
	manual untested

Configuration in SPINE
	[Tags]    manual-untested
	manual untested
	
Table Size Spine / Leaf - What happens when tables are full
	[Tags]    manual-untested
	manual untested

Switch go Full in Loggins
	[Tags]    manual-untested
	manual untested
	
Optics Pull/ Cable
	[Tags]    manual-untested
	manual untested

Switch - Open Ports - Penetration test
	[Tags]    manual-untested
	manual untested
	
Controller- Bundle Image
	[Tags]    manual-untested
	manual untested
	
Power supplies - DC /AC Mix match
	[Tags]    manual-untested
	manual untested
	
Order of Bring up- All links - Peer LAg and then management
	[Tags]    manual-untested
	manual untested
	
OFAD Packets - Malformed Packet
	[Tags]    manual-untested
	manual untested
	
OSPF/ BGP / PAcket-IN to controller
	[Tags]    manual-untested
	manual untested
	
IP header malformation
	[Tags]    manual-untested
	manual untested

Check recovery user account behavior when floodlight is busy
	[Tags]  manual  jira-BSC-5097
	manual failed


########################################################################################################################################

* Keywords      

Verify the cluster formation 

	${returnVal}=  rest verify show cluster
	Should Be True  ${returnVal}

Verify cluster election take leader

	${returnVal}=  rest verify cluster election take leader
	Should Be True  ${returnVal}
	

Verify cluster election rerun 

	${returnVal}=  rest verify cluster election rerun
	Should Be True  ${returnVal}
	

Reboot the master node & verify fabric integrity

	${returnVal}=  cli verify cluster master reboot
	Should Be True  ${returnVal}
	
	
Reboot the Slave node & verify fabric integrity

	${returnVal}=  cli verify cluster slave reboot
	Should Be True  ${returnVal}
	
	
Failover/Failback by rebooting the master and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Rebooting Master - Iteration ${Iteration} ===============\n
   \	${returnVal}=  cli verify cluster master reboot
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Regression Topology 
   

Failover/Failback by rebooting the slave and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Rebooting Slave - Iteration ${Iteration} ===============\n
   \	${returnVal}=	cli verify cluster slave reboot
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Regression Topology 
   

Failover/Failback by issuing take-leader in master & verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Election-Take-Leader - Iteration ${Iteration} ===============\n
   \	${returnVal}=  rest verify cluster election take leader
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Regression Topology 

Re-run the election and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Election-Rerun - Iteration ${Iteration} ===============\n
   \	${returnVal}=	rest verify cluster election rerun
   \	Should Be True  ${returnVal}
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Regression Topology 
   

* Keywords      

Stress Failover/Failback by rebooting the master and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    200
   \	Log To Console   \n================ Rebooting Master - Iteration ${Iteration} ===============\n
   \	cli verify cluster master reboot

Stress Failover/Failback by failing over the master and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    250
   \	Log To Console   \n================ Failing Over Master - Iteration ${Iteration} ===============\n
   \	cli cluster take leader

Stress Failover/Failback by rebooting the slave and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    26
   \	Log To Console   \n================ Rebooting Slave - Iteration ${Iteration} ===============\n
   \	cli verify cluster slave reboot


Stress Failover/Failback by issuing take-leader in master & verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    26
   \	Log To Console   \n================ Election-Take-Leader - Iteration ${Iteration} ===============\n
   \	rest verify cluster election take leader
   \	platform ping all

Stress Re-run the election and verify connectivity
   : FOR    ${Iteration}    IN RANGE    1    26
   \	Log To Console   \n================ Election-Rerun - Iteration ${Iteration} ===============\n
   \	rest verify cluster election rerun
   \	platform ping all


Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology 

   auto configure fabric switch  ${spineList}  ${leafList}  2
   sleep  30
   Set Test Variable  ${h1_intf0}  ethernet17
   Set Test Variable  ${h1_intf1}  ethernet17
   Set Test Variable  ${h2_intf0}  ethernet19
   Set Test Variable  ${h2_intf1}  ethernet19
   Set Test Variable  ${h3_intf0}  ethernet21
   Set Test Variable  ${h3_intf1}  ethernet21
   Set Test Variable  ${h4_intf0}  ethernet17
   Set Test Variable  ${h4_intf1}  ethernet18
   Set Test Variable  ${h5_intf0}  ethernet19
   Set Test Variable  ${h5_intf1}  ethernet20
   Set Test Variable  ${h6_intf0}  ethernet21
   Set Test Variable  ${h6_intf1}  ethernet22
   
   
   rest add portgroup  p1
   rest add interface to portgroup  leaf0-a  ${h1_intf0}  p1
   rest add interface to portgroup  leaf0-b  ${h1_intf1}  p1
   rest add portgroup lacp  p1
   rest add portgroup  p2
   rest add interface to portgroup  leaf0-a  ${h2_intf0}  p2
   rest add interface to portgroup  leaf0-b  ${h2_intf1}  p2
   rest add portgroup lacp  p2
   rest add portgroup  p3
   rest add interface to portgroup  leaf0-a  ${h3_intf0}  p3
   rest add interface to portgroup  leaf0-b  ${h3_intf1}  p3
   rest add portgroup lacp  p3
   rest add portgroup  p4
   rest add interface to portgroup  leaf1-a  ${h4_intf0}  p4
   rest add interface to portgroup  leaf1-a  ${h4_intf1}  p4
   rest add portgroup lacp  p4
   rest add portgroup  p5
   rest add interface to portgroup  leaf1-a  ${h5_intf0}  p5
   rest add interface to portgroup  leaf1-a  ${h5_intf1}  p5
   rest add portgroup lacp  p5
   rest add portgroup  p6
   rest add interface to portgroup  leaf1-a  ${h6_intf0}  p6
   rest add interface to portgroup  leaf1-a  ${h6_intf1}  p6
   rest add portgroup lacp  p6
   sleep  10


Configure 2 Tenants with Different VLAN properties
   
   Set Test Variable  ${subMask}  24
   Set Test Variable  ${vns1ip}  10.10.10.100
   Set Test Variable  ${vns2ip}  20.20.20.100

   rest add tenant  autoT1
   rest add vns  autoT1  v1
   rest add portgroup to vns  autoT1  v1  p1  10
   rest add portgroup to vns  autoT1  v1  p2  10
   rest add portgroup to vns  autoT1  v1  p3  10
   rest add router intf  autoT1  v1
   rest add vns ip  autoT1  v1  ${vns1ip}  ${subMask}
   
   rest add vns  autoT1  v2
   rest add portgroup to vns  autoT1  v2  p4  20
   rest add portgroup to vns  autoT1  v2  p5  20
   rest add portgroup to vns  autoT1  v2  p6  20
   rest add router intf  autoT1  v2
   rest add vns ip  autoT1  v2  ${vns2ip}  ${subMask}
   
   rest add tenant  autoT2
   rest add vns  autoT2  v3
   rest add interface to vns  autoT2  v3  leaf0-a  ethernet33  -1
   rest add interface to vns  autoT2  v3  leaf0-a  ethernet34  -1
   rest add interface to vns  autoT2  v3  leaf0-a  ethernet35  -1
   rest add interface to vns  autoT2  v3  leaf1-a  ethernet33  -1
   rest add interface to vns  autoT2  v3  leaf1-a  ethernet34  -1
   rest add interface to vns  autoT2  v3  leaf1-a  ethernet35  -1

   sleep  30
      

Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   
   ${returnVal}=  platform bash ping  h1  ${h2_tag_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h1  ${h3_tag_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h2  ${h3_tag_ip}
   Should Be True  ${returnVal}  

   ###	Verify L2 ping between autoT1-v2
   ${returnVal}=  platform bash ping  h4  ${h5_tag_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h4  ${h6_tag_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h5  ${h6_tag_ip}
   Should Be True  ${returnVal}   
   
   ###	Verify ping between autoT2 			
   ${returnVal}=  platform bash ping  h1  ${h3_single_ip}
   Should Be True  ${returnVal}   
   ${returnVal}=  platform bash ping  h1  ${h5_single_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h3  ${h5_single_ip}



T5 Platform test setup
	start floodlight monitor

T5 Platform test teardown 
	stop floodlight monitor
	
T5 base suite setup
	base suite setup
	
T5 base suite teardown   
   rest delete tenant  autoT1
   rest delete tenant  autoT2
   auto delete fabric switch  ${spineList}  ${leafList}  2
   auto delete fabric portgroups
   base suite teardown
   

   
   
   
