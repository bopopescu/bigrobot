
== T5 Platform Test Suite ==

* Setting
Documentation    T5 Controller Platform Test Suite - L3
Suite Setup      base suite setup
Suite Teardown   base suite teardown
Test Setup       T5 Platform test setup
Test Teardown    T5 Platform test teardown
Force Tags       Platform  HA  L3
Library          keywords/BsnCommon.py
Library          keywords/Mininet.py
Library          keywords/T5.py
Library	         keywords/T5L3.py
Library	         keywords/T5Platform.py
Library	         keywords/T5Utilities.py



* Variables
@{spineList}  00:00:00:00:00:01:00:01  00:00:00:00:00:01:00:02
@{leafList}  00:00:00:00:00:02:00:01  00:00:00:00:00:02:00:02  00:00:00:00:00:02:00:03  00:00:00:00:00:02:00:04  00:00:00:00:00:02:00:05  00:00:00:00:00:02:00:06


* Test Case 

Single Tenant Multiple VNS HA Test
	[Tags]	sanity  feature
	mininet start    node=mn1    new_topology=--num-spine 2 --num-rack 3 --num-bare-metal 2 --num-hypervisor 0 --dual-tor
	Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Mininet
	Configure 1 Tenant with Multiple VNSs & Gateway Interfaces
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Setup
	Reboot the master node & verify fabric integrity
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Setup
	
	
Verify HA Cluster Formation
   [Tags]  feature
   Verify the cluster formation 
   
 Verify Cluster Election Take-Leader
	[Tags]  feature  
	Verify cluster election take leader
	
Verify Cluster Election Re-run
	[Tags]  feature  
	Verify cluster election rerun 
	
Verify Cluster Master Reboot
	[Tags]  feature
	Reboot the master node & verify fabric integrity
	
Verify Cluster Slave Reboot
	[Tags]  feature
	Reboot the Slave node & verify fabric integrity
 

Two Tenants With Multiple VNS HA Test
	[Tags]	feature
	mininet stop
	sleep  30
	mininet start    node=mn1    new_topology=--num-spine 2 --num-rack 3 --num-bare-metal 4 --num-hypervisor 0 --dual-tor
	Configure 3-Rack/Dual-Leaf/2-Spine/4-Host Setup For Mininet 
	Configure 2 Tenants with Multiple VNSs & Gateway Interfaces
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup
	Reboot the master node & verify fabric integrity
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup
	
	
Master Failover/Failback & Verify Connectivity
   [Tags]  feature
   Failover/Failback by rebooting the master and verify connectivity
   
Slave Failover/Failback & Verify Connectivity
   [Tags]  feature 
   Failover/Failback by rebooting the slave and verify connectivity

Cluster Election Take-Leader & Verify Connectivity
   [Tags]  feature  
   # To be: This test case only checks the take-leader in slave.
   # 			Need to implement this in the master
   Failover/Failback by issuing take-leader in master & verify connectivity

Cluster Election Re-run & Verify Connectivity
   [Tags]  feature   
   # To be: Make sure to do it on both master & slave when the commands
   #		are finalized
   Re-run the election and verify connectivity

Delete Switches
   [Tags]	clean
   rest delete tenant  autoT1
   rest delete tenant  autoT2
   rest delete tenant  system
   auto delete fabric switch  ${spineList}  ${leafList}  2
   auto delete fabric portgroups



########################################################################################################################################

* Keywords      
T5 base test setup
   base test setup
      
T5 base test teardown
   mininet stop
   rest delete tenant  autoT1
   rest delete tenant  autoT2
   auto delete fabric switch  ${spineList}  ${leafList}  2
   auto delete fabric portgroups
   base test teardown


Verify the cluster formation 

	${returnVal}=  rest verify show cluster
	Should Be True  ${returnVal}

Verify cluster election take leader

	${returnVal}=  rest verify cluster election take leader
	Should Be True  ${returnVal}
	

Verify cluster election rerun 

	${returnVal}=  rest verify cluster election rerun
	Should Be True  ${returnVal}
		
	
Reboot the Slave node & verify fabric integrity

	${returnVal}=  cli verify cluster slave reboot
	Should Be True  ${returnVal}
	

Failover/Failback by rebooting the master and verify connectivity

   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Rebooting Master - Iteration ${Iteration} ===============\n
   \	cli verify cluster master reboot
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup


Failover/Failback by rebooting the slave and verify connectivity

   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Rebooting Slave - Iteration ${Iteration} ===============\n
   \	cli verify cluster slave reboot
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup


Failover/Failback by issuing take-leader in master & verify connectivity

   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Election-Take-Leader - Iteration ${Iteration} ===============\n
   \	rest verify cluster election take leader
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup



Re-run the election and verify connectivity

   : FOR    ${Iteration}    IN RANGE    1    3
   \	Log To Console   \n================ Election-Rerun - Iteration ${Iteration} ===============\n
   \	rest verify cluster election rerun
   \	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup
   

   
Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Mininet

   auto configure fabric switch  ${spineList}  ${leafList}  2
   sleep  5
   Set Test Variable  ${bm0_intf0}  leaf0a-eth8
   Set Test Variable  ${bm0_intf1}  leaf0b-eth8
   Set Test Variable  ${bm1_intf0}  leaf0a-eth9
   Set Test Variable  ${bm1_intf1}  leaf0b-eth9
   Set Test Variable  ${bm2_intf0}  leaf1a-eth8
   Set Test Variable  ${bm2_intf1}  leaf1b-eth8
   Set Test Variable  ${bm3_intf0}  leaf1a-eth9
   Set Test Variable  ${bm3_intf1}  leaf1b-eth9
   Set Test Variable  ${bm4_intf0}  leaf2a-eth8
   Set Test Variable  ${bm4_intf1}  leaf2b-eth8
   Set Test Variable  ${bm5_intf0}  leaf2a-eth9
   Set Test Variable  ${bm5_intf1}  leaf2b-eth9
   
   rest add portgroup  p0
   rest add interface to portgroup  leaf0-a  ${bm0_intf0}  p0
   rest add interface to portgroup  leaf0-b  ${bm0_intf1}  p0
   rest add portgroup  p1
   rest add interface to portgroup  leaf0-a  ${bm1_intf0}  p1
   rest add interface to portgroup  leaf0-b  ${bm1_intf1}  p1
   rest add portgroup  p2 
   rest add interface to portgroup  leaf1-a  ${bm2_intf0}  p2
   rest add interface to portgroup  leaf1-b  ${bm2_intf1}  p2
   rest add portgroup  p3 
   rest add interface to portgroup  leaf1-a  ${bm3_intf0}  p3
   rest add interface to portgroup  leaf1-b  ${bm3_intf1}  p3
   rest add portgroup  p4 
   rest add interface to portgroup  leaf2-a  ${bm4_intf0}  p4
   rest add interface to portgroup  leaf2-b  ${bm4_intf1}  p4
   rest add portgroup  p5 
   rest add interface to portgroup  leaf2-a  ${bm5_intf0}  p5
   rest add interface to portgroup  leaf2-b  ${bm5_intf1}  p5
   sleep  5
   

Configure 1 Tenant with Multiple VNSs & Gateway Interfaces

   Set Test Variable  ${subMask}  24
   Set Test Variable  ${vns1ip}  10.10.10.100
   Set Test Variable  ${bm0ip}  10.10.10.10
   Set Test Variable  ${bm2ip}  10.10.10.12
   Set Test Variable  ${bm4ip}  10.10.10.14
   
   Set Test Variable  ${vns2ip}  20.20.20.100
   Set Test Variable  ${bm1ip}	20.20.20.11
   Set Test Variable  ${bm3ip}	20.20.20.13
   Set Test Variable  ${bm5ip}	20.20.20.15

   rest add tenant  autoT1
   rest add vns  autoT1  v1
   rest add portgroup to vns  autoT1  v1  p0  -1
   rest add portgroup to vns  autoT1  v1  p2  -1
   rest add portgroup to vns  autoT1  v1  p4  100
   rest add router intf  autoT1  v1
   rest add vns ip  autoT1  v1  ${vns1ip}  ${subMask}
   
   rest add vns  autoT1  v2
   rest add portgroup to vns  autoT1  v2  p1  -1
   rest add portgroup to vns  autoT1  v2  p3  -1
   rest add portgroup to vns  autoT1  v2  p5  200
   rest add router intf  autoT1  v2
   rest add vns ip  autoT1  v2  ${vns2ip}  ${subMask}

   mininet host ipcfg  bm0  bm0-bond0  ${bm0ip}  ${subMask}
   mininet host gw  bm0  ${vns1ip}  bm0-bond0
   mininet host ipcfg  bm2  bm2-bond0  ${bm2ip}  ${subMask}
   mininet host gw  bm2  ${vns1ip}  bm2-bond0
   mininet link tag  bm4  bm4-bond0  100  ${bm4ip}
   mininet host tagged gw  bm4  ${vns1ip}  1
   
   mininet host ipcfg  bm1  bm1-bond0  ${bm1ip}  ${subMask}
   mininet host gw  bm1  ${vns2ip}  bm1-bond0
   mininet host ipcfg  bm3  bm3-bond0  ${bm3ip}  ${subMask}
   mininet host gw  bm3  ${vns2ip}  bm3-bond0
   mininet link tag  bm5  bm5-bond0  200  ${bm5ip}
   mininet host tagged gw  bm5  ${vns2ip}  1
   sleep  30
   

Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Setup

   Set Test Variable  ${vns1ip}  10.10.10.100
   Set Test Variable  ${bm0ip}  10.10.10.10
   Set Test Variable  ${bm2ip}  10.10.10.12
   Set Test Variable  ${bm4ip}  10.10.10.14
   
   Set Test Variable  ${vns2ip}  20.20.20.100
   Set Test Variable  ${bm1ip}	20.20.20.11
   Set Test Variable  ${bm3ip}	20.20.20.13
   Set Test Variable  ${bm5ip}	20.20.20.15

   ###	Verify ping between vns1
   ${returnVal}=  platform ping  bm0  ${bm2ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm4ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm2  ${bm4ip}
   Should Be True  ${returnVal}

   ###	Verify ping between vns2
   ${returnVal}=  platform ping  bm1  ${bm3ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm1  ${bm5ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm3  ${bm5ip}
   Should Be True  ${returnVal}
   
   ###	Verify ping between vns1 & vns2
   ${returnVal}=  platform ping  bm0  ${bm1ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm3ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm5ip}
   Should Be True  ${returnVal}   


Reboot the master node & verify fabric integrity

	${returnVal}=  cli verify cluster master reboot
	Should Be True  ${returnVal}



Configure 3-Rack/Dual-Leaf/2-Spine/4-Host Setup For Mininet 

   auto configure fabric switch  ${spineList}  ${leafList}  2
   sleep  5
   Set Test Variable  ${bm0_intf0}  leaf0a-eth8
   Set Test Variable  ${bm0_intf1}  leaf0b-eth8
   Set Test Variable  ${bm1_intf0}  leaf0a-eth9
   Set Test Variable  ${bm1_intf1}  leaf0b-eth9
   Set Test Variable  ${bm2_intf0}  leaf0a-eth10
   Set Test Variable  ${bm2_intf1}  leaf0b-eth10
   Set Test Variable  ${bm3_intf0}  leaf0a-eth11
   Set Test Variable  ${bm3_intf1}  leaf0b-eth11
   Set Test Variable  ${bm4_intf0}  leaf1a-eth8
   Set Test Variable  ${bm4_intf1}  leaf1b-eth8
   Set Test Variable  ${bm5_intf0}  leaf1a-eth9
   Set Test Variable  ${bm5_intf1}  leaf1b-eth9
   Set Test Variable  ${bm6_intf0}  leaf1a-eth10
   Set Test Variable  ${bm6_intf1}  leaf1b-eth10
   Set Test Variable  ${bm7_intf0}  leaf1a-eth11
   Set Test Variable  ${bm7_intf1}  leaf1b-eth11
   Set Test Variable  ${bm8_intf0}  leaf2a-eth8
   Set Test Variable  ${bm8_intf1}  leaf2b-eth8
   Set Test Variable  ${bm9_intf0}  leaf2a-eth9
   Set Test Variable  ${bm9_intf1}  leaf2b-eth9
   Set Test Variable  ${bm10_intf0}  leaf2a-eth10
   Set Test Variable  ${bm10_intf1}  leaf2b-eth10
   Set Test Variable  ${bm11_intf0}  leaf2a-eth11
   Set Test Variable  ${bm11_intf1}  leaf2b-eth11
   
   rest add portgroup  p0
   rest add interface to portgroup  leaf0-a  ${bm0_intf0}  p0
   rest add interface to portgroup  leaf0-b  ${bm0_intf1}  p0
   rest add portgroup  p1
   rest add interface to portgroup  leaf0-a  ${bm1_intf0}  p1
   rest add interface to portgroup  leaf0-b  ${bm1_intf1}  p1
   rest add portgroup  p2 
   rest add interface to portgroup  leaf0-a  ${bm2_intf0}  p2
   rest add interface to portgroup  leaf0-b  ${bm2_intf1}  p2
   rest add portgroup  p3 
   rest add interface to portgroup  leaf0-a  ${bm3_intf0}  p3
   rest add interface to portgroup  leaf0-b  ${bm3_intf1}  p3
   rest add portgroup  p4
   rest add interface to portgroup  leaf1-a  ${bm4_intf0}  p4
   rest add interface to portgroup  leaf1-b  ${bm4_intf1}  p4
   rest add portgroup  p5
   rest add interface to portgroup  leaf1-a  ${bm5_intf0}  p5
   rest add interface to portgroup  leaf1-b  ${bm5_intf1}  p5
   rest add portgroup  p6
   rest add interface to portgroup  leaf1-a  ${bm6_intf0}  p6
   rest add interface to portgroup  leaf1-b  ${bm6_intf1}  p6
   rest add portgroup  p7
   rest add interface to portgroup  leaf1-a  ${bm7_intf0}  p7
   rest add interface to portgroup  leaf1-b  ${bm7_intf1}  p7
   rest add portgroup  p8
   rest add interface to portgroup  leaf2-a  ${bm8_intf0}  p8
   rest add interface to portgroup  leaf2-b  ${bm8_intf1}  p8
   rest add portgroup  p9
   rest add interface to portgroup  leaf2-a  ${bm9_intf0}  p9
   rest add interface to portgroup  leaf2-b  ${bm9_intf1}  p9
   rest add portgroup  p10
   rest add interface to portgroup  leaf2-a  ${bm10_intf0}  p10
   rest add interface to portgroup  leaf2-b  ${bm10_intf1}  p10
   rest add portgroup  p11
   rest add interface to portgroup  leaf2-a  ${bm11_intf0}  p11
   rest add interface to portgroup  leaf2-b  ${bm11_intf1}  p11
   sleep  5
   

Configure 2 Tenants with Multiple VNSs & Gateway Interfaces

   Set Test Variable  ${subMask}  24
   Set Test Variable  ${vns1ip}  10.10.10.100
   Set Test Variable  ${bm0ip}  10.10.10.10
   Set Test Variable  ${bm2ip}  10.10.10.12
   Set Test Variable  ${bm4ip}  10.10.10.14
   
   Set Test Variable  ${vns2ip}  20.20.20.100
   Set Test Variable  ${bm1ip}	20.20.20.11
   Set Test Variable  ${bm3ip}	20.20.20.13
   Set Test Variable  ${bm5ip}	20.20.20.15
   
   Set Test Variable  ${vns3ip}  30.30.30.100
   Set Test Variable  ${bm6ip}  30.30.30.6
   Set Test Variable  ${bm8ip}  30.30.30.8
   Set Test Variable  ${bm10ip}  30.30.30.10
   
   Set Test Variable  ${vns4ip}  40.40.40.100
   Set Test Variable  ${bm7ip}  40.40.40.7
   Set Test Variable  ${bm9ip}  40.40.40.9
   Set Test Variable  ${bm11ip}  40.40.40.11

   rest add tenant  autoT1
   rest add vns  autoT1  v1
   rest add portgroup to vns  autoT1  v1  p0  -1
   rest add portgroup to vns  autoT1  v1  p2  -1
   rest add portgroup to vns  autoT1  v1  p4  100
   rest add router intf  autoT1  v1
   rest add vns ip  autoT1  v1  ${vns1ip}  ${subMask}
   
   rest add vns  autoT1  v2
   rest add portgroup to vns  autoT1  v2  p1  -1
   rest add portgroup to vns  autoT1  v2  p3  -1
   rest add portgroup to vns  autoT1  v2  p5  200
   rest add router intf  autoT1  v2
   rest add vns ip  autoT1  v2  ${vns2ip}  ${subMask}

   rest add tenant  autoT2
   rest add vns  autoT2  v3
   rest add portgroup to vns  autoT2  v3  p6  -1
   rest add portgroup to vns  autoT2  v3  p8  -1
   rest add portgroup to vns  autoT2  v3  p10  100
   rest add router intf  autoT2  v3
   rest add vns ip  autoT2  v3  ${vns3ip}  ${subMask}
   
   rest add vns  autoT2  v4
   rest add portgroup to vns  autoT2  v4  p7  -1
   rest add portgroup to vns  autoT2  v4  p9  -1
   rest add portgroup to vns  autoT2  v4  p11  200
   rest add router intf  autoT2  v4
   rest add vns ip  autoT2  v4  ${vns4ip}  ${subMask}

   rest add tenant  system
   rest add tenant routers intf to system	autoT1
   rest add tenant routers intf to system	autoT2
   rest add system intf to tenant routers	autoT1
   rest add system intf to tenant routers	autoT2
   rest add static routes	autoT1	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	autoT2	0.0.0.0/0	{"tenant-name": "system"}
   
   

   mininet host ipcfg  bm0  bm0-bond0  ${bm0ip}  ${subMask}
   mininet host gw  bm0  ${vns1ip}  bm0-bond0
   mininet host ipcfg  bm2  bm2-bond0  ${bm2ip}  ${subMask}
   mininet host gw  bm2  ${vns1ip}  bm2-bond0
   mininet link tag  bm4  bm4-bond0  100  ${bm4ip}
   mininet host tagged gw  bm4  ${vns1ip}  1
   
   mininet host ipcfg  bm1  bm1-bond0  ${bm1ip}  ${subMask}
   mininet host gw  bm1  ${vns2ip}  bm1-bond0
   mininet host ipcfg  bm3  bm3-bond0  ${bm3ip}  ${subMask}
   mininet host gw  bm3  ${vns2ip}  bm3-bond0
   mininet link tag  bm5  bm5-bond0  200  ${bm5ip}
   mininet host tagged gw  bm5  ${vns2ip}  1
   
   mininet host ipcfg  bm6  bm6-bond0  ${bm6ip}  ${subMask}
   mininet host gw  bm6  ${vns3ip}  bm6-bond0
   mininet host ipcfg  bm8  bm8-bond0  ${bm8ip}  ${subMask}
   mininet host gw  bm8  ${vns3ip}  bm8-bond0
   mininet link tag  bm10  bm10-bond0  100  ${bm10ip}
   mininet host tagged gw  bm10  ${vns3ip}  1
   
   mininet host ipcfg  bm7  bm7-bond0  ${bm7ip}  ${subMask}
   mininet host gw  bm7  ${vns4ip}  bm7-bond0
   mininet host ipcfg  bm9  bm9-bond0  ${bm9ip}  ${subMask}
   mininet host gw  bm9  ${vns4ip}  bm9-bond0
   mininet link tag  bm11  bm11-bond0  200  ${bm11ip}
   mininet host tagged gw  bm11  ${vns4ip}  1
   sleep  30
   
   
Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/4-Host Setup
   
   Set Test Variable  ${subMask}  24
   Set Test Variable  ${vns1ip}  10.10.10.100
   Set Test Variable  ${bm0ip}  10.10.10.10
   Set Test Variable  ${bm2ip}  10.10.10.12
   Set Test Variable  ${bm4ip}  10.10.10.14
   
   Set Test Variable  ${vns2ip}  20.20.20.100
   Set Test Variable  ${bm1ip}	20.20.20.11
   Set Test Variable  ${bm3ip}	20.20.20.13
   Set Test Variable  ${bm5ip}	20.20.20.15
   
   Set Test Variable  ${vns3ip}  30.30.30.100
   Set Test Variable  ${bm6ip}  30.30.30.6
   Set Test Variable  ${bm8ip}  30.30.30.8
   Set Test Variable  ${bm10ip}  30.30.30.10
   
   Set Test Variable  ${vns4ip}  40.40.40.100
   Set Test Variable  ${bm7ip}  40.40.40.7
   Set Test Variable  ${bm9ip}  40.40.40.9
   Set Test Variable  ${bm11ip}  40.40.40.11
   
   ###	Verify ping between vns1
   ${returnVal}=  platform ping  bm0  ${bm2ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm4ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm2  ${bm4ip}
   Should Be True  ${returnVal}

   ###	Verify ping between vns2
   ${returnVal}=  platform ping  bm1  ${bm3ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm1  ${bm5ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm3  ${bm5ip}
   Should Be True  ${returnVal}
   
   ###	Verify ping between vns3
   ${returnVal}=  platform ping  bm6  ${bm8ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm6  ${bm10ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm8  ${bm10ip}
   Should Be True  ${returnVal}
   
   ###	Verify ping between vns4
   ${returnVal}=  platform ping  bm7  ${bm9ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm7  ${bm11ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm9  ${bm11ip}
   Should Be True  ${returnVal}
   
   ###	Verify ping between vns1 & vns2
   ${returnVal}=  platform ping  bm0  ${bm1ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm3ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm5ip}
   Should Be True  ${returnVal}
   
   ###	Verify ping between vns3 & vns4
   ${returnVal}=  platform ping  bm6  ${bm7ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm6  ${bm9ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm6  ${bm11ip}
   Should Be True  ${returnVal}
   
   ###  Verify Inter Tenant Pings: between vns1 & vns3
   ${returnVal}=  platform ping  bm0  ${bm6ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm8ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm0  ${bm10ip}
   Should Be True  ${returnVal}
   
   ###  Verify Inter Tenant Pings: between vns1 & vns4
   ${returnVal}=  platform ping  bm2  ${bm7ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm2  ${bm9ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm2  ${bm11ip}
   Should Be True  ${returnVal}
   
   ###  Verify Inter Tenant Pings: between vns2 & vns3
   ${returnVal}=  platform ping  bm1  ${bm6ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm1  ${bm8ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm1  ${bm10ip}
   Should Be True  ${returnVal}
   
   ###  Verify Inter Tenant Pings: between vns2 & vns4
   ${returnVal}=  platform ping  bm3  ${bm7ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm3  ${bm9ip}
   Should Be True  ${returnVal}
   ${returnVal}=  platform ping  bm3  ${bm11ip}
   Should Be True  ${returnVal}
   

T5 Platform test setup
	start floodlight monitor

T5 Platform test teardown 
	stop floodlight monitor
	
	