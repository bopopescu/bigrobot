== T5 Platform Visibility Test Suite - Regression Test Bed ==

* Setting
Documentation    T5 Controller Platform Test Suite - SPAN Verification
Suite Setup      base suite setup
Suite Teardown   base suite teardown
Test Setup       T5 Platform Test Setup
Test Teardown    T5 Platform Test Teardown
Force Tags       T5  IronHorse  Platform  Visibility
Library          keywords/BsnCommon.py
Library          keywords/Mininet.py
Library	    	 keywords/Host.py
Library          keywords/T5.py
Library	         keywords/T5L3.py
Library	         keywords/T5Platform.py
Library	         keywords/T5Utilities.py
Library	         keywords/SwitchLight.py
Library		     keywords/Ixia.py
Resource		 testsuites/T5/t5_physical_variables.txt


* Variables
@{spineList}  00:00:00:00:01:00:00:01  00:00:00:00:01:00:00:02
@{leafList}  00:00:00:00:02:00:00:01  00:00:00:00:02:00:00:02  00:00:00:00:02:00:00:03  00:00:00:00:02:00:00:04  00:00:00:00:02:00:00:05  00:00:00:00:02:00:00:06


${gateway1IP}	192.168.4.100
${gateway2IP}	192.168.0.100


${s1SrcSwitch}  leaf0-a
${s1SrcInt}		ethernet25
${s1DstSwitch}	leaf0-a
${s1DstInt}		ethernet26
${s1PingIP}		192.168.1.10
${s1VerifyHost}  h2
${s1VerifyInt}	eth1

${s2SrcSwitch}  leaf0-a
${s2SrcInt}		ethernet48
${s2DstSwitch}	leaf0-a
${s2DstInt}		ethernet26
${s2PingIP}		192.168.4.10
${s2VerifyHost}  h2
${s2VerifyInt}	eth1
${s2ShutSwitch}  leaf0-b
${s2ShutInt}  ethernet48

${s1IxiaSrcSwitch}  leaf0-a
${s1IxiaSrcInt}		ethernet24
${s1IxiaDstSwitch}	leaf0-a
${s1IxiaDstInt}		ethernet26
${s1IxiaVerifyHost}  h2
${s1IxiaVerifyInt}	eth1


* Test Case 

T0 Setup
	[Tags]  feature  setup
    Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology 
	Configure Tenants For SPAN & Test Path
	bash execute command  leaf0-a  ofad-ctl autoneg 25
	bash execute command  leaf0-a  ofad-ctl autoneg 26
	bash execute command  leaf1-a  ofad-ctl autoneg 25
	bash execute command  leaf1-a  ofad-ctl autoneg 26
	
	bring up h1 bond0
	sleep  2
	bring up h2 bond0
	sleep  2
	bring up h3 bond0
	sleep  2
	bring up h4 bond0
	sleep  2
	bring up h5 bond0
	sleep  2
	bring up h6 bond0
	sleep  2
	bring up h1 eth1
	sleep  2
	bring up h2 eth1
	sleep  2
	bring up h3 eth1
	sleep  2
	bring up h4 eth1
	sleep  2
	Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
	
	
	${stream-ab1}=  L3 add  flow=a<->b  frame_rate=100  frame_size=64  name=ab1_flow
	...			src_mac=aa:bb:01:00:00:01  dst_mac=aa:bb:02:00:00:01
	...			src_ip=100.1.1.1  src_gw=100.1.1.100  dst_ip=100.1.2.1  dst_gw=100.1.2.100	
	...			protocol=TCP  src_port=1000  dst_port=2000 
	
	${stream-ab2}=  L3 add  flow=a<->b  frame_rate=100  frame_size=64  name=ab2_flow
	...			src_mac=aa:bb:01:00:00:02  dst_mac=aa:bb:02:00:00:02
	...			src_ip=100.1.1.2  src_gw=100.1.1.100  dst_ip=100.1.2.2  dst_gw=100.1.2.100	
	...			protocol=TCP  src_port=1100  dst_port=2100
	
	${stream-ab3}=	L3 add  flow=a<->b  frame_rate=100  frame_size=64  name=ab3_flow
	...			src_mac=aa:bb:01:00:00:03  dst_mac=aa:bb:02:00:00:03
	...			src_ip=100.1.1.3  src_gw=100.1.1.100  dst_ip=100.1.2.3  dst_gw=100.1.2.100	
	...			protocol=UDP  src_port=1000  dst_port=2000
		
	${stream-cd1}=  L3 add  flow=c<->d  frame_rate=100  frame_size=64  name=cd1_flow
	...			src_mac=aa:bb:03:00:00:01  dst_mac=aa:bb:04:00:00:01
	...			src_ip=100.3.1.1  src_gw=100.3.1.100  dst_ip=100.4.1.1  dst_gw=100.4.1.100	
	...			protocol=TCP  src_port=3000  dst_port=4000 
	
	${stream-ac1}=  L3 add  flow=a<->c  frame_rate=100  frame_size=64  name=ac1_flow
	...			src_mac=aa:bb:01:00:00:04  dst_mac=aa:bb:03:00:00:02
	...			src_ip=100.1.1.4  src_gw=100.1.1.100  dst_ip=100.3.1.2  dst_gw=100.3.1.100	
	...			protocol=TCP  src_port=1000  dst_port=3000 
	
	start traffic  ${stream-ab1}
	start traffic  ${stream-ab2}
	start traffic  ${stream-ab3}
	start traffic  ${stream-cd1}
	start traffic  ${stream-ac1}


T1 Configure SPAN session for Single interface - Direction Both
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	1	${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=both
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=both
	Should be true  ${returnVal}
	rest activate monitor session	1
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request  ICMP echo reply
	Should be true  ${returnVal}
	
	
T2 Delete SPAN session for Single interface - Direction Both
	[Tags]  span  feature
	${returnVal} =  rest delete monitor session  1
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=both
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request  ICMP echo reply
	Should not be true  ${returnVal}


T3 Configure SPAN session for Single interface - Direction Ingress
    [Tags]  span  feature 
    ${returnVal} =  rest add monitor session	1	${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}	 direction=ingress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=ingress
	Should be true  ${returnVal}
	rest activate monitor session	1
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request
	Should be true  ${returnVal}
	
	
T4 Delete SPAN session for Single interface - Direction Ingress
	[Tags]  span  feature 
	${returnVal} =  rest delete monitor session  1
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=ingress
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request
	Should not be true  ${returnVal}


T5 Configure SPAN session for Single interface - Direction Egress
    [Tags]  span  feature 
    ${returnVal} =  rest add monitor session	1	${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}	 direction=egress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=egress
	Should be true  ${returnVal}
	rest activate monitor session	1
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply
	Should be true  ${returnVal}
	
	
T6 Delete SPAN session for Single interface - Direction Egress
	[Tags]  span  feature 
	${returnVal} =  rest delete monitor session  1
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=egress
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply
	Should not be true  ${returnVal}


T7 Activate-Deactivate-Activate-Delete SPAN session for Single interface - Direction Both
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	1	${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=both
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=both
	Should be true  ${returnVal}
	rest activate monitor session	1
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply  ICMP echo request
	Should be true  ${returnVal}
	${returnVal} =  rest deactivate monitor session	 1
    Should be true  ${returnVal}
    ${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply  ICMP echo request
	Should not be true  ${returnVal}
    ${returnVal} =  rest activate monitor session	 1
    Should be true  ${returnVal}
    ${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply  ICMP echo request
	Should be true  ${returnVal}
	${returnVal} =  rest delete monitor session  1
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=both
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply  ICMP echo request
	Should not be true  ${returnVal}
    
    
T8 Activate-Deactivate-Activate-Delete SPAN session for Single interface - Direction Ingress
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	1	${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=ingress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=ingress
	Should be true  ${returnVal}
	rest activate monitor session	1
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request
	Should be true  ${returnVal}
	${returnVal} =  rest deactivate monitor session	 1
    Should be true  ${returnVal}
    ${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request
	Should not be true  ${returnVal}
    ${returnVal} =  rest activate monitor session	 1
    Should be true  ${returnVal}
    ${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request
	Should be true  ${returnVal}
	${returnVal} =  rest delete monitor session  1
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=ingress
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo request
	Should not be true  ${returnVal}
	
	
T9 Activate-Deactivate-Activate-Delete SPAN session for Single interface - Direction Egress
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	1	${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=egress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=egress
	Should be true  ${returnVal}
	rest activate monitor session	1
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply
	Should be true  ${returnVal}
	${returnVal} =  rest deactivate monitor session	 1
    Should be true  ${returnVal}
    ${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply
	Should not be true  ${returnVal}
    ${returnVal} =  rest activate monitor session	 1
    Should be true  ${returnVal}
    ${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply
	Should be true  ${returnVal}
	${returnVal} =  rest delete monitor session  1
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		1  ${s1SrcSwitch}	${s1SrcInt}	${s1DstSwitch}	${s1DstInt}  direction=egress
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s1PingIP}  ${s1VerifyHost}	${s1VerifyInt}	ICMP echo reply
	Should not be true  ${returnVal}


T10 Configure SPAN session for Port-Group interface - Direction Both
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	2	${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=both
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		2  ${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=both
	Should be true  ${returnVal}
	rest activate monitor session	2
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP echo
	Should be true  ${returnVal}
	
	rest switch int shut   ${s2ShutSwitch}  ${s2ShutInt}
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP echo request  ICMP echo reply
	rest switch int noshut   ${s2ShutSwitch}  ${s2ShutInt}
	Should be true  ${returnVal}

T11 Delete SPAN session for Port-Group interface - Direction Both
	[Tags]  span  feature 
	${returnVal} =  rest delete monitor session  2
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		2  ${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=both
	Should not be true  ${returnVal}
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP
	Should not be true  ${returnVal}


T12 Configure SPAN session for Port-Group interface - Direction Ingress
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	2	${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=ingress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		2  ${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=ingress
	Should be true  ${returnVal}
	rest activate monitor session	2
	rest switch int shut   ${s2ShutSwitch}  ${s2ShutInt}
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP echo request
	rest switch int noshut   ${s2ShutSwitch}  ${s2ShutInt}
	Should be true  ${returnVal}
	
	
	
T13 Delete SPAN session for Port-Group interface - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest delete monitor session  2
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		2  ${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=ingress
	Should not be true  ${returnVal}
	rest switch int shut   ${s2ShutSwitch}  ${s2ShutInt}
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP echo request
	rest switch int noshut   ${s2ShutSwitch}  ${s2ShutInt}
	Should not be true  ${returnVal}
	


T14 Configure SPAN session for Port-Group interface - Direction Egress
    [Tags]  span  feature
    ${returnVal} =  rest add monitor session	2	${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=egress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session		2  ${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=egress
	Should be true  ${returnVal}
	rest activate monitor session	2
	rest switch int shut   ${s2ShutSwitch}  ${s2ShutInt}
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP echo reply
	rest switch int noshut   ${s2ShutSwitch}  ${s2ShutInt}
	Should be true  ${returnVal}
	
	
	
T15 Delete SPAN session for Port-Group interface - Direction Egress
	[Tags]  span  feature
	${returnVal} =  rest delete monitor session  2
    Should be true  ${returnVal}
    ${returnVal} =  rest verify monitor session		2  ${s2SrcSwitch}	${s2SrcInt}	${s2DstSwitch}	${s2DstInt}  direction=egress
	Should not be true  ${returnVal}
	rest switch int shut   ${s2ShutSwitch}  ${s2ShutInt}
	${returnVal} =  verify ping with tcpdump  h1  ${s2PingIP}  ${s2VerifyHost}	${s2VerifyInt}	ICMP echo reply
	rest switch int noshut   ${s2ShutSwitch}  ${s2ShutInt}
	Should not be true  ${returnVal}
	
	
	
####################


T16 Configure SPAN session - Direction Both
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=both  
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=both
	Should be true  ${returnVal}
	rest activate monitor session	1
	
	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.1 and tcp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.2 and tcp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.3 and udp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.1 and tcp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.2 and tcp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.3 and udp  IP
	Should be true  ${returnVal}
	

T17 Configure SPAN Session - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress
	Should be true  ${returnVal}
	rest activate monitor session	1
	
	sleep  3

	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.1  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.3  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.1  IP
	Should not be true  ${returnVal}
	
	
T18 Configure SPAN Session - Direction Egress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=egress
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=egress
	Should be true  ${returnVal}
	rest activate monitor session	1
	
	sleep  3

	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.1  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.3  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.1  IP
	Should not be true  ${returnVal}


T19 Configure SPAN session for SRC-IP-CIDR - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  src-ip-cidr=100.1.1.1/32
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  src-ip-cidr=100.1.1.1/32
	Should be true  ${returnVal}
	rest activate monitor session	1

	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.1  IP 
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.1  IP
	Should not be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.2  IP
	Should not be true  ${returnVal}
	
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  src-ip-cidr=100.1.1.0/24
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  src-ip-cidr=100.1.1.0/24
	Should be true  ${returnVal}
	rest activate monitor session	1
	
	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.1  IP 
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.2  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.2.1  IP
	Should not be true  ${returnVal}


T20 Configure SPAN session for SRC-PORT - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  src-tp-port=1000
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  src-tp-port=1000
	Should be true  ${returnVal}
	rest activate monitor session	1

	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src port 1000 and tcp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src port 1000 and udp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src port 1100 and udp  IP
	Should not be true  ${returnVal}
	

T21 Configure SPAN session for DST-IP-CIDR - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  dst-ip-cidr=100.1.2.1/32
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  dst-ip-cidr=100.1.2.1/32
	Should be true  ${returnVal}
	rest activate monitor session	1

	sleep  3

	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.2.1  IP 
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.2.2  IP
	Should not be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.1.2  IP
	Should not be true  ${returnVal}

	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  dst-ip-cidr=100.1.2.0/24
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  dst-ip-cidr=100.1.2.0/24
	Should be true  ${returnVal}
	rest activate monitor session	1
	
	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.2.1  IP 
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.2.2  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.1.2  IP
	Should not be true  ${returnVal}
	
	
T22 Configure SPAN session for DST-PORT - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  dst-tp-port=2000
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  dst-tp-port=2000
	Should be true  ${returnVal}
	rest activate monitor session	1

	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst port 2000 and tcp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst port 2000 and udp  IP
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst port 2100 and tcp  IP
	Should not be true  ${returnVal}
	
	
T23 Configure SPAN session for SRC-MAC - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  src-mac=aa:bb:01:00:00:01
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  src-mac=aa:bb:01:00:00:01
	Should be true  ${returnVal}
	rest activate monitor session	1

	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.1  IP 
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.2  IP
	Should not be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	src 100.1.1.3  IP
	Should not be true  ${returnVal}
	
	
T24 Configure SPAN session for DST-MAC - Direction Ingress
	[Tags]  span  feature
	${returnVal} =  rest add monitor session  1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	 ${s1IxiaDstSwitch}	 ${s1IxiaDstInt}  direction=ingress  dst-mac=aa:bb:02:00:00:02
    Should be true  ${returnVal}
	${returnVal} =  rest verify monitor session	 1  ${s1IxiaSrcSwitch}	${s1IxiaSrcInt}	${s1IxiaDstSwitch}	${s1IxiaDstInt}  direction=ingress  dst-mac=aa:bb:02:00:00:02
	Should be true  ${returnVal}
	rest activate monitor session	1

	sleep  3
	
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.1.2  IP 
	Should be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.1.1  IP
	Should not be true  ${returnVal}
	${returnVal} =  verify traffic with tcpdump  ${s1IxiaVerifyHost}	${s1IxiaVerifyInt}	dst 100.1.1.3  IP
	Should not be true  ${returnVal}



T25 Configure SPAN session for IP-Proto - Direction Ingress
	[Tags]  span  feature manual
	manual passed
	
	
T26 Configure SPAN session for IP-DSCP - Direction Ingress
	[Tags]  span  feature  manual
	manual passed 

T27 Configure SPAN session for IP-ECN - Direction Ingress
	[Tags]  span  feature  manual
	manual passed 

	
T28 Configure SPAN session for Ethertype - Direction Ingress
	[Tags]  span  feature  manual
	manual failed 
	

T29 Configure SPAN session for Tenant/VNS - Direction Ingress
	[Tags]  span  feature  manual
	manual  failed
	
	
T30 Configure SPAN session with multiple options - Direction Ingress
	[Tags]  span  feature  manual
	manual passed


T31 Configure SPAN session with Different VLANs
	[Tags]  span  feature  manual-untested


T32 Configure SPAN session with Spine switches 
	[Tags]  span  feature  manual
	manual passed
	
	
T33 Configure SPAN session with multiple source interfaces
	[Tags]  span  feature  manual
	manual passed
	
	
T34 Configure SPAN session with multiple destination interfaces
	[Tags]  span  feature manual
	manual passed


T35 Configure multiple SPAN sessions in multiple switches
	[Tags]  span  feature  manual-untested
	

T36 Configure peer links as source interfaces
	[Tags]  span  feature  manual
	manual failed

	



#################################################################	 	Test Path		#################################################################

	
T1 Intra Segment: SRC & DST Are In Same Rack - Same Switch
	[Tags]  testpath  feature 
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v1	dst-ip=${h2_tag_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test1	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}	 dst-tenant=autoT1	dst-segment=v1	dst-ip=${h2_tag_ip}  ip-protocol=icmp 
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test1  HostPing  leaf  host=h1  ip=${h2_tag_ip}


T2 Intra Segment: SRC & DST Are In Same Rack - Different Switch
	[Tags]  testpath  feature 
	sleep  30
	rest switch int shut   leaf0-a  ${h2_intf0}
	sleep  5
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v1	dst-ip=${h2_tag_ip}  ip-protocol=icmp
	Run Keyword If  '${returnVal}' == 'False'  rest switch int noshut   leaf0-b  ${h2_intf1}
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test1	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}	 dst-tenant=autoT1	dst-segment=v1	dst-ip=${h2_tag_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	sleep  3
	${returnVal}=  rest verify testpath fabric view  Test1  HostPing  leaf  leaf  host=h1  ip=${h2_tag_ip}
	rest switch int noshut   leaf0-b  ${h2_intf1}
	Should Be True  ${returnVal}
	
	
T3 Intra Segment: SRC & DST Are In Different Racks
	[Tags]  testpath  feature 
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v1	dst-ip=${h3_tag_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test3	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}	 dst-tenant=autoT1	dst-segment=v1	dst-ip=${h3_tag_ip}  ip-protocol=icmp 
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test3  HostPing  leaf  spine  leaf  host=h1  ip=${h3_tag_ip}
	Should Be True  ${returnVal}


T4 Intra Segment: DST Is Subnet Gateway
	[Tags]  testpath  feature 
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v1	dst-ip=${gateway1IP}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test4	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}	 dst-tenant=autoT1	dst-segment=v1	dst-ip=${gateway1IP}  ip-protocol=icmp 
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test4  HostPing  leaf  host=h1  ip=${gateway1IP}
	Should Be True  ${returnVal}


T5 Intra Tenant/ Different Segments - SRC & DST Are In Same Rack - Same Switch
	[Tags]  testpath  feature
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h3_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${h4_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test5	 src-tenant=autoT1	src-segment=v1	src-ip=${h3_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${h4_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test5  HostPing  leaf  host=h3  ip=${h4_ip}
	Should Be True  ${returnVal}
	
	
T6 Intra Tenant/ Different Segments: SRC & DST Are In Same Rack - Different Switch
	[Tags]  testpath  feature
	sleep  35
	rest switch int shut   leaf1-a  ${h4_intf0}
	sleep  5
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h3_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${h4_ip}  ip-protocol=icmp
	Run Keyword If  '${returnVal}' == 'False'  rest switch int noshut   leaf1-a  ${h4_intf0}
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test5	 src-tenant=autoT1	src-segment=v1	src-ip=${h3_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${h4_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test5  HostPing  leaf  leaf  host=h3  ip=${h4_ip}
	rest switch int noshut   leaf1-a  ${h4_intf0}
	Should Be True  ${returnVal}


T7 Intra Tenant/ Different Segments: SRC & DST Are In Different Racks
	[Tags]  testpath  feature
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${h6_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test7	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${h6_ip}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test7  HostPing  leaf  spine  leaf  host=h1  ip=${h6_ip}
	Should Be True  ${returnVal}


T8 Intra Tenant/ Different Segments: DST Is Other Segment Gateway
	[Tags]  testpath  feature
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}  dst-tenant=autoT1	dst-segment=v2	dst-ip=${gateway2IP}  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test8	 src-tenant=autoT1	src-segment=v1	src-ip=${h1_tag_ip}	 dst-tenant=autoT1	dst-segment=v2	dst-ip=${gateway2IP}  ip-protocol=icmp 
	Should Be True  ${returnVal}
	${returnVal}=  rest verify testpath fabric view  Test8  HostPing  leaf  host=h1  ip=${gateway2IP}
	Should Be True  ${returnVal}


T9 Inter Tenant: SRC & DST Are In Same Rack - Same Switch
	[Tags]  testpath  feature
	${returnVal}=  rest configure testpath controller view	 src-tenant=autoT2	src-segment=v1	src-ip=${h1_single_ip}  dst-tenant=Ixia1	dst-segment=v1	dst-ip=100.1.1.1  ip-protocol=icmp
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test9	 src-tenant=autoT2	src-segment=v1	src-ip=${h1_single_ip}  dst-tenant=Ixia1	dst-segment=v1	dst-ip=100.1.1.1  ip-protocol=icmp
	Should Be True  ${returnVal}
	bash add route  h1  100.1.1.0/24  192.168.1.100  eth1
	sleep  5
	${returnVal}=  rest verify testpath fabric view  Test9  HostPing  leaf  spine  leaf  leaf  host=h1  ip=100.1.1.1
	Should Be True  ${returnVal}


T10 Inter Tenant: SRC & DST Are In Same Rack - Different Switch
	[Tags]  testpath  feature
	${returnVal}=  rest configure testpath controller view	 src-tenant=Ixia3	src-segment=v1	src-ip=100.3.1.1  
	...	dst-tenant=Ixia4  dst-segment=v1	dst-ip=100.4.1.1  ip-protocol=tcp  src-l4-port=3000  dst-l4-port=4000  timeout=60
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test10  src-tenant=Ixia3	src-segment=v1	src-ip=100.3.1.1  
	...	dst-tenant=Ixia4  dst-segment=v1	dst-ip=100.4.1.1  ip-protocol=tcp  src-l4-port=3000  dst-l4-port=4000  timeout=60
	Should Be True  ${returnVal}
	sleep  3
	${returnVal}=  rest verify testpath fabric view  Test10  Ixia  leaf	 spine  leaf	#stream=${stream-cd1}
	Should Be True  ${returnVal}
	

T11 Inter Tenant: SRC & DST Are In Different Racks
	[Tags]  testpath  feature
	${returnVal}=  rest configure testpath controller view	 src-tenant=Ixia1	src-segment=v1	src-ip=100.1.1.4
	...	dst-tenant=Ixia3  dst-segment=v1	dst-ip=100.3.1.2  ip-protocol=tcp  src-l4-port=1000  dst-l4-port=3000  timeout=60
	Should Be True  ${returnVal}
	${returnVal}=  rest configure testpath fabric_view  test-name=Test11  src-tenant=Ixia1	src-segment=v1	src-ip=100.1.1.4
	...	dst-tenant=Ixia3  dst-segment=v1	dst-ip=100.3.1.2  ip-protocol=tcp  src-l4-port=1000  dst-l4-port=3000  timeout=60
	Should Be True  ${returnVal}
	sleep  3
	${returnVal}=  rest verify testpath fabric view  Test11  Ixia  leaf  spine	leaf
	Should Be True  ${returnVal}






########################################################################################################################################

* Keywords 

Configure 3-Rack/Dual-Leaf/2-Spine/2-Host Setup For Physical Topology 

   auto configure fabric switch  ${spineList}  ${leafList}  2
   sleep  30
   rest add portgroup  p1
   rest add interface to portgroup  leaf0-a  ${h1_intf0}  p1
   rest add interface to portgroup  leaf0-b  ${h1_intf1}  p1
   rest add portgroup lacp  p1
   rest add portgroup  p2
   rest add interface to portgroup  leaf0-a  ${h2_intf0}  p2
   rest add interface to portgroup  leaf0-b  ${h2_intf1}  p2
   rest add portgroup lacp  p2
   rest add portgroup  p3
   rest add interface to portgroup  leaf1-a  ${h3_intf0}  p3
   rest add interface to portgroup  leaf1-b  ${h3_intf1}  p3
   rest add portgroup lacp  p3
   rest add portgroup  p4
   rest add interface to portgroup  leaf1-a  ${h4_intf0}  p4
   rest add interface to portgroup  leaf1-b  ${h4_intf1}  p4
   rest add portgroup lacp  p4
   rest add portgroup  p5
   rest add interface to portgroup  leaf2-a  ${h5_intf0}  p5
   rest add interface to portgroup  leaf2-b  ${h5_intf1}  p5
   rest add portgroup lacp  p5
   rest add portgroup  p6
   rest add interface to portgroup  leaf2-a  ${h6_intf0}  p6
   rest add interface to portgroup  leaf2-b  ${h6_intf1}  p6
   rest add portgroup lacp  p6
   sleep  10


Configure Tenants For SPAN & Test Path
   
   Set Test Variable  ${subMask}  24
   Set Test Variable  ${seg1ip}  192.168.4.100
   Set Test Variable  ${seg2ip}  192.168.0.100
   Set Test Variable  ${seg3ip}  192.168.1.100
   Set Test Variable  ${Ixia1v1IP}  100.1.1.100
   Set Test Variable  ${Ixia1v2IP}  100.1.2.100
   Set Test Variable  ${Ixia3v1IP}  100.3.1.100
   Set Test Variable  ${Ixia4v1IP}  100.4.1.100
   Set Test Variable  ${Ixia5v1IP}  100.5.1.100
   Set Test Variable  ${Ixia6v1IP}  100.5.1.100

   rest add tenant  autoT1
   rest add vns  autoT1  v1
   rest add portgroup to vns  autoT1  v1  p1  10
   rest add portgroup to vns  autoT1  v1  p2  10
   rest add portgroup to vns  autoT1  v1  p3  10
   rest add router intf  autoT1  v1
   rest add vns ip  autoT1  v1  ${seg1ip}  ${subMask}
   
   rest add vns  autoT1  v2
   rest add portgroup to vns  autoT1  v2  p4  -1
   rest add portgroup to vns  autoT1  v2  p5  -1
   rest add portgroup to vns  autoT1  v2  p6  -1
   rest add router intf  autoT1  v2
   rest add vns ip  autoT1  v2  ${seg2ip}  ${subMask}
   
   rest add tenant  autoT2
   rest add vns  autoT2  v1
   rest add interface to vns  autoT2  v1  leaf0-a  ${h1_intf0_single}  -1
   rest add interface to vns  autoT2  v1  leaf1-a  ${h3_intf0_single}  -1
   rest add router intf  autoT2  v1
   rest add vns ip  autoT2  v1  ${seg3ip}  ${subMask}
   
   rest add tenant  Ixia1
   rest add vns  Ixia1  v1
   rest add interface to vns  Ixia1  v1  leaf0-a  ${leaf0a_ixia_intf}  -1
   rest add vns  Ixia1  v2
   rest add interface to vns  Ixia1  v2  leaf0-b  ${leaf0b_ixia_intf}  -1
   rest add router intf  Ixia1  v1
   rest add router intf  Ixia1  v2
   rest add vns ip  Ixia1  v1  ${Ixia1v1IP}  ${subMask}
   rest add vns ip  Ixia1  v2  ${Ixia1v2IP}  ${subMask}
   
   rest add tenant  Ixia3
   rest add vns  Ixia3  v1
   rest add interface to vns  Ixia3  v1  leaf1-a  ${leaf1a_ixia_intf}  -1
   rest add router intf  Ixia3  v1
   rest add vns ip  Ixia3  v1  ${Ixia3v1IP}  ${subMask}

   rest add tenant  Ixia4
   rest add vns  Ixia4  v1
   rest add interface to vns  Ixia4  v1  leaf1-b  ${leaf1b_ixia_intf}  -1
   rest add router intf  Ixia4  v1
   rest add vns ip  Ixia4  v1  ${Ixia4v1IP}  ${subMask}
   
   rest add tenant  Ixia5
   rest add vns  Ixia5  v1
   rest add interface to vns  Ixia5  v1  leaf2-a  ${leaf2a_ixia_intf}  -1
   rest add router intf  Ixia5  v1
   rest add vns ip  Ixia5  v1  ${Ixia5v1IP}  ${subMask}
   
   rest add tenant  Ixia6
   rest add vns  Ixia6  v1
   rest add interface to vns  Ixia6  v1  leaf2-b  ${leaf2b_ixia_intf}  -1
   rest add router intf  Ixia6  v1
   rest add vns ip  Ixia6  v1  ${Ixia6v1IP}  ${subMask}

   
   rest add tenant  system
   rest add tenant routers intf to system	autoT1
   rest add tenant routers intf to system	autoT2
   rest add tenant routers intf to system	Ixia1
   rest add tenant routers intf to system	Ixia3
   rest add tenant routers intf to system	Ixia4
   rest add tenant routers intf to system	Ixia5
   rest add tenant routers intf to system	Ixia6
   
   rest add system intf to tenant routers	autoT1
   rest add system intf to tenant routers	autoT2
   rest add system intf to tenant routers	Ixia1
   rest add system intf to tenant routers	Ixia3
   rest add system intf to tenant routers	Ixia4
   rest add system intf to tenant routers	Ixia5
   rest add system intf to tenant routers	Ixia6
   
   
   rest add static routes	autoT1	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	autoT2	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	Ixia1	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	Ixia3	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	Ixia4	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	Ixia5	0.0.0.0/0	{"tenant-name": "system"}
   rest add static routes	Ixia6	0.0.0.0/0	{"tenant-name": "system"}
      
   sleep  10


Verify Connectivity in 3-Rack/Dual-Leaf/2-Spine/2-Host Physical Topology 
   
   ###	Verify L2 ping between autoT1-v1   
   ${returnVal}=  platform bash ping  h1  ${h2_tag_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h1  ${h3_tag_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h2  ${h3_tag_ip}
   #Should Be True  ${returnVal}  
   

   ###	Verify L2 ping between autoT1-v2
   ${returnVal}=  platform bash ping  h4  ${h5_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h4  ${h6_ip}
   Should Be True  ${returnVal}  
   ${returnVal}=  platform bash ping  h5  ${h6_ip}
   Should Be True  ${returnVal}   
   
   ###	Verify ping between autoT2 			
   ${returnVal}=  platform bash ping  h1  ${h3_single_ip}
   Should Be True  ${returnVal}   


bring up h1 bond0
	bash init intf  h1  bond0.10
    bash add ip address  h1  ${h1_tag_ip}/24  bond0.10
    bash ifup intf  h1  bond0 
bring up h2 bond0
	bash init intf  h2  bond0.10
    bash add ip address  h2  ${h2_tag_ip}/24  bond0.10
    bash ifup intf  h2  bond0
bring up h3 bond0
	bash init intf  h3  bond0.10
    bash add ip address  h3  ${h3_tag_ip}/24  bond0.10
    bash ifup intf  h3  bond0 
bring up h4 bond0
	bash init intf  h4  bond0
    bash add ip address  h4  ${h4_ip}/24  bond0
    bash ifup intf  h4  bond0
bring up h5 bond0
	bash init intf  h5  bond0
    bash add ip address  h5  ${h5_ip}/24  bond0
    bash ifup intf  h5  bond0
bring up h6 bond0
	bash init intf  h6  bond0
    bash add ip address  h6  ${h6_ip}/24  bond0
    bash ifup intf  h6  bond0

bring up h1 eth1
	bash init intf  h1  eth1
    bash add ip address  h1  ${h1_single_ip}/24  eth1
    bash ifup intf  h1  eth1
bring up h2 eth1
	bash init intf  h2  eth1
    bash add ip address  h2  ${h2_single_ip}/24  eth1
    bash ifup intf  h2  eth1
bring up h3 eth1
	bash init intf  h3  eth1
    bash add ip address  h3  ${h3_single_ip}/24  eth1
    bash ifup intf  h3  eth1
bring up h4 eth1
	bash init intf  h4  eth1
    bash add ip address  h4  ${h4_single_ip}/24  eth1
    bash ifup intf  h4  eth1


T5 Platform Test Setup
	start floodlight monitor
	
T5 Platform Test Teardown
	stop floodlight monitor

