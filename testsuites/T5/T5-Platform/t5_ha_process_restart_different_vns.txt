*Settings
Documentation    T5 Platform
Suite Setup      t5 suite setup
Suite Teardown   t5 suite teardown
Test Setup       base test setup
Test Teardown    ha test teardown
Force Tags       IronHorse  T5 
Library          keywords/BsnCommon.py
Library          keywords/SwitchLight.py
Library          keywords/AppController.py
Library          keywords/SwitchLight.py
Library          keywords/Ixia.py
Library          keywords/T5.py
Library          keywords/T5L3.py

*Variables
${switch1_name}      T5HA-LEAF-1
${switch2_name}      T5HA-LEAF-2
${switch3_name}      T5HA-SPINE-1
${switch4_name}      T5HA-SPINE-2
${tenant_1}         T5HATenant
${vns_1}            T5HAVNS-1
${vns_2}            T5HAVNS-2
${interface_1}      ethernet24
${interface_2}      ethernet24
${src_ip}	    10.100.1.10
${src_gw}	    10.100.1.1
${dst_ip}	    10.100.2.10
${dst_gw}	    10.100.2.1
${netmask}	    24

*Test Case
      

Switch HA: Restart Process snmpd on switch
    verify snmp attribute  s1  sysLocation.0  mountainview
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  5
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  snmpd
    Sleep  20
    verify snmp attribute  s1  sysLocation.0  mountainview
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}      
    [Tags]  feature  ha  traffic  switch  snmp    

Switch HA: Restart Process ntp on switch
    verify ntp  s1  time-c.nist.gov
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  ntp
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    verify ntp  s1  time-c.nist.gov
    stop traffic  ${stream}        
    [Tags]  feature  ha  traffic  switch  ntp    

Switch HA: Restart Process fancontrol on switch
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  fancontrol
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}      
    [Tags]  feature  ha  traffic  switch  platform
 
Switch HA: Restart Process RSYSLOG on switch
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  rsyslogd
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}      
    [Tags]  feature  ha  traffic  switch  syslog    

Switch HA: Restart Process ssh on switch
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  ssh
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}    
    [Tags]  feature  ha  traffic  switch  platform

Switch HA: Restart Process networking on switch
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  networking
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}    
    [Tags]  feature  ha  traffic  switch   



Controller HA: Restart Process snmpd on Master Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  snmpd  Master
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}        
    [Tags]  feature  ha  traffic  controller 

Controller HA: Restart Process snmpd on Slave Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  snmpd  Slave
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}  
    [Tags]  feature  ha  traffic  controller


Controller HA: Restart Process rsyslogd on Master Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  rsyslogd  Master
    Sleep  30
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}        
    [Tags]  feature  ha  traffic  controller 

Controller HA: Restart Process rsyslogd on Slave Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  rsyslogd  Slave
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}  
    [Tags]  feature  ha  traffic  controller     

Controller HA: Restart Process collectd on Master Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  collectd  Master
    Sleep  20
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}        
    [Tags]  feature  ha  traffic  controller

Controller HA: Restart Process collectd on Slave Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  collectd  Slave
    Sleep  30
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}  
    [Tags]  feature  ha  traffic  controller       


Controller HA: Restart Process nginx on Master Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  nginx  Master
    Sleep  90
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}        
    [Tags]  feature  ha  traffic  controller

Controller HA: Restart Process nginx on Slave Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  nginx  Slave
    Sleep  90
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}  
    [Tags]  feature  ha  traffic  controller  


Controller HA: Restart Process Floodlight on Slave Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  floodlight  Slave
    Sleep  120
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}  
    [Tags]  feature  ha  traffic  controller   


Controller HA: Restart Process Floodlight on Master Controller:
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=64
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    restart process on controller  floodlight  Master
    Sleep  90
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}        
    [Tags]  feature  ha  traffic  controller

Switch HA: Restart Process OFAD on switch
    ${stream}=  L3 add  flow=a<->b  frame_rate=10000  frame_size=128
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07
    ...     src_ip=${src_ip}  dst_ip=${dst_ip}  name=a_b_flow
    ...     src_gw=${src_gw}  dst_gw=${dst_gw}   
    clear stats  
    start traffic  ${stream}
    sleep  3
    stop traffic  ${stream}
    clear stats  
    start traffic  ${stream}
    sleep  5
    bash restart process  s1  ofad
    Sleep  400
    verify results  transmitted_frame_rate  received_valid_frame_rate
    stop traffic  ${stream}   
    [Tags]  feature  ha  traffic  switch 
 
*Keywords

t5 suite setup
    base suite setup
    cli add snmp keyword   s1   community   ro public       
    cli add snmp keyword   s1   location   mountainview       
    cli add snmp keyword   s1   contact   nw_admin@super_awesome_company.com       
    cli add snmp host   s1   10.192.66.230   traps   public   161   
    cli add snmp host   s1   10.192.66.230   informs   public   161
    cli enable snmp   s1           
    add ntp server  s1  time-c.nist.gov
    verify ntp  s1  time-c.nist.gov
    
    rest add switch  ${switch1_name}
    ${switch1_dpid}=  rest return switch dpid from ip  s1
    rest add dpid  ${switch1_name}  ${switch1_dpid}
    rest add fabric role  ${switch1_name}  leaf      

    rest add switch  ${switch2_name}
    ${switch2_dpid}=  rest return switch dpid from ip  s2
    rest add dpid  ${switch2_name}  ${switch2_dpid}
    rest add fabric role  ${switch2_name}  leaf      

    rest add switch  ${switch3_name}
    ${switch3_dpid}=  rest return switch dpid from ip  s7
    rest add dpid  ${switch3_name}  ${switch3_dpid}
    rest add fabric role  ${switch3_name}  spine

    rest add switch  ${switch4_name}
    ${switch4_dpid}=  rest return switch dpid from ip  s8
    rest add dpid  ${switch4_name}  ${switch4_dpid}
    rest add fabric role  ${switch4_name}  spine 
          
    ${return_value_1}=  rest add tenant  ${tenant_1}
    Should be true  ${return_value_1}       
    ${return_value_2}=  rest add vns  ${tenant_1}  ${vns_1}
    Should be true  ${return_value_2} 
    ${return_value_3}=  rest add vns  ${tenant_1}  ${vns_2}
    Should be true  ${return_value_3} 
    ${return_value_4}=  rest add interface to vns  ${tenant_1}   ${vns_1}   ${switch1_name}  ${interface_1}   -1
    Should be true  ${return_value_4}
    ${return_value_5}=  rest add interface to vns  ${tenant_1}   ${vns_2}   ${switch2_name}  ${interface_2}   -1
    Should be true  ${return_value_5}
    ${return_value_6}=  rest add router intf  ${tenant_1}   ${vns_1}
    Should be true  ${return_value_6}  
    ${return_value_7}=  rest add router intf  ${tenant_1}   ${vns_2}
    Should be true  ${return_value_7}    
    ${return_value_8}=  rest add vns ip  ${tenant_1}   ${vns_1}  ${src_gw}  ${netmask}
    Should be true  ${return_value_8}
    ${return_value_9}=  rest add vns ip  ${tenant_1}   ${vns_2}  ${dst_gw}  ${netmask}
    Should be true  ${return_value_9}
    sleep  10

verify results   [Arguments]  ${transmitted_frames}  ${received_frames}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  a  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  b  ${received_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}
    Should be true  ${in_range} 

verify snmp attribute  [Arguments]  ${switch}  ${attribute}  ${expected_value}               
    ${snmp_key} =     snmp cmd   ${switch}   snmpget    public   ${attribute}  
    Should Contain   ${snmp_key}   ${expected_value}
 
ha test teardown
    delete traffic
    
t5 suite teardown
    rest delete tenant  ${tenant_1}
    rest delete fabric switch  ${switch1_name}
    rest delete fabric switch  ${switch2_name}
    rest delete fabric switch  ${switch3_name}
    rest delete fabric switch  ${switch4_name}  
    base suite teardown