*Settings
Documentation           Dell-S4810-S6000 SNMP Counters Test Suite
Suite Setup             dell suite setup
Suite Teardown          dell suite teardown
Test Setup              traffic test setup
Test Teardown           traffic teardown 
Force Tags              switch-platform  switchlight  bigtap  corsair-411  Dell-S4810  Dell-S6000
Library                 keywords/BsnCommon.py
Library                 keywords/AppController.py
Library                 keywords/BigTap.py
Library                 keywords/SwitchLight.py
Library                 keywords/Ixia.py
Library                 Collections.py
Library                 OperatingSystem.py
Library                 String.py
Library                 keywords/ThirdParty.py


* Variable
${policy_name_1}                    policy_dell_traffic_s1s3
${policy_name_2}                    policy_dell_traffic_s3s1

${s1_alias}                         app-s4810-4
${filter_s1_1}                      ethernet1  
${filter_nick_s1_1}                 ixia-1-14
${filter_s1_1_snmp_oid}             1.3.6.1.2.1.2.2.1.11.1001  
${filter_s1_1_snmp_crc_oid}         1.3.6.1.2.1.2.2.1.14.1001  
${delivery_s1_1}                    ethernet2  
${delivery_nick_s1_1}               ixia-1-13
${delivery_s1_1_snmp_oid}           1.3.6.1.2.1.2.2.1.17.1002  
${pre_service_s1}                   ethernet47
${pre_service_nick_s1}              pre-service-s1
${post_service_s1}                  ethernet48
${post_service_nick_s1}             post-service-s1
${service_name_1}                   service-s1
${core_interface_s1s2_1}            ethernet49
${core_s1_s2_1_snmp_oid}            1.3.6.1.2.1.2.2.1.11.1049
${core_interface_s1s2_2}            ethernet50
${core_s1_s2_2_snmp_oid}            1.3.6.1.2.1.2.2.1.17.1050
${pc_members_s1s2}                  49,50
${pc_number_s1s2}                   1
${pc_name_s1s2}                     port-channel1
${pc_s1s2_members}                  ethernet49 ethernet50


${s2_alias}                         app-s6000-1
${pre_service_s2}                   ethernet11
${pre_service_nick_s2}              pre-service-s2
${post_service_s2}                  ethernet12
${post_service_nick_s2}             post-service-s2
${service_name_2}                   service-s2
${core_interface_s2s1_1}            ethernet3
${core_s2_s1_1_snmp_oid}            1.3.6.1.2.1.2.2.1.11.1003
${core_s2_s1_1_snmp_crc_oid}        1.3.6.1.2.1.2.2.1.14.1003
${core_interface_s2s1_2}            ethernet4
${core_s2_s1_2_snmp_oid}            1.3.6.1.2.1.2.2.1.11.1004
${core_s2_s1_2_snmp_crc_oid}        1.3.6.1.2.1.2.2.1.14.1004
${core_interface_s2s3_1}            ethernet29
${core_s2_s3_1_snmp_oid}            1.3.6.1.2.1.2.2.1.11.1029
${core_interface_s2s3_2}            ethernet30
${core_s2_s3_2_snmp_oid}            1.3.6.1.2.1.2.2.1.17.1030
${pc_members_s2s1}                  3,4
${pc_number_s2s1}                   1
${pc_name_s2s1}                     port-channel1
${pc_s2s1_members}                  ethernet3 ethernet4
${pc_members_s2s3}                  29,30
${pc_number_s2s3}                   2

${s3_alias}                         app-s4810-1
${filter_s3_1}                      ethernet1  
${filter_nick_s3_1}                 ixia-1-17
${filter_s3_1_snmp_drop_oid}        1.3.6.1.2.1.2.2.1.13.1001  
${delivery_s3_1}                    ethernet2  
${delivery_nick_s3_1}               ixia-1-18
${delivery_s3_1_snmp_oid}           1.3.6.1.2.1.2.2.1.17.1002  
${pre_service_s3}                   ethernet47
${pre_service_nick_s3}              pre-service-s3
${post_service_s3}                  ethernet48
${post_service_nick_s3}             post-service-s3
${service_name_3}                   service-s3
${core_interface_s3s2_1}            ethernet51
${core_s3_s2_1_snmp_oid}            1.3.6.1.2.1.2.2.1.11.1051
${core_s3_s2_1_snmp_crc_oid}        1.3.6.1.2.1.2.2.1.14.1051
${core_interface_s3s2_2}            ethernet52
${core_s3_s2_2_snmp_oid}            1.3.6.1.2.1.2.2.1.11.1052
${core_s3_s2_2_snmp_crc_oid}        1.3.6.1.2.1.2.2.1.14.1052
${pc_members_s3s2}                  51,52
${pc_number_s3s2}                   2

${arista_ixia_port}                 Ethernet1
${arista_s600_port}                 Ethernet52/1
${arista_vlan_id}                   1020
${arista_vlan_name}                 V1020
${arista_s6000_ip_address}          192.168.120.2
${arista_s6000_ip_netmask}          24
${arista_ixia_ip_address}           192.168.110.1
${ixia_arista_ip_address}           192.168.110.2
${ixia_fabric_ip_address}           192.168.130.4

${tunnel_sw2_name_delivery}            tunnel1                 #Tunnel Name
${tunnel_sw2_parent_intf_delivery}     ethernet10              #Tunnel Parent Interface
${tunnel_sw2_sip_delivery}             192.168.120.1           #Tunnel Source IP
${tunnel_sw2_dip_delivery}             192.168.120.2           #Tunnel Destination IP
${tunnel_sw2_gip_delivery}             192.168.120.2           #Tunnel Gateway IP
${tunnel_sw2_mask_delivery}            255.255.255.0           #Tunnel Subnet Mask
${tunnel_sw2_alias}                    s6000_tunnel            #Tunnel Name when used as filter interface
${tunnel_sw2_loopback_delivery}        ethernet17              #Tunnel Loopback Interface

${snmp_ccommunity_1}                ro public
${snmp_community_1}                 public
${snmp_contact_1}                   snmphost@bigswitch.com
${snmp_location_1}                  SANTA-CLARA
${snmp_trap_svr_1}                  10.9.18.3
${snmp_trap_svr_2}                  10.9.18.2


* Test Case
TC001: Verify ifInUcastPkts and ifOutUcastPkts statistics match interface statistics in cli
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_1}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  no_arp=True  name=a_d_flow
    cli disable interface  s1  ${core_interface_s1s2_1}
    cli disable interface  s3  ${core_interface_s3s2_1}
    sleep  10
    clear stats
    cli clear interface statistics  s1
    cli clear interface statistics  s2
    cli clear interface statistics  s3        
    ${match_pre_value1}=       snmp cmd   s1   snmpget    public   ${filter_s1_1_snmp_oid}
    ${snmp_pre_value1}=        return snmp value  ${match_pre_value1}  1                   
    ${match_pre_value2}=       snmp cmd   s1   snmpget    public   ${core_s1_s2_2_snmp_oid}
    ${snmp_pre_value2}=        return snmp value  ${match_pre_value2}  1
    ${match_pre_value3}=       snmp cmd   s2   snmpget    public   ${core_s2_s1_2_snmp_oid}
    ${snmp_pre_value3}=        return snmp value  ${match_pre_value3}  1
    ${match_pre_value4}=       snmp cmd   s2   snmpget    public   ${core_s2_s3_2_snmp_oid}
    ${snmp_pre_value4}=        return snmp value  ${match_pre_value4}  1
    ${match_pre_value5}=       snmp cmd   s3   snmpget    public   ${core_s3_s2_2_snmp_oid}
    ${snmp_pre_value5}=        return snmp value  ${match_pre_value5}  1
    ${match_pre_value6}=       snmp cmd   s3   snmpget    public   ${delivery_s3_1_snmp_oid}
    ${snmp_pre_value6}=        return snmp value  ${match_pre_value6}  1    
    sleep  4
    start traffic     
    sleep  10
    verify results  a  d  transmitted_frame_rate  received_valid_frame_rate  10    
    stop traffic      
    ${rx_switch_value_1}=  cli return interface counter brief     s1      ${filter_s1_1}              rx
    ${match_post_value1}=  snmp cmd   s1   snmpget    public   ${filter_s1_1_snmp_oid}
    ${snmp_post_value1}=   return snmp value  ${match_post_value1}  1
    ${difference1}=        Evaluate  ${snmp_post_value1} - ${snmp_pre_value1}   
    ${in_range_1}=         ixia verify traffic rate  ${rx_switch_value_1}   ${difference1}     rangev=100
    Should be true  ${in_range_1}

    ${tx_switch_value_1}=  cli return interface counter brief     s1      ${core_interface_s1s2_2}    tx
    ${match_post_value2}=  snmp cmd   s1   snmpget    public   ${core_s1_s2_2_snmp_oid}
    ${snmp_post_value2}=   return snmp value  ${match_post_value2}  1
    ${difference2}=        Evaluate  ${snmp_post_value2} - ${snmp_pre_value2}       
    ${in_range_2}=         ixia verify traffic rate  ${tx_switch_value_1}   ${difference2}     rangev=100
    Should be true  ${in_range_2}    
            
    ${rx_switch_value_2}=  cli return interface counter brief     s2      ${core_interface_s2s1_2}    rx
    ${match_post_value3}=  snmp cmd   s2   snmpget    public   ${core_s2_s1_2_snmp_oid}
    ${snmp_post_value3}=   return snmp value  ${match_post_value3}  1
    ${difference3}=        Evaluate  ${snmp_post_value3} - ${snmp_pre_value3}
    ${in_range_3}=         ixia verify traffic rate  ${rx_switch_value_2}   ${difference3}     rangev=100
    Should be true  ${in_range_3}     
        
    ${tx_switch_value_2}=  cli return interface counter brief     s2      ${core_interface_s2s3_2}    tx
    ${match_post_value4}=  snmp cmd   s2   snmpget    public   ${core_s2_s3_2_snmp_oid}
    ${snmp_post_value4}=   return snmp value  ${match_post_value4}  1
    ${difference4}=        Evaluate  ${snmp_post_value4} - ${snmp_pre_value4}
    ${in_range_4}=         ixia verify traffic rate  ${tx_switch_value_2}   ${difference4}     rangev=100
    Should be true  ${in_range_4}  
                   
    ${rx_switch_value_3}=  cli return interface counter brief     s3      ${core_interface_s3s2_2}    rx
    ${match_post_value5}=  snmp cmd   s3   snmpget    public   ${core_s3_s2_2_snmp_oid}
    ${snmp_post_value5}=   return snmp value  ${match_post_value5}  1
    ${difference5}=        Evaluate  ${snmp_post_value5} - ${snmp_pre_value5}
    ${in_range_5}=         ixia verify traffic rate  ${rx_switch_value_3}   ${difference5}     rangev=100
    Should be true  ${in_range_5}  

    ${tx_switch_value_3}=  cli return interface counter brief     s3      ${delivery_s3_1}            tx        
    ${match_post_value6}=  snmp cmd   s3   snmpget    public   ${delivery_s3_1_snmp_oid}
    ${snmp_post_value6}=   return snmp value  ${match_post_value6}  1
    ${difference6}=        Evaluate  ${snmp_post_value6} - ${snmp_pre_value6}
    ${in_range_6}=         ixia verify traffic rate  ${tx_switch_value_3}   ${difference6}     rangev=100
    Should be true  ${in_range_6}           
    cli enable interface  s1  ${core_interface_s1s2_1}
    cli enable interface  s3  ${core_interface_s3s2_1}
    [Tags]  ha  robustness  statistics  sanity  snmp

TC002: SNMP: Verify ifInErrors are reported correctly
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_1}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  crc=True  no_arp=True  name=a_d_flow
    cli disable interface  s1  ${core_interface_s1s2_1}
    cli disable interface  s3  ${core_interface_s3s2_1}
    sleep  10
    clear stats
    cli clear interface statistics  s1
    cli clear interface statistics  s2
    cli clear interface statistics  s3 
    ${match_pre_value1}=       snmp cmd   s1   snmpget    public   ${filter_s1_1_snmp_crc_oid}
    ${snmp_pre_value1}=        return snmp value  ${match_pre_value1}  1                   
    ${match_pre_value3}=       snmp cmd   s2   snmpget    public   ${core_s2_s1_2_snmp_crc_oid}
    ${snmp_pre_value3}=        return snmp value  ${match_pre_value3}  1
    ${match_pre_value5}=       snmp cmd   s3   snmpget    public   ${core_s3_s2_2_snmp_crc_oid}
    ${snmp_pre_value5}=        return snmp value  ${match_pre_value5}  1
    sleep  4
    start traffic     
    sleep  10
    verify results  a  d  transmitted_frame_rate  received_frame_rate  10    
    stop traffic      
    ${rx_switch_value_1}=  cli return interface counter brief     s1      ${filter_s1_1}              rx
    ${match_post_value1}=  snmp cmd   s1   snmpget    public   ${filter_s1_1_snmp_crc_oid}
    ${snmp_post_value1}=   return snmp value  ${match_post_value1}  1
    ${difference1}=        Evaluate  ${snmp_post_value1} - ${snmp_pre_value1}   
    ${in_range_1}=         ixia verify traffic rate  ${rx_switch_value_1}   ${difference1}     rangev=100
    Should be true  ${in_range_1}
            
    ${rx_switch_value_2}=  cli return interface counter brief     s2      ${core_interface_s2s1_2}    rx
    ${match_post_value3}=  snmp cmd   s2   snmpget    public   ${core_s2_s1_2_snmp_crc_oid}
    ${snmp_post_value3}=   return snmp value  ${match_post_value3}  1
    ${difference3}=        Evaluate  ${snmp_post_value3} - ${snmp_pre_value3}
    ${in_range_3}=         ixia verify traffic rate  ${rx_switch_value_2}   ${difference3}     rangev=100
    Should be true  ${in_range_3}     
                           
    ${rx_switch_value_3}=  cli return interface counter brief     s3      ${core_interface_s3s2_2}    rx
    ${match_post_value5}=  snmp cmd   s3   snmpget    public   ${core_s3_s2_2_snmp_crc_oid}
    ${snmp_post_value5}=   return snmp value  ${match_post_value5}  1
    ${difference5}=        Evaluate  ${snmp_post_value5} - ${snmp_pre_value5}
    ${in_range_5}=         ixia verify traffic rate  ${rx_switch_value_3}   ${difference5}     rangev=100
    Should be true  ${in_range_5}  

    cli enable interface  s1  ${core_interface_s1s2_1}
    cli enable interface  s3  ${core_interface_s3s2_1}
    [Tags]  ha  robustness  statistics  snmp  sanity  

TC003: SNMP: Verify ifInDiscards are reported correctly
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_1}=  L2 add  flow=a->d  line_rate=100  frame_size=64  no_arp=True  name=a_d_flow
    ${stream_2}=  L2 add  flow=c->d  line_rate=100  frame_size=64  no_arp=True  name=a_d_flow

    cli disable interface  s1  ${core_interface_s1s2_1}
    cli disable interface  s3  ${core_interface_s3s2_1}
    sleep  10
    clear stats
    cli clear interface statistics  s1
    cli clear interface statistics  s2
    cli clear interface statistics  s3 
    ${match_pre_value1}=       snmp cmd   s3   snmpget    public   ${filter_s3_1_snmp_drop_oid}
    ${snmp_pre_value1}=        return snmp value  ${match_pre_value1}  1
    sleep  4
    start traffic     
    sleep  30
    verify results  a  d  transmitted_frame_rate  received_valid_frame_rate  1000    
    stop traffic      
    ${match_post_value1}=  snmp cmd   s3   snmpget    public   ${filter_s3_1_snmp_drop_oid}
    ${snmp_post_value1}=   return snmp value  ${match_post_value1}  1
    ${difference1}=        Evaluate  ${snmp_post_value1} - ${snmp_pre_value1}   
    ${passOrfail}=  Set variable if   ${difference1} > 100  PASS
    Should Be Equal As Strings  ${passOrfail}  PASS
    cli enable interface  s1  ${core_interface_s1s2_1}
    cli enable interface  s3  ${core_interface_s3s2_1}
    [Tags]  ha  robustness  statistics  snmp  sanity  

* Keywords

dell suite setup
    base suite setup
    rest add switch alias  s1  ${s1_alias}
    rest add switch alias  s2  ${s2_alias}
    rest add switch alias  s3  ${s3_alias} 
    bash restart process  s1  ofad  timeout=60
    bash restart process  s2  ofad  timeout=60
    bash restart process  s3  ofad  timeout=60
    bash restart process  s1  snmpd  timeout=60
    bash restart process  s2  snmpd  timeout=60
    bash restart process  s3  snmpd  timeout=60
    sleep  90           
    ${disable_crc_check}=  rest disable feature  crc
    Should be true  ${disable_crc_check} 
    ${disable_feature}=  rest disable feature  inport-mask
    Should be true  ${disable_feature}               
    ${output_1}=    rest add interface role  s1  ${filter_s1_1}         filter      ${filter_nick_s1_1}
    Should be true  ${output_1}     
    ${output_2}=    rest add interface role  s1  ${delivery_s1_1}       delivery    ${delivery_nick_s1_1}
    Should be true  ${output_2}
    ${output_3}=    rest add interface role  s1  ${pre_service_s1}      service     intf_nickname=${pre_service_nick_s1}
    Should be true  ${output_3}     
    ${output_4}=    rest add interface role  s1  ${post_service_s1}     service     intf_nickname=${post_service_nick_s1}
    Should be true  ${output_4}

    ${output_5}=    rest add interface role  s2  ${pre_service_s2}      service     intf_nickname=${pre_service_nick_s2}
    Should be true  ${output_5}     
    ${output_6}=    rest add interface role  s2  ${post_service_s2}     service     intf_nickname=${post_service_nick_s2}
    Should be true  ${output_6}

    ${output_7}=    rest add interface role  s3  ${filter_s3_1}         filter      ${filter_nick_s3_1}   
    Should be true  ${output_7}
    ${output_8}=    rest add interface role  s3  ${delivery_s3_1}       delivery    ${delivery_nick_s3_1}        
    Should be true  ${output_8}
    ${output_9}=    rest add interface role  s3  ${pre_service_s3}      service     intf_nickname=${pre_service_nick_s3}
    Should be true  ${output_9}     
    ${output_10}=   rest add interface role  s3  ${post_service_s3}     service     intf_nickname=${post_service_nick_s3}
    Should be true  ${output_10}

    ${output_11}=   rest add service    ${service_name_1}     ${pre_service_nick_s1}     ${post_service_nick_s1}
    Should be true  ${output_11}    
    ${output_12}=   rest add service    ${service_name_2}     ${pre_service_nick_s2}     ${post_service_nick_s2}
    Should be true  ${output_12}
    ${output_13}=   rest add service    ${service_name_3}     ${pre_service_nick_s3}     ${post_service_nick_s3}
    Should be true  ${output_13}
        
    Sleep  5
    cli disable interface  s1  ${filter_s1_1}
    cli disable interface  s1  ${delivery_s1_1}
    cli disable interface  s1  ${pre_service_s1}
    cli disable interface  s1  ${post_service_s1}
    cli disable interface  s1  ${core_interface_s1s2_1}
    cli disable interface  s1  ${core_interface_s1s2_2}
    cli disable interface  s2  ${core_interface_s2s1_1}
    cli disable interface  s2  ${core_interface_s2s1_2}
    cli disable interface  s2  ${core_interface_s2s3_1}
    cli disable interface  s2  ${core_interface_s2s3_2}
    cli disable interface  s2  ${pre_service_s2}
    cli disable interface  s2  ${post_service_s2}
    cli disable interface  s3  ${core_interface_s3s2_1}
    cli disable interface  s3  ${core_interface_s3s2_2}    
    cli disable interface  s3  ${filter_s3_1}
    cli disable interface  s3  ${delivery_s3_1}
    cli disable interface  s3  ${pre_service_s3}
    cli disable interface  s3  ${post_service_s3}
    sleep  5
    cli enable interface  s1  ${filter_s1_1}
    cli enable interface  s1  ${delivery_s1_1}
    cli enable interface  s1  ${pre_service_s1}
    cli enable interface  s1  ${post_service_s1}
    cli enable interface  s1  ${core_interface_s1s2_1}
    cli enable interface  s1  ${core_interface_s1s2_2}
    cli enable interface  s2  ${core_interface_s2s1_1}
    cli enable interface  s2  ${core_interface_s2s1_2}
    cli enable interface  s2  ${core_interface_s2s3_1}
    cli enable interface  s2  ${core_interface_s2s3_2}
    cli enable interface  s2  ${pre_service_s2}
    cli enable interface  s2  ${post_service_s2}
    cli enable interface  s3  ${core_interface_s3s2_1}
    cli enable interface  s3  ${core_interface_s3s2_2}    
    cli enable interface  s3  ${filter_s3_1}
    cli enable interface  s3  ${delivery_s3_1}
    cli enable interface  s3  ${pre_service_s3}
    cli enable interface  s3  ${post_service_s3}
    sleep  5          
                    
    ${output_14}=   rest add policy  admin-view  ${policy_name_1}  forward
    Should be true  ${output_14}
    ${output_15}=   rest add policy match  admin-view  ${policy_name_1}  1  {"any-traffic": true, "sequence": 1}
    Should be true  ${output_15}
    ${output_16}=   rest add policy interface  admin-view  ${policy_name_1}  ${filter_nick_s1_1}  filter
    Should be true  ${output_16}    
    ${output_17}=   rest add policy interface  admin-view  ${policy_name_1}  ${delivery_nick_s3_1}  delivery
    Should be true  ${output_17}    
    ${output_18}=    rest add service to policy  admin-view  ${policy_name_1}  ${service_name_1}  1
    Should be true  ${output_18}
    ${output_19}=    rest add service to policy  admin-view  ${policy_name_1}  ${service_name_2}  2
    Should be true  ${output_19}    
    ${output_20}=    rest add service to policy  admin-view  ${policy_name_1}  ${service_name_3}  3
    Should be true  ${output_20}    
        
    ${output_21}=    rest add policy  admin-view  ${policy_name_2}  forward
    Should be true  ${output_21}
    ${output_22}=    rest add policy match  admin-view  ${policy_name_2}  1  {"any-traffic": true, "sequence": 1}
    Should be true  ${output_22}
    ${output_23}=    rest add policy interface  admin-view  ${policy_name_2}  ${filter_nick_s3_1}  filter
    Should be true  ${output_23}    
    ${output_24}=    rest add policy interface  admin-view  ${policy_name_2}  ${delivery_nick_s3_1}  delivery
    Should be true  ${output_24}
    Sleep  5
    cli add snmp keyword   s1   community   ${snmp_ccommunity_1}       
    cli add snmp keyword   s1   location    ${snmp_location_1}       
    cli add snmp keyword   s1   contact     ${snmp_contact_1}       
    cli add snmp host      s1   ${snmp_trap_svr_1}   traps   ${snmp_community_1}   162   
    cli add snmp host      s1   ${snmp_trap_svr_1}   informs   ${snmp_community_1}   162
    ###
    cli add snmp keyword   s2   community   ${snmp_ccommunity_1}       
    cli add snmp keyword   s2   location    ${snmp_location_1}       
    cli add snmp keyword   s2   contact     ${snmp_contact_1}       
    cli add snmp host      s2   ${snmp_trap_svr_1}   traps   ${snmp_community_1}   162   
    cli add snmp host      s2   ${snmp_trap_svr_1}   informs   ${snmp_community_1}   162
    ###
    cli add snmp keyword   s3   community   ${snmp_ccommunity_1}       
    cli add snmp keyword   s3   location    ${snmp_location_1}       
    cli add snmp keyword   s3   contact     ${snmp_contact_1}       
    cli add snmp host      s3   ${snmp_trap_svr_1}   traps   ${snmp_community_1}   162   
    cli add snmp host      s3   ${snmp_trap_svr_1}   informs   ${snmp_community_1}   162  
 

traffic test setup
    write version to file
    start syslog monitor
    ixia initialize  tg1  init=true
    
traffic teardown
    delete traffic
    sleep  2
    stop syslog monitor
        
verify results   [Arguments]  ${send_port}  ${recv_port}  ${transmitted_frames}  ${received_valid_frames}  ${tolerance}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${send_port}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${recv_port}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}  ${tolerance}
    Should be true  ${in_range}

configure ntp server  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  add ntp server  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}
 
verify ntp server  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  verify ntp  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}

delete ntp  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  delete ntp server  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}

lag setup  [Arguments]  ${mode}
    ${pc_status_s1s2}=  cli add portchannel  s1  ${pc_number_s1s2}   ${pc_members_s1s2}  ${mode}
    Should be true  ${pc_status_s1s2}
    ${pc_status_s2s1}=  cli add portchannel  s2  ${pc_number_s2s1}   ${pc_members_s2s1}  ${mode}
    Should be true  ${pc_status_s2s1}
    sleep  5

verify portchannel interface is up  [Arguments]  ${switch}  ${interface_name}  
    ${inft_state}=  cli show interface state  ${switch}  ${interface_name}
    Should Contain  ${inft_state}  up
    ${cintf_state}=  rest verify interface is up  ${switch}  ${interface_name}
    Should Be True  ${cintf_state}
    
dell suite teardown
    ${teardown_1}=      rest delete policy  admin-view  ${policy_name_1}
    Should be true      ${teardown_1}  
    ${teardown_2}=      rest delete policy  admin-view  ${policy_name_2}
    Should be true      ${teardown_2}
    ${teardown_20}=     rest delete service  ${service_name_1}
    Should be true      ${teardown_20}
    ${teardown_21}=     rest delete service  ${service_name_2}
    Should be true      ${teardown_21}
    ${teardown_22}=     rest delete service  ${service_name_3}
    Should be true      ${teardown_22}            
    ${teardown_3}=      rest delete interface role  s1  ${filter_s1_1}      filter      ${filter_nick_s1_1}
    Should be true      ${teardown_3}
    ${teardown_4}=      rest delete interface role  s1  ${delivery_s1_1}    delivery    ${delivery_nick_s1_1}
    Should be true      ${teardown_4}     
    ${teardown_5}=      rest delete interface role  s1  ${pre_service_s1}   service     ${pre_service_nick_s1}
    Should be true      ${teardown_5}
    ${teardown_6}=      rest delete interface role  s1  ${post_service_s1}  service     ${post_service_nick_s1}
    Should be true      ${teardown_6}     
    
    ${teardown_7}=      rest delete interface role  s2  ${pre_service_s2}   service     ${pre_service_nick_s2}
    Should be true      ${teardown_7}
    ${teardown_8}=      rest delete interface role  s2  ${post_service_s2}  service     ${post_service_nick_s2}
    Should be true      ${teardown_8}    
    
    ${teardown_9}=      rest delete interface role  s3  ${filter_s3_1}      filter      ${filter_nick_s3_1}
    Should be true      ${teardown_9}
    ${teardown_10}=     rest delete interface role  s3  ${delivery_s3_1}    delivery    ${delivery_nick_s3_1}
    Should be true      ${teardown_10}        
    ${teardown_11}=     rest delete interface role  s3  ${pre_service_s3}   service     ${pre_service_nick_s3}
    Should be true      ${teardown_11}
    ${teardown_12}=     rest delete interface role  s3  ${post_service_s3}  service     ${post_service_nick_s3}
    Should be true      ${teardown_12}
        
    ${teardown_13}=     rest delete interface  s1  ${filter_s1_1}
    Should be true      ${teardown_13}
    ${teardown_14}=     rest delete interface  s1  ${delivery_s1_1}
    Should be true      ${teardown_14}
    ${teardown_15}=     rest delete interface  s3  ${filter_s3_1}
    Should be true      ${teardown_15}
    ${teardown_16}=     rest delete interface  s3  ${delivery_s3_1}
    Should be true      ${teardown_16}    
    ${teardown_17}=     rest delete switch  s1
    Should be true      ${teardown_17}    
    ${teardown_18}=     rest delete switch  s2
    Should be true      ${teardown_18}        
    ${teardown_19}=     rest delete switch  s3
    Should be true      ${teardown_19}        
    ${enable_crc_check}=  rest enable feature  crc
    Should be true  ${enable_crc_check}  
    rest delete switch alias  s1
    rest delete switch alias  s2
    rest delete switch alias  s3    
    base suite teardown  
    