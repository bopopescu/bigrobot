*Settings
Documentation  SwitchLight Platform : Port Channel Hashing Test Suite
Suite Setup  lag suite setup
Suite Teardown   lag suite teardown
Test Setup   lag test setup
Test Teardown   lag test teardown
Force Tags   SwitchLight  lag  BigTap  hashing
Library  keywords/AppController.py
Library  keywords/BsnCommon.py
Library  keywords/BigTap.py
Library  keywords/SwitchLight.py
Library  keywords/Ixia.py

##Topology
###############################################################################################################
###   s1(app-ras4600-1)----s4(app-ras5710-1)----s5(app-ras6700-1)----s3(app-ras5610-1)----s2(app-ras4600-2) ###
###############################################################################################################

* Variable

${s1s4_10g_name}                        port-channel1  
${s1s4_10g_port_range}                  49-52
${s1s4_10g_port_range_small1}           49-50
${s1s4_10g_port_range_small2}           51-52
${s1s4_10g_number}                      1
${s1_lag_mem_1}                         50          #Broadcom portmapping is off by 1. This could change in future leading to script failures
${s1_lag_mem_2}                         51          #Broadcom portmapping is off by 1. This could change in future leading to script failures   
${s1_lag_mem_3}                         52          #Broadcom portmapping is off by 1. This could change in future leading to script failures
${s1_lag_mem_4}                         53          #Broadcom portmapping is off by 1. This could change in future leading to script failures
${s4s1_10g_name}                        port-channel1  
${s4s1_10g_port_range}                  45-48
${s4s1_10g_number}                      1

${s2s3_10g_name}                        port-channel1  
${s2s3_10g_port_range}                  49-52
${s2s3_10g_number}                      1
${s3s2_10g_name}                        port-channel1  
${s3s2_10g_port_range}                  7-10
${s3s2_10g_number}                      1

${s4s5_10g_name}                        port-channel2  
${s4s5_10g_port_range}                  49-50
${s4s5_10g_number}                      2
${s5s4_10g_name}                        port-channel2  
${s5s4_10g_port_range}                  29-30
${s5s4_10g_number}                      2

${s3s5_10g_name}                        port-channel3  
${s3s5_10g_port_range}                  49-50
${s3s5_10g_number}                      3
${s5s3_10g_name}                        port-channel3  
${s5s3_10g_port_range}                  31-32
${s5s3_10g_number}                      3


${filter_1}  ethernet1  
${filter_nick_1}  ixia-2-1
${filter_2}  ethernet2  
${filter_nick_2}  ixia-2-2
${delivery_1}  ethernet2  
${delivery_nick}  ixia-2-6

* Test Case

TC1: Verify Configuration
    verify portchannel interface is up   s1  ${s1s4_10g_name}
    verify portchannel interface is up   s4  ${s4s1_10g_name}
    verify portchannel interface is up   s2  ${s2s3_10g_name}
    verify portchannel interface is up   s3  ${s3s2_10g_name}
    verify portchannel interface is up   s4  ${s4s5_10g_name}
    verify portchannel interface is up   s5  ${s5s4_10g_name}
    verify portchannel interface is up   s3  ${s3s5_10g_name}
    verify portchannel interface is up   s5  ${s5s3_10g_name}        
    [Tags]  basic 

TC2: Verify (L2) Source MAC address hashing for non-IP packets
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:01  dst_mac=00:02:03:04:05:01
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:02  dst_mac=00:02:03:04:05:01
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:03  dst_mac=00:02:03:04:05:01
    ...     name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2srcmac
    
TC3: Disable two links and verify source MAC address hashing for non-IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:01  dst_mac=00:02:03:04:05:01
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:02  dst_mac=00:02:03:04:05:01
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:03  dst_mac=00:02:03:04:05:01
    ...     name=a4_c_flow    
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1           
    [Tags]  l2srcmac    

TC4: Verify (L2) destination MAC address hashing for non-IP packets
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2dstmac

TC5: Disable two links and verify (L2) destination MAC address hashing for non-IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     name=a4_c_flow        
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1           
    [Tags]  l2dstmac    
        
TC6: Verify (L2) Ethernet type hashing for non-IP packets 
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0801
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0802
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0803
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0804
    ...     name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2ethertype
    
TC7: Disable two links and verify (L2) Ethernet type hashing for non-IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0801
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0802
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0803
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0804
    ...     name=a4_c_flow        
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2ethertype
    
TC8: Verify (L2) VLAN Id hashing for non-IP packets
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     ethertype=8100  vlan_id=1000  name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     ethertype=8100  vlan_id=2000  name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     ethertype=8100  vlan_id=3000  name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     ethertype=8100  vlan_id=4000  name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2vlan

TC9: Disable two links and verify (L2) VLAN Id hashing for non-IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     ethertype=8100  vlan_id=1000  name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     ethertype=8100  vlan_id=2000  name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     ethertype=8100  vlan_id=3000  name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     ethertype=8100  vlan_id=4000  name=a4_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2vlan
    
TC10: Verify (L2) Source MAC address hashing for IP packets 
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:01  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:02  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:03  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l2srcmacip
    
TC11: Disable two links and verify (L2) Source MAC address hashing for IP packets 
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:01  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:02  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:03  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2srcmacip        

TC12: Verify (L2) Destination MAC address hashing for IP packets
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l2dstmacip
    
TC13: Disable two links and verify (L2) Destination MAC address hashing for IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2dstmacip    
    
TC14: Verify (L2) Ethernet type hashing for IP packets
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0806  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8847  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l2ethertypeip

TC15: Disable two links and verify (L2) Ethernet type hashing for IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0806  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8847  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2ethertypeip

TC16: Verify (L2) VLAN Id hashing for IP packets
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=1000  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=2000  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=2500  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=3300  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l2vlanip


TC17: Disable two links and verify (L2) VLAN Id hashing for IP packets
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=1000  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=2000  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=2500  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=8100  vlan_id=3300  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2vlanip

######## HASH MODE L3
TC18: Hash Mode:L3: Verify Source MAC address hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:01  dst_mac=00:02:03:04:05:01
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:02  dst_mac=00:02:03:04:05:01
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:03  dst_mac=00:02:03:04:05:01
    ...     name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2srcmac  L3
    
TC19: Hash Mode:L3: Disable two links and verify source MAC address hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:01  dst_mac=00:02:03:04:05:01
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:02  dst_mac=00:02:03:04:05:01
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:03  dst_mac=00:02:03:04:05:01
    ...     name=a4_c_flow    
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1           
    [Tags]  l2srcmac  L3 

TC20: Hash Mode:L3: Verify destination MAC address hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2dstmac  L3

TC21: Hash Mode:L3: Disable two links and verify destination MAC address hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     name=a4_c_flow        
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1           
    [Tags]  l2dstmac  L3 
    
TC22: Hash Mode:L3: Verify Ethernet type hashing for non-IP packets 
    configure lag interfaces with hash mode  L3
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0801
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0802
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0803
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0804
    ...     name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2ethertype  L3
    
TC23: Hash Mode:L3: Disable two links and verify Ethernet type hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0801
    ...     name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0802
    ...     name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0803
    ...     name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01  ethertype=0804
    ...     name=a4_c_flow        
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2ethertype  L3    
    
TC24: Hash Mode:L3: Verify VLAN Id hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     ethertype=8100  vlan_id=1000  name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     ethertype=8100  vlan_id=2000  name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     ethertype=8100  vlan_id=3000  name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     ethertype=8100  vlan_id=4000  name=a4_c_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l2vlan  L3

TC25: Hash Mode:L3: Disable two links and verify VLAN Id hashing for non-IP packets
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:01
    ...     ethertype=8100  vlan_id=1000  name=a1_c_flow
    ${stream2}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:02
    ...     ethertype=8100  vlan_id=2000  name=a2_c_flow    
    ${stream3}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:03
    ...     ethertype=8100  vlan_id=3000  name=a3_c_flow
    ${stream4}=  L2 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:04
    ...     ethertype=8100  vlan_id=4000  name=a4_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l2vlan  L3

TC26: Hash Mode:L3 Verify source IP address hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=101.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=102.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=103.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3srcip  L3

TC27: Hash Mode:L3 - Disable two links and Verify source IP address hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=101.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=102.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=103.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3srcip  L3

TC28: Hash Mode:L3 Verify destination IP address hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=102.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=103.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3dstip  L3

TC29: Hash Mode:L3 - Disable two links and Verify destination IP address hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  ethertype=0800  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=102.1.1.2  ethertype=0800  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=103.1.1.2  ethertype=0800  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3dstip  L3

T30: Hash Mode:L3 - Verify TCP source port hashing    
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a0_b_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8102  dst_port=8002  name=a1_b_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8103  dst_port=8002  name=a2_b_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8104  dst_port=8002  name=a3_b_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l3tcpsrcport  L3

T31: Hash Mode:L3 - Disable two links and verify TCP source port hashing    
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8102  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8103  dst_port=8002  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8104  dst_port=8002  name=a3_c_flow    
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3tcpsrcport  L3

T32: Hash Mode:L3 - Verify TCP destination port hashing    
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=TCP  src_port=8101  dst_port=8001  name=a0_b_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a1_b_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8101  dst_port=8003  name=a2_b_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8101  dst_port=8004  name=a3_b_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l3tcpdstport  L3

T33: Hash Mode:L3 - Disable two links and verify TCP destination port hashing    
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=TCP  src_port=8101  dst_port=8001  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8101  dst_port=8003  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=TCP  src_port=8101  dst_port=8004  name=a3_c_flow    
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3tcpdstport  L3       


T34: Hash Mode:L3 - Verify UDP source port hashing    
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a0_b_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8102  dst_port=8002  name=a1_b_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8103  dst_port=8002  name=a2_b_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8104  dst_port=8002  name=a3_b_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l3UDPsrcport  L3

T35: Hash Mode:L3 - Disable two links and verify UDP source port hashing    
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8102  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8103  dst_port=8002  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8104  dst_port=8002  name=a3_c_flow    
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3UDPsrcport  L3

T36: Hash Mode:L3 - Verify UDP destination port hashing    
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=UDP  src_port=8101  dst_port=8001  name=a0_b_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a1_b_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8101  dst_port=8003  name=a2_b_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8101  dst_port=8004  name=a3_b_flow    
    send and verify traffic  True  True  True  True  
    [Tags]  l3UDPdstport  L3

T37: Hash Mode:L3 - Disable two links and verify UDP destination port hashing    
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800  
    ...     protocol=UDP  src_port=8101  dst_port=8001  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8101  dst_port=8003  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=101.1.1.2  ethertype=0800    
    ...     protocol=UDP  src_port=8101  dst_port=8004  name=a3_c_flow    
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3UDPdstport  L3

T38: Hash Mode:L3 - Verify source IPv6 address hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:02  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:03  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:04  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3srcipv6  L3

T39: Hash Mode:L3 - Disable two links and verify source IPv6 address hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:02  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:03  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:04  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3srcipv6  L3    

T40: Hash Mode:L3 - Verify destination IPv6 address hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:02  ethertype=86dd  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:03  ethertype=86dd  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:04  ethertype=86dd  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3dstipv6  L3

T41: Hash Mode:L3 - Disable two links and verify destination IPv6 address hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:02  ethertype=86dd  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:03  ethertype=86dd  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:04  ethertype=86dd  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3dstipv6  L3

TC42: Hash Mode:L3 - Verify IPv6 TCP source port hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8102  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8103  dst_port=8002  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8104  dst_port=8002  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3ipv6tcpsrcport  L3
TC43: Hash Mode:L3 - Disable two links and verify IPv6 TCP source port hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8102  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8103  dst_port=8002  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8104  dst_port=8002  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]   l3ipv6tcpsrcport  L3
    
TC44: Hash Mode:L3 - Verify IPv6 TCP destination port hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=TCP  src_port=8101  dst_port=8001  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8101  dst_port=8003  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8101  dst_port=8004  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3ipv6tcpdstport  L3
    
TC45: Hash Mode:L3 - Disable two links and verify IPv6 TCP destination port hashing 
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=TCP  src_port=8101  dst_port=8001  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8101  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8101  dst_port=8003  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=TCP  src_port=8101  dst_port=8004  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]   l3ipv6tcpdstport  L3
TC46: Hash Mode:L3 - Verify IPv6 UDP source port hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8102  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8103  dst_port=8002  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8104  dst_port=8002  name=a3_c_flow
    send and verify traffic  True  True  True  True  
    [Tags]  l3ipv6udpsrcport  L3
    
TC47: Hash Mode:L3 - Disable two links and verify IPv6 UDP source port hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8102  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8103  dst_port=8002  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8104  dst_port=8002  name=a3_c_flow
    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3ipv6udpsrcport  L3 
TC48: Hash Mode:L3 - Verify IPv6 UDP destination port hashing
    configure lag interfaces with hash mode  L3
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=UDP  src_port=8101  dst_port=8001  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8101  dst_port=8003  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8101  dst_port=8004  name=a3_c_flow    send and verify traffic  True  True  True  True  
    [Tags]  l3ipv6udpdstport  L3
    
TC49: Hash Mode:L3 - Disable two links and verify IPv6 UDP destination port hashing
    configure lag interfaces with hash mode  L3
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=0
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=0
    ${stream1}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd     
    ...     protocol=UDP  src_port=8101  dst_port=8001  name=a0_c_flow
    ${stream2}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8101  dst_port=8002  name=a1_c_flow
    ${stream3}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8101  dst_port=8003  name=a2_c_flow
    ${stream4}=  L3 add  flow=a->c  frame_rate=1000  frame_size=64  frame_cnt=10000
    ...     src_mac=00:01:02:03:04:00  dst_mac=00:02:03:04:05:00  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:01  dst_ip=2002:0:0:0:0:0:0:01  ethertype=86dd  
    ...     protocol=UDP  src_port=8101  dst_port=8004  name=a3_c_flow    send and verify traffic  True  True  False  False
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1
    sleep  1       
    [Tags]  l3ipv6udpdstport  L3
                    
* Keywords

configure lag interfaces with hash mode  [Arguments]  ${lag_mode}  
    # Configure LAG on s1    
    cli add portchannel  s1  ${s1s4_10g_number}  ${s1s4_10g_port_range}  ${lag_mode}
    # Configure LAG on s2
    cli add portchannel  s2  ${s2s3_10g_number}  ${s2s3_10g_port_range}  ${lag_mode}
    # Configure LAG on s3
    cli add portchannel  s3  ${s3s2_10g_number}  ${s3s2_10g_port_range}  ${lag_mode}
    cli add portchannel  s3  ${s3s5_10g_number}  ${s3s5_10g_port_range}  ${lag_mode}
    # Configure LAG on s4
    cli add portchannel  s4  ${s4s1_10g_number}  ${s4s1_10g_port_range}  ${lag_mode}
    cli add portchannel  s4  ${s4s5_10g_number}  ${s4s5_10g_port_range}  ${lag_mode}
    # Configure LAG on s5
    cli add portchannel  s5  ${s5s4_10g_number}  ${s5s4_10g_port_range}  ${lag_mode}
    cli add portchannel  s5  ${s5s3_10g_number}  ${s5s3_10g_port_range}  ${lag_mode}
    Sleep   30

lag suite setup
    base suite setup
    configure lag interfaces with hash mode  L2
    rest add interface role  s1  ${filter_1}  filter  ${filter_nick_1}
    rest add interface role  s1  ${filter_2}  filter  ${filter_nick_2}       
    rest add interface role  s2  ${delivery_1}  delivery  ${delivery_nick}
    rest add policy  admin-view  P1  forward
    rest add policy match  admin-view  P1  1  {"any-traffic": true, "sequence": 1}
    rest add policy interface  admin-view  P1  ${filter_nick_1}  filter
    rest add policy interface  admin-view  P1  ${filter_nick_2}  filter    
    rest add policy interface  admin-view  P1  ${delivery_nick}  delivery
    Sleep  10     
 
verify portchannel interface is up  [Arguments]  ${switch}  ${interface_name}  
    ${inft_state}=  cli show interface state  ${switch}  ${interface_name}
    Should Contain  ${inft_state}  up

send and verify traffic  [Arguments]  ${member1s1}  ${member2s1}  ${member3s1}  ${member4s1}
    clear stats  
    cli execute command  s1  clear interface statistics
    cli execute command  s2  clear interface statistics
    cli execute command  s3  clear interface statistics
    cli execute command  s4  clear interface statistics
    cli execute command  s5  clear interface statistics
    start traffic    
    sleep  10
    stop traffic      
    ${member1_s1}=  cli return member interface stats  s1  ${s1s4_10g_number}  ethernet49  tx
    Run keyword if  ${member1s1}=="True"  Should Not Be Equal As Integers  ${member1_s1}  0
    ${member2_s1}=  cli return member interface stats  s1  ${s1s4_10g_number}  ethernet50  tx
    Run keyword if  ${member2s1}=="True"  Should Not Be Equal As Integers  ${member2_s1}  0
    ${member3_s1}=  cli return member interface stats  s1  ${s1s4_10g_number}  ethernet51  tx
    Run keyword if  ${member3s1}=="True"  Should Not Be Equal As Integers  ${member3_s1}  0
    ${member4_s1}=  cli return member interface stats  s1  ${s1s4_10g_number}  ethernet52  tx    
    Run keyword if  ${member4s1}=="True"  Should Not Be Equal As Integers  ${member4_s1}  0        
    ${member1_s4}=  cli return member interface stats  s4  ${s4s1_10g_number}  ethernet45  rx
    Run keyword if  ${member1s1}=="True"  Should Not Be Equal As Integers  ${member1_s4}  0
    ${member2_s4}=  cli return member interface stats  s4  ${s4s1_10g_number}  ethernet46  rx
    Run keyword if  ${member2s1}=="True"  Should Not Be Equal As Integers  ${member2_s4}  0
    ${member3_s4}=  cli return member interface stats  s4  ${s4s1_10g_number}  ethernet47  rx
    Run keyword if  ${member3s1}=="True"  Should Not Be Equal As Integers  ${member3_s4}  0
    ${member4_s4}=  cli return member interface stats  s4  ${s4s1_10g_number}  ethernet48  rx
    Run keyword if  ${member4s1}=="True"  Should Not Be Equal As Integers  ${member4_s4}  0 
    ${range_1}=   Run keyword if  ${member1s1}=="True"    Evaluate  ${member1_s4} - ${member1_s1}
    ${range_2}=   Run keyword if  ${member2s1}=="True"    Evaluate  ${member2_s4} - ${member2_s1}
    ${range_3}=   Run keyword if  ${member3s1}=="True"    Evaluate  ${member3_s4} - ${member3_s1}
    ${range_4}=   Run keyword if  ${member4s1}=="True"    Evaluate  ${member4_s4} - ${member4_s1}
    Run keyword if  ${member1s1}=="True"  verify value is in range  ${range_1}  -10  10
    Run keyword if  ${member2s1}=="True"  verify value is in range  ${range_2}  -10  10    
    Run keyword if  ${member3s1}=="True"  verify value is in range  ${range_3}  -10  10
    Run keyword if  ${member4s1}=="True"  verify value is in range  ${range_4}  -10  10
    
    ${member1_s4s5}=  cli return member interface stats  s4  ${s4s5_10g_number}  ethernet49  tx
    Should Not Be Equal As Integers  ${member1_s4s5}  0
    ${member2_s4s5}=  cli return member interface stats  s4  ${s4s5_10g_number}  ethernet50  tx
    Should Not Be Equal As Integers  ${member2_s4s5}  0
    ${member1_s5s4}=  cli return member interface stats  s5  ${s5s4_10g_number}  ethernet29  rx
    Should Not Be Equal As Integers  ${member1_s5s4}  0
    ${member2_s5s4}=  cli return member interface stats  s5  ${s5s4_10g_number}  ethernet30  rx
    Should Not Be Equal As Integers  ${member2_s5s4}  0
    ${range_5}=   Evaluate  ${member1_s5s4} - ${member1_s4s5}
    ${range_6}=   Evaluate  ${member2_s5s4} - ${member2_s4s5}
    verify value is in range  ${range_5}  -10  10
    verify value is in range  ${range_6}  -10  10
    
    ${member1_s5s3}=  cli return member interface stats  s5  ${s5s3_10g_number}  ethernet31  tx
    Should Not Be Equal As Integers  ${member1_s5s3}  0
    ${member2_s5s3}=  cli return member interface stats  s5  ${s5s3_10g_number}  ethernet32  tx
    Should Not Be Equal As Integers  ${member2_s5s3}  0
    ${member1_s3s5}=  cli return member interface stats  s3  ${s3s5_10g_number}  ethernet49  rx
    Should Not Be Equal As Integers  ${member1_s3s5}  0
    ${member2_s3s5}=  cli return member interface stats  s3  ${s3s5_10g_number}  ethernet50  rx
    Should Not Be Equal As Integers  ${member2_s3s5}  0
    ${range_7}=   Evaluate  ${member1_s3s5} - ${member1_s5s3}
    ${range_8}=   Evaluate  ${member2_s3s5} - ${member2_s5s3}
    verify value is in range  ${range_7}  -10  10
    verify value is in range  ${range_8}  -10  10    
    
    ${member1_s3}=  cli return member interface stats  s3  ${s3s2_10g_number}  ethernet7   tx
    Should Not Be Equal As Integers  ${member1_s3}  0
    ${member2_s3}=  cli return member interface stats  s3  ${s3s2_10g_number}  ethernet8   tx
    Should Not Be Equal As Integers  ${member2_s3}  0
    ${member3_s3}=  cli return member interface stats  s3  ${s3s2_10g_number}  ethernet9   tx
    Should Not Be Equal As Integers  ${member3_s3}  0
    ${member4_s3}=  cli return member interface stats  s3  ${s3s2_10g_number}  ethernet10  tx
    Should Not Be Equal As Integers  ${member4_s3}  0    
    ${member1_s2}=  cli return member interface stats  s2  ${s2s3_10g_number}  ethernet49  rx
    Should Not Be Equal As Integers  ${member1_s2}  0
    ${member2_s2}=  cli return member interface stats  s2  ${s2s3_10g_number}  ethernet50  rx
    Should Not Be Equal As Integers  ${member2_s2}  0
    ${member3_s2}=  cli return member interface stats  s2  ${s2s3_10g_number}  ethernet51  rx
    Should Not Be Equal As Integers  ${member3_s2}  0
    ${member4_s2}=  cli return member interface stats  s2  ${s2s3_10g_number}  ethernet52  rx
    Should Not Be Equal As Integers  ${member4_s2}  0
    ${range_9}=    Evaluate  ${member1_s2} - ${member1_s3}
    ${range_10}=   Evaluate  ${member2_s2} - ${member2_s3}
    ${range_11}=   Evaluate  ${member3_s2} - ${member3_s3}
    ${range_12}=   Evaluate  ${member4_s2} - ${member4_s3}
    verify value is in range  ${range_9}   -10  10
    verify value is in range  ${range_10}  -10  10  
    verify value is in range  ${range_11}  -10  10
    verify value is in range  ${range_12}  -10  10      


lag test setup
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_1} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_2} enable=1    
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_3} enable=1
    bash execute command    s1   ofad-ctl bshell port ${s1_lag_mem_4} enable=1

lag test teardown
    delete traffic 
    
lag suite teardown
    rest delete policy  admin-view  P1
    rest delete interface role  s1  ${filter_1}  filter  ${filter_nick_1} 
    rest delete interface role  s1  ${filter_2}  filter  ${filter_nick_2} 
    rest delete interface role  s2  ${delivery_1}  delivery  ${delivery_nick}
    rest delete interface  s1  ${filter_1}
    rest delete interface  s1  ${filter_2}    
    rest delete interface  s2  ${delivery_1}
    rest delete switch  s1
    rest delete switch  s2
    base suite teardown        