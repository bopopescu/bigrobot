* Settings
Documentation     T5  Switch Platform Test suite- Iron Horse
Suite Setup       base suite setup
Suite Teardown    base suite teardown
Test Setup        T5 switch platform test setup
Test Teardown     T5 switch platform test teardown
Force Tags        T5  switch  Platform 
...             
...            
...                        
Library         keywords/BsnCommon.py
Library         keywords/SwitchLight.py
Library         keywords/AppController.py
Library         keywords/Ixia.py 
Library         keywords/T5.py    
Library         String



*Variables

${switchlight_version}  SwitchLight
${netmask}  18
${gateway}  10.192.64.1
${dns_server}  10.192.3.1
${dns_domain}  bigswitch.com
${j}    1
${switch1_name}=  leaf0-a
${switch2_name}=  leaf0-b
${switch7_name}=  spine0
${tenant}=        testTenant 
${vns}=           v1
${vlan}=          -1
${intf_leaf1_h2}=  ethernet47
${intf_1}=        ethernet1
${intf_2}=        ethernet2
${intf_3}=        ethernet3
${intf_4}=        ethernet4

${intf_6}=        ethernet45
${intf_7}=        ethernet46
${intf_8}=        ethernet47
${intf_9}=        ethernet48

${count}=         1 
${ratetolerance}=     10
${tolerance}=         5
${sleepAfter}=    10
${sleepBefore}=   5


### Section A: ONIE, OFAUX Channel  

*Test Case

Config the switch spine leaf and controller 
    Log    Step 1 - Configure the base set up according to topology
    T5 switch platform test setup
    [Tags]  T5  switch  setup  feature   

Verify ONIE Installed on Switch Spine and Leaf
	Log     Step 1 - verify ONIE installed in switch
	verify onie installated on switch  s1
	verify onie installated on switch  s2
	verify onie installated on switch  s7
	[Tags]  T5  switch  install  onie  jira-pan-772  feature  
            
Verify the openflow aux channel count on Switch Spine and Leaf
	Log    Step 1 - Get the OF aux channel number
	verify openflow aux channel  s1  c1  
	verify openflow aux channel  s2  c1  
	verify openflow aux channel  s7  c1  
    [Tags]  T5  switch  ofaux  feature      
    
Verify console connectivity on Switch Spine and Leaf
    Log    Step 1 - Verify access the console through telnet
    [Tags]  T5  switch  install
    [Tags]  Manual
    Manual passed

Verify UBoot version DRAM etc
    Log    Step 1 - Verify the Uboot version
    Log    Step 2 - Verify the DRAM
    [Tags]  T5  switch  install 
    [Tags]  Manual-untested
    Manual untested
   
Verify environmental variables for CPU, RAM, PCI, Ethernet, EEPROM at loader 
    Log    Step 1 - Verify the environmrntal variables 
    [Tags]  T5  switch  install 
    [Tags]  Manual-untested
    Manual untested
    
### SECTION B: Initial Configuration of Controller and Switch - Similar to SwitchLight for Spine and Leaf 

Verify one openflow controller can be configured on Leaf
    delete existing controllers  s1  c1
    delete existing controllers  s1  c2
    add openflow controller  s1  c1
    verify openflow controller  s1  c1
    [Tags]  t5  platform  InitialConfig  feature  

Verify controller can be modified on Leaf
    delete existing controllers  s1  c1
    delete existing controllers  s1  c2
    add openflow controller  s1  c1
    verify openflow controller  s1  c1
    delete existing controllers  s1  c1
    add openflow controller  s1  c2
    verify openflow controller  s1  c2
    [Tags]  t5  platform  InitialConfig  feature  

Verify multiple openflow controllers can be configured on Leaf
    delete existing controllers  s1  c1
    delete existing controllers  s1  c2
    add openflow controller  s1  c1
    verify openflow controller  s1  c1
    add openflow controller  s1  c2
    verify openflow controller  s1  c2    
    [Tags]  t5  platform  InitialConfig  feature  

Verify one openflow controller can be configured on Spine
    delete existing controllers  s7  c1
    delete existing controllers  s7  c2
    add openflow controller  s7  c1
    verify openflow controller  s7  c1
    [Tags]  t5  platform  InitialConfig  feature  

Verify controller can be modified on Spine
    delete existing controllers  s7  c1
    delete existing controllers  s7  c2
    add openflow controller  s7  c1
    verify openflow controller  s7  c1
    delete existing controllers  s7  c1
    add openflow controller  s7  c2
    verify openflow controller  s7  c2
    [Tags]  t5  platform  InitialConfig  feature
    
Verify multiple openflow controllers can be configured on Spine
    delete existing controllers  s7  c1
    delete existing controllers  s7  c2
    add openflow controller  s7  c1
    verify openflow controller  s7  c1
    add openflow controller  s7  c2
    verify openflow controller  s7  c2    
    [Tags]  t5  platform  InitialConfig  feature
    

Verify Controller IP address is pingable from Leaf
    ping remote  s1
    [Tags]  t5  platform  InitialConfig  feature  
    
Verify Controller IP address is pingable from Spine
    ping remote  s7
    [Tags]  t5  platform  InitialConfig  feature

Configure DNS server and DNS Domain on Leaf. Verify you can ping www.bigswitch.com
    delete dns  s1  ${dns_server}  ${dns_domain}  
    configure dns domain  s1  ${dns_server}  ${dns_domain}
    Sleep  30
    cli ping from switch  s1  bigswitch.com
    [Tags]  t5  platform  InitialConfig  feature      

Configure DNS server and DNS Domain on Spine. Verify you can ping www.bigswitch.com
    delete dns  s7  ${dns_server}  ${dns_domain}
    configure dns domain  s7  ${dns_server}  ${dns_domain}
    Sleep  30
    cli ping from switch  s7  bigswitch.com
    [Tags]  t5  platform  InitialConfig  feature

Verify ntp on spine
    configure ntp server  s7  time-c.nist.gov
    Sleep  5
    verify ntp server  s7  time-c.nist.gov
    delete ntp  s7  time-c.nist.gov
    [Tags]  t5  platform  ntp  feature     

Verify ntp server on spine after process ntp restart
    configure ntp server  s7  time-c.nist.gov
    Sleep  5
    verify ntp server  s7  time-c.nist.gov
    bash restart process  s7  ntpd
    Sleep  5
    verify ntp server  s7  time-c.nist.gov    
    [Tags]  t5  platform  ntp  feature

Verify ntp on leaf
    configure ntp server  s2  time-c.nist.gov
    Sleep  5
    verify ntp server  s2  time-c.nist.gov
    delete ntp  s2  time-c.nist.gov
    [Tags]  t5  platform  ntp  feature     

Verify ntp server on leaf after process ntp restart
    configure ntp server  s2  time-c.nist.gov
    Sleep  5
    verify ntp server  s2  time-c.nist.gov
    bash restart process  s2  ntpd
    Sleep  5
    verify ntp server  s2  time-c.nist.gov    
    [Tags]  t5  platform  ntp  feature
    
Verify the Switch configuration after ZTN 
    Log    Step 1 - Verify the Switch Configuration after ZTN
    [Tags]  T5  switch  ZTN
    [Tags]  Manual-untested
    Manual untested 
    
Verify Switch connectivity after ZTN 
    Log    Step 1 - Verify Switch is pingable
    [Tags]  T5  switch  ZTN  
    [Tags]  Manual-untested
    Manual untested 
    
Verify Switch Configuration - Allowed or Not Allowed Configuration 
    Log    Step 1 - Verify the What Switch Configuration are allowwed Not Allowed
    [Tags]  T5  switch  ZTN  
    [Tags]  Manual-untested
    Manual untested 
    
Verify Switch DHCP address - Is it Configurable in ZTN
    [Tags]  T5  switch  ZTN  
    [Tags]  Manual-untested
    Manual untested 

Verify multiple SSH connections to Management Port 
    Log    Step 1 - Verify multiple SSH connections to Management Port
    [Tags]  T5  switch  InitialConfig
    [Tags]  Manual
    Manual Passed
    
Verify multiple telnet connections to Management Port 
    Log    Step 1 - Verify multiple telnet connections to Management Port
    [Tags]  T5  switch  InitialConfig
    [Tags]  Manual
    Manual Passed
  
Verify after failure of Master Controller switch connection with backup is re established
    Log    Step 1 - Both Controller connection is present 
    Log    Step 2 - Master Controller fails and connection is removed 
    Log    Step 3 - Connection to Back up controller is established
    [Tags]  T5  switch  HA 
    [Tags]  Manual
    Manual Passed
    
Verify after Master Controller comes back Connection reestablished 
    Log    Step 1 - Verify connection re-establishes after Master Controller connection comes back 
    Log    Step 2 - Verify the correct information for Master/Backup Controller
    [Tags]  T5  switch HA 
    [Tags]  Manual
    Manual Passed

    
### Section C : Admin/User Authentication 
###  
###

Verify all interfaces show up on Leaf (in show o/p from CLI)
    verify interfaces  s1
    [Tags]  t5  platform  Interface  feature     

Verify all interfaces show up on Spine (in show o/p from CLI)
    verify interfaces  s7
    [Tags]  t5  platform  Interface  feature

Shutdown an interface on switch and verify interface state is down
    shut interface  s1  ${intf_leaf1_h2}
    Sleep  5
    verify interface state  s1  ${intf_leaf1_h2}  down
    unshut interface  s1  ${intf_leaf1_h2}
    Sleep  15
    verify interface state  s1  ${intf_leaf1_h2}  up
    [Tags]  t5  platform  Interface  feature      

Verify Show version
    Log    Step 1 - Verify Show version
    [Tags]  Manual  CLI  Admin
     Manual Passed

Verify Show environment
    Log    Step 1 - Verify Show env
    [Tags]  Manual  CLI  Admin  jira-pan-667  
     Manual Failed

Verify Show interface
    Log    Step 1 - Verify Show interface
    [Tags]  Manual  CLI  interface  
     Manual Passed

Verify Show running-config
    Log    Step 1 - Verify Show running-config
    [Tags]  Manual  CLI  Admin  
     Manual Passed
       
Verify Admin save partial save config allowed config load reload merge override
    Log    Step 1 - Verify Admin save partial save config allowed config load reload merge override
    [Tags]  Manual-untested
    Manual untested
    
Verify Config commit error flag invalid config missing config part check 
    Log    Step 1 - Verify Config commit error flag invalid config missing config part check 
    [Tags]  Manual-untested
    Manual untested
    
Verify CLI reboot command option - Config persistent after save
    Log    Step 1 - Verify CLI reboot command option - Config persistent after save
    [Tags]  Manual-untested
    Manual untested
    
###
### Section I : Traffic Test Verification
###
###         

Verify that the various transceivers are detected in the uplink module and they are up and running 
    Log    Step 1 - Verify that the various transceivers are detected in the uplink module and they are up and running
    [Tags]  Manual-untested  interface  optics
    Manual untested

Verify interface op is consistent and as per spec in show interfaces op 
    Log    Step 1 - Verify interface op is consistent and as per spec in show interfaces op
    [Tags]  Manual  interface
    Manual Passed

Verify end-to-end ping system-test 
    Log    Step 1 - Verify end-to-end ping system-test
    [Tags]  Manual-untested  interface
    Manual untested

Verify auto-negotiation configurations work as expected 
    Log    Step 1 - Verify auto-negotiation configurations work as expected
    [Tags]  Manual-untested  interface
    Manual untested

Verify Auto- negotiation enabled on both ends of interface
    Log    Step 1 - Verify Auto- negotiation enabled on both ends of interface
    [Tags]  Manual-untested  interface
    Manual untested

Verify Speed/Duplex in ports 
    Log    Step 1 - Verify Speed/Duplex in ports
    [Tags]  Manual-untested  interface
    Manual untested

Verify interface state is reported correctly when cable is unplugged. 
    Log    Step 1 - Verify interface state is reported correctly when cable is unplugged. 
    [Tags]  Manual  interface
    Manual Passed

Verify that the options are maintained on the interface after the system reboot. 
    Log    Step 1 - Verify that the options are maintained on the interface after the system reboot.
    [Tags]  Manual-untested  interface
    Manual untested

Verify the logging of openflow events in the Switch 
    Log    Step 1 - Verify the openflow events are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the logging of interface events up down disable in the Switch 
    Log    Step 1 - Verify the interface events are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the logging of process events restart in the Switch 
    Log    Step 1 - Verify the process events are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the logging of PSU insertion removal error events in the Switch 
    Log    Step 1 - Verify the PSU insertion removal error events are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the logging of Error events management failure in the Switch 
    Log    Step 1 - Verify the Error events management failure are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the logging of optics cable type in the Switch 
    Log    Step 1 - Verify the optics cable type are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the logging of fan failure heat sensors high temp in the Switch 
    Log    Step 1 - Verify the fan failure heat sensors high temp are being Logged in switch syslog 
    [Tags]  Manual-untested  Logging
    Manual untested

Verify the debugging of environmental fan failure heat sensors high temp in the Switch 
    Log    Step 1 - Verify the environmental fan failure heat sensors high temp are being shown in switch 
    [Tags]  Manual-untested  Debug
    Manual untested

Verify the debugging of openFlow connection estabish disconnection in the Switch 
    Log    Step 1 - Verify the openFlow connection estabish disconnection are being Logged and show in switch 
    [Tags]  Manual-untested  Debug
    Manual untested

Verify the debugging of interface stats counters status in the Switch 
    Log    Step 1 - Verify the interface stats counters status can be shown in switch
    [Tags]  Manual-untested  Debug
    Manual untested

Verify the debugging of port group lag in the Switch 
    Log    Step 1 - Verify the port group lag can be shown in switch
    [Tags]  Manual-untested  Debug
    Manual untested

Verify the debugging of vlan in the Switch 
    Log    Step 1 - Verify the vlan can be shown in switch
    [Tags]  Manual-untested  Debug
    Manual untested

Verify the debugging of vns in the Switch 
    Log    Step 1 - Verify the vns can be shown in switch
    [Tags]  Manual-untested  Debug
    Manual untested
    
Verify the debugging of forwarding programming in the Switch 
    Log    Step 1 - Verify the forwarding programming can be shown in switch
    [Tags]  Manual-untested  Debug
    Manual untested



* Keywords
      
T5 switch platform test setup
   base suite setup
   rest add switch  ${switch1_name}
   ${swDpid1}=  rest return switch dpid from ip  s1
   rest add dpid  ${switch1_name}   ${swDpid1}
   rest add fabric role  ${switch1_name}  leaf
      
   rest add switch  ${switch2_name}
   ${swDpid2}=  rest return switch dpid from ip  s2
   rest add dpid  ${switch2_name}   ${swDpid2}
   rest add fabric role  ${switch2_name}  leaf
   
   rest add switch  ${switch7_name}
   ${swDpid7}=  rest return switch dpid from ip  s7
   rest add dpid  ${switch7_name}   ${swDpid7}
   rest add fabric role  ${switch7_name}  spine
                
T5 switch platform test teardown
   rest delete tenant  ${tenant}  
   rest delete fabric switch  ${switch1_name} 
   rest delete fabric switch  ${switch2_name}
   rest delete fabric switch  ${switch7_name}
   base test teardown
   sleep  5   

verify openflow aux channel  [Arguments]  ${switch}  ${cntrlr} 
	${ofAux}=   cli return ofaux channel count  ${switch}  ${cntrlr} 
	Should contain  ${ofAux}  3    

verify ofaux channel on controller  [Arguments]  ${controller}  ${switch}
        ${ofAux}=   cli return ofaux connection from alias  ${cntrlr}  ${switch_alias}
	

verify onie installated on switch  [Arguments]  ${switch}    
#    ${result1}=  bash execute command  ${switch}  cat /proc/mtd
	${result1}=  bash  s1  cat /proc/mtd  
    Should contain  ${result1['content']}  onie 
    

add interface to vns snake config   [Arguments]  ${tenant}  ${count}
    ${range}=  Evaluate  ${count} + 1
    : FOR  ${i}  IN RANGE  1  ${range}
    \  Log  ${i} 
    \  Log  ${j}
    \  ${vns_name}=  Evaluate  str('v') + str(${i})
    \  ${intf_name_1}=  Evaluate  str('ethernet') + str(${j})
    \  ${k}=  Evaluate  ${j} + 1
    \  ${intf_name_2}=  Evaluate  str('ethernet') + str(${k})          
    \  rest add interface to vns  ${tenant}  ${vns_name}  ${switch_alias}  ${intf_name_1}  -1
    \  rest add interface to vns  ${tenant}  ${vns_name}  ${switch_alias}  ${intf_name_2}  -1
    \  ${j}=  Evaluate  ${j} + 2
        
delete interface from vns snake config   [Arguments]  ${tenant}  ${count}
    ${range}=  Evaluate  ${count} + 1
    : FOR  ${i}  IN RANGE  1  ${range}
    \  Log  ${i} 
    \  Log  ${j}
    \  ${vns_name}=  Evaluate  str('v') + str(${i})
    \  ${intf_name_1}=  Evaluate  str('ethernet') + str(${j})
    \  ${k}=  Evaluate  ${j} + 1
    \  ${intf_name_2}=  Evaluate  str('ethernet') + str(${k})          
    \  rest delete interface from vns  ${tenant}  ${vns_name}  ${switch_alias}  ${intf_name_1}  -1
    \  rest delete interface from vns  ${tenant}  ${vns_name}  ${switch_alias}  ${intf_name_2}  -1
    \  ${j}=  Evaluate  ${j} + 2
    
delete existing controllers  [Arguments]  ${switch}  ${controller}
    ${ret_value_1}=  cli delete controller  ${switch}  ${controller}
    Should Be True  ${ret_value_1}

add openflow controller  [Arguments]  ${switch}  ${controller}
    ${ret_value_1}=  cli add controller  ${switch}  ${controller}
    Should Be True  ${ret_value_1}    

verify openflow controller  [Arguments]  ${switch}  ${controller}
    ${ret_value_1}=  cli verify controller  ${switch}  ${controller}
    Should Be True  ${ret_value_1}
 
ping remote  [Arguments]  ${remote}
    ${ret_value_1}=  ping from local  ${remote}
    Should Be True  ${ret_value_1}

ping from switch  [Arguments]  ${switch}  ${remote} 
    ${ret_value_1}=  cli ping from switch  ${switch}  ${remote}
    Should Be True  ${ret_value_1}  

configure dns domain  [Arguments]  ${switch}  ${dns_server}  ${dns_domain}  
    ${ret_value_1}=  cli add dns server domain  ${switch}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}

verify interfaces  [Arguments]  ${switch}
    cli show all interfaces  ${switch}

shut interface  [Arguments]  ${switch}  ${interface}
    ${ret_value_1}=  cli disable interface  ${switch}  ${interface}
    Should Be True  ${ret_value_1}    

verify interface state  [Arguments]  ${switch}  ${interface}  ${state}
    ${ret_value_1}=  cli show interface state  ${switch}  ${interface}
    Should Contain  ${ret_value_1}  ${state}  

unshut interface  [Arguments]  ${switch}  ${interface}
    ${ret_value_1}=  cli enable interface  ${switch}  ${interface}
    Should Be True  ${ret_value_1}

delete static ip  [Arguments]  ${switch}  ${netmask}  ${gateway}
    ${ret_value_1}=  cli delete static ip  ${switch}  ${netmask}  ${gateway}
    Should Be True  ${ret_value_1}

add static ip  [Arguments]  ${switch}  ${netmask}  ${gateway}
    ${ret_value_1}=  cli add static ip  ${switch}  ${netmask}  ${gateway}
    Should Be True  ${ret_value_1}

delete dns  [Arguments]  ${switch}  ${dns_server}  ${dns_domain}
    ${ret_value_1}=  cli delete dns server domain  ${switch}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}
    
add dns  [Arguments]  ${switch}  ${dns_server}  ${dns_domain}
    ${ret_value_1}=  cli add dns server domain  ${switch}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}

verify ip dns  [Arguments]  ${switch}  ${netmask}  ${gateway}  ${dns_server}  ${dns_domain}  
    ${ret_value_1}=  cli verify ip dns  ${switch}  ${netmask}  ${gateway}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}

configure ntp server  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  add ntp server  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}
 
verify ntp server  [Arguments]  ${switch}  ${ntp_server}
     ${ret_value_1}=  verify ntp  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}

delete ntp  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  delete ntp server  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}
    