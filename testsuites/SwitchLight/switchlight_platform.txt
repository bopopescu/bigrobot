*Settings
Documentation  SwitchLight Platform Test Suite
Suite Setup  base suite setup
Suite Teardown   base suite teardown
Test Setup   base test setup
Test Teardown   base test teardown
Force Tags   platform Sanity
Library  keywords/BsnCommon.py
Library  keywords/SwitchLight.py

* Variable
${switchlight_version}  SwitchLight
${netmask}  18
${gateway}  10.192.64.1
${dns_server}  10.192.3.1
${dns_domain}  bigswitch.com

*Test Case
 
Verify one openflow controller can be configured
    delete existing controllers  s1  c1
    delete existing controllers  s1  c2
    add openflow controller  s1  c1
    verify openflow controller  s1  c1
    [Tags]  t5  platform  

Verify controller can be modified 
    delete existing controllers  s1  c1
    delete existing controllers  s1  c2
    add openflow controller  s1  c1
    verify openflow controller  s1  c1
    delete existing controllers  s1  c1
    add openflow controller  s1  c2
    verify openflow controller  s1  c2
    [Tags]  t5  platform  

Verify multiple openflow controllers can be configured
    delete existing controllers  s1  c1
    delete existing controllers  s1  c2
    add openflow controller  s1  c1
    verify openflow controller  s1  c1
    add openflow controller  s1  c2
    verify openflow controller  s1  c2    
    [Tags]  t5  platform  

T5987: Verify Controller IP address is pingable
    ping remote  s1
    [Tags]  t5  platform  

T5988: Configure DNS server and DNS Domain. Verify you can ping www.bigswitch.com
    configure dns domain  s1  ${dns_server}  ${dns_domain}
    Sleep  30
    cli ping from switch  s1  bigswitch.com
    [Tags]  t5  platform      

T5981: Verify all interfaces show up (in show o/p from CLI)
    verify interfaces  s1
    [Tags]  t5  platform      
 
Shutdown an interface and verify interface state is down
    shut interface  s1  ethernet1
    Sleep  5
    verify interface state  s1  ethernet1  down
    unshut interface  s1  ethernet1
    Sleep  15
    verify interface state  s1  ethernet1  up
    [Tags]  t5  platform  jira-pan-741       

T5983: Verify ma1 ip address configuration via static config
    delete static ip  s1  ${netmask}  ${gateway}
    delete dns  s1  ${dns_server}  ${dns_domain}  
    Sleep  5
    add static ip  s1  ${netmask}  ${gateway}
    add dns  s1  ${dns_server}  ${dns_domain}
    Sleep  60
    verify ip dns  s1  ${netmask}  ${gateway}  ${dns_server}  ${dns_domain}
    [Tags]  t5  platform    
    
Verify cli:show forwarding crc status
    enable crc forwarding  s1
    Sleep  5
    verify crc is enabled  s1
    disable crc forwarding  s1
    Sleep  5
    verify crc is disabled  s1
    [Tags]  sanity  JIRA_PAN_651        

Verify ntp
    configure ntp server  s1  time-c.nist.gov
    Sleep  5
    verify ntp server  s1  time-c.nist.gov
    delete ntp  s1  time-c.nist.gov
    [Tags]  t5  platform  ntp     

Verify ntp server after process ntp restart
    configure ntp server  s1  time-c.nist.gov
    Sleep  5
    verify ntp server  s1  time-c.nist.gov
    bash restart process  s1  ntpd
    Sleep  5
    verify ntp server  s1  time-c.nist.gov    
    [Tags]  t5  platform  ntp
        
* Keywords 

delete existing controllers  [Arguments]  ${switch}  ${controller}
    ${ret_value_1}=  cli delete controller  ${switch}  ${controller}
    Should Be True  ${ret_value_1}

add openflow controller  [Arguments]  ${switch}  ${controller}
    ${ret_value_1}=  cli add controller  ${switch}  ${controller}
    Should Be True  ${ret_value_1}    

verify openflow controller  [Arguments]  ${switch}  ${controller}
    ${ret_value_1}=  cli verify controller  ${switch}  ${controller}
    Should Be True  ${ret_value_1}
 
ping remote  [Arguments]  ${remote}
    ${ret_value_1}=  ping from local  ${remote}
    Should Be True  ${ret_value_1}

ping from switch  [Arguments]  ${switch}  ${remote} 
    ${ret_value_1}=  cli ping from switch  ${switch}  ${remote}
    Should Be True  ${ret_value_1}  

configure dns domain  [Arguments]  ${switch}  ${dns_server}  ${dns_domain}  
    ${ret_value_1}=  cli add dns server domain  ${switch}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}

verify interfaces  [Arguments]  ${switch}
    cli show interfaces  ${switch}

shut interface  [Arguments]  ${switch}  ${interface}
    ${ret_value_1}=  cli disable interface  ${switch}  ${interface}
    Should Be True  ${ret_value_1}    

verify interface state  [Arguments]  ${switch}  ${interface}  ${state}
    ${ret_value_1}=  cli show interface state  ${switch}  ${interface}
    Should Contain  ${ret_value_1}  ${state}  

unshut interface  [Arguments]  ${switch}  ${interface}
    ${ret_value_1}=  cli enable interface  ${switch}  ${interface}
    Should Be True  ${ret_value_1}

delete static ip  [Arguments]  ${switch}  ${netmask}  ${gateway}
    ${ret_value_1}=  cli delete static ip  ${switch}  ${netmask}  ${gateway}
    Should Be True  ${ret_value_1}

add static ip  [Arguments]  ${switch}  ${netmask}  ${gateway}
    ${ret_value_1}=  cli add static ip  ${switch}  ${netmask}  ${gateway}
    Should Be True  ${ret_value_1}

delete dns  [Arguments]  ${switch}  ${dns_server}  ${dns_domain}
    ${ret_value_1}=  cli delete dns server domain  ${switch}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}
    
add dns  [Arguments]  ${switch}  ${dns_server}  ${dns_domain}
    ${ret_value_1}=  cli add dns server domain  ${switch}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}

verify ip dns  [Arguments]  ${switch}  ${netmask}  ${gateway}  ${dns_server}  ${dns_domain}  
    ${ret_value_1}=  cli verify ip dns  ${switch}  ${netmask}  ${gateway}  ${dns_server}  ${dns_domain}
    Should Be True  ${ret_value_1}

enable crc forwarding  [Arguments]  ${switch}
    ${ret_value_1}=  cli enable crc forwarding  ${switch}
    Should Be True  ${ret_value_1}

verify crc is enabled  [Arguments]  ${switch}
    ${ret_value_1}=  cli verify crc forwarding is enabled  ${switch}
    Should Be True  ${ret_value_1}
    
verify crc is disabled  [Arguments]  ${switch}
    ${ret_value_1}=  cli verify crc forwarding is disabled  ${switch}
    Should Be True  ${ret_value_1}

disable crc forwarding  [Arguments]  ${switch}
    ${ret_value_1}=  cli disable crc forwarding  ${switch}
    Should Be True  ${ret_value_1}

configure ntp server  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  add ntp server  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}
 
verify ntp server  [Arguments]  ${switch}  ${ntp_server}
     ${ret_value_1}=  verify ntp  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}

delete ntp  [Arguments]  ${switch}  ${ntp_server}
    ${ret_value_1}=  delete ntp server  ${switch}  ${ntp_server}  
    Should Be True  ${ret_value_1}
