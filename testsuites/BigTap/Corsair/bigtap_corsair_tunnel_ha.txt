*Settings
Documentation           Corsair Tunnelling Test Suite
Suite Setup             corsair suite setup
Suite Teardown          corsair suite teardown
Test Setup              corsair test setup
Test Teardown           corsair test teardown 
Force Tags              BigTap  corsair-400  Accton-AS4600  Accton-AS5610  Accton-AS5710  Accton-AS6700  tunnel
Library                 keywords/BsnCommon.py
Library                 keywords/AppController.py
Library                 keywords/BigTap.py
Library                 keywords/SwitchLight.py
Library                 keywords/Ixia.py
Library                 keywords/ThirdParty.py
Library                 Collections.py
Library                 OperatingSystem.py
Library                 String.py

####### TOPOLOGY
##
##   ixia-->s1(ac4600-1) -->s7(extreme1)-->s2(ac4600-1)-->ixia
##   ixia-->s5(ac5710-4) -->s4(ac6700-1)-->s8(arista-1)-->s3(ac5610-1)-->ixia
##
####### TOPOLOGY

* Variable
${switch1_alias}                        app-ac4600-1  #Alias for switch 1
${switch2_alias}                        app-ac4600-2  #Alias for switch 2
${switch3_alias}                        app-ac5710-4  #Alias for switch 3
${switch4_alias}                        app-ac6700-1  #Alias for switch 4
${switch5_alias}                        app-ac5610-1  #Alias for switch 8

## Switch 1: app-ac4600-1
${switch1_filter_intf}                      ethernet1       #filter interface on switch scale-ac4600-1
${switch1_filter_alias}                     ixia-2-1        #Alias for filter interface on switch scale-ac4600-1
${vlan_rewrite_1}                           100
${switch1_delivery_intf}                    ethernet2       #Delivery interface on switch scale-ac4600-1
${switch1_delivery_alias}                   ixia-2-2        #Alias for delivery interface on switch scale-ac4600-1

${tunnel_sw1_name}                          tunnel1                 #Tunnel Name
${tunnel_sw1_parent_intf}                   ethernet5               #Tunnel Parent Interface
${tunnel_sw1_sip}                           192.168.43.1            #Tunnel Source IP
${tunnel_sw1_dip}                           192.168.67.1            #Tunnel Destination IP
${tunnel_sw1_gip}                           192.168.43.2            #Tunnel Gateway IP
${tunnel_sw1_mask}                          255.255.255.0           #Tunnel Subnet Mask
${tunnel_sw1_loopback}                      ethernet52              #Tunnel Loopback Interface
${tunnel_sw1_alias}                         extreme1_sw1_delivery_intf
${extreme1_sw1_tunnel_name}                 tunnel1
${extreme1_sw1_tunnel_intf1}                5
${extreme1_sw1_tunnel_ip}                   192.168.43.2  
${extreme1_sw1_tunnel_mask}                 255.255.255.0


## Switch 2: app-ac4600-2
${switch2_filter_intf}                      ethernet1       #filter interface on switch scale-ac4600-1
${switch2_filter_alias}                     ixia-2-5        #Alias for filter interface on switch scale-ac4600-1
${vlan_rewrite_2}                           101
${switch2_delivery_intf}                    ethernet2       #Delivery interface on switch scale-ac4600-1
${switch2_delivery_alias}                   ixia-2-6        #Alias for delivery interface on switch scale-ac4600-1

${tunnel_sw2_name}                      tunnel2          #Tunnel Name
${tunnel_sw2_parent_intf}               ethernet9        #Tunnel Parent Interface
${tunnel_sw2_sip}                       192.168.67.1     #Tunnel Source IP
${tunnel_sw2_dip}                       192.168.43.1     #Tunnel Destination IP
${tunnel_sw2_gip}                       192.168.67.2     #Tunnel Gateway IP
${tunnel_sw2_mask}                      255.255.255.0    #Tunnel Subnet Mask
${tunnel_sw2_loopback}                  ethernet3        #Tunnel Loopback Interface
${tunnel_sw2_alias}                     extreme1_sw2_filter_intf
${extreme1_sw2_tunnel_name}             tunnel2
${extreme1_sw2_tunnel_intf1}            9
${extreme1_sw2_tunnel_ip}               192.168.67.2  
${extreme1_sw2_tunnel_mask}             255.255.255.0

## Switch 3: app-ac5710-4
${switch3_filter_intf}                  ethernet1       #filter interface on switch scale-ac4600-1
${switch3_filter_alias}                 ixia-1-5        #Alias for filter interface on switch scale-ac4600-1
${switch3_delivery_intf}                ethernet2       #Delivery interface on switch scale-ac4600-1
${vlan_rewrite_3}                           102
${switch3_delivery_alias}               ixia-1-6        #Alias for delivery interface on switch scale-ac4600-1
${core_interface_as5710}                ethernet49       #Core interface between app-ac5710-4 and app-ac6700-1

${tunnel_sw3_name}                      tunnel3          #Tunnel Name
${tunnel_sw3_parent_intf}               ethernet51       #Tunnel Parent Interface
${tunnel_sw3_sip}                       192.168.22.1     #Tunnel Source IP
${tunnel_sw3_dip}                       192.168.29.1     #Tunnel Destination IP
${tunnel_sw3_gip}                       192.168.22.2     #Tunnel Gateway IP
${tunnel_sw3_mask}                      255.255.255.0    #Tunnel Subnet Mask
${tunnel_sw3_loopback}                  ethernet3        #Tunnel Loopback Interface
${arista1_sw3_tunnel_name}              tunnel3
${arista1_sw3_tunnel_intf1}             Et51/1
${arista1_sw3_tunnel_ip}                192.168.22.2  
${arista1_sw3_tunnel_mask}              255.255.255.0

## Switch 4: app-ac6700-1

${tunnel_sw4_name}                      tunnel4         #Tunnel Name
${tunnel_sw4_parent_intf}               ethernet5        #Tunnel Parent Interface
${tunnel_sw4_sip}                       192.168.29.1     #Tunnel Source IP
${tunnel_sw4_dip}                       192.168.22.1     #Tunnel Destination IP
${tunnel_sw4_gip}                       192.168.29.2     #Tunnel Gateway IP
${tunnel_sw4_mask}                      255.255.255.0    #Tunnel Subnet Mask
${tunnel_sw4_loopback}                  ethernet10       #Tunnel Loopback Interface
${arista1_sw4_tunnel_name}              tunnel4
${arista1_sw4_tunnel_intf1}             Et49/1
${arista1_sw4_tunnel_ip}                192.168.29.2  
${arista1_sw4_tunnel_mask}              255.255.255.0

## Switch 5: app-ac5610-1
${switch5_filter_intf}                  ethernet1       #filter interface on switch scale-ac5610-1
${switch5_filter_alias}                 ixia-1-1        #Alias for filter interface on switch scale-ac5610-1
${vlan_rewrite_4}                           103
${switch5_delivery_intf}                ethernet2       #Delivery interface on switch scale-ac5610-1
${switch5_delivery_alias}               ixia-1-2        #Alias for delivery interface on switch scale-ac5610-1


${policy_name_1}                        tunnel_based_policy_as4600_1_2
${policy_name_2}                        tunnel_based_policy_as4600_2_1
${policy_name_3}                        tunnel_based_policy_as5710_as6700
${policy_name_4}                        tunnel_based_policy_as6700_a5710

${tunnel_pre_service}                   tunnel_pre_service
${tunnel_post_service}                  tunnel_post_service
${tunnel_service_name}                  tunnel_based_service

${policy_name_overlap_1}                P1
${policy_name_overlap_2}                ZP1
${policy_overlap}                       _ZP1_o_P1

*Test Case

TC1:AS4600:Verify bidirectional tunnel interface
    ${verify_tun_sw1}=  rest verify tunnel status  s1  ${tunnel_sw1_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw1_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw1_sip}  dip=${tunnel_sw1_dip}  mask=${tunnel_sw1_mask}  gip=${tunnel_sw1_gip}      
    Should be true  ${verify_tun_sw1}
    ${verify_tun_sw2}=  rest verify tunnel status  s2  ${tunnel_sw2_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw2_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw2_sip}  dip=${tunnel_sw2_dip}  mask=${tunnel_sw2_mask}  gip=${tunnel_sw2_gip}      
    Should be true  ${verify_tun_sw2}
    [Tags]  full  feature   Accton-AS4600  Accton-AS5710  Accton-AS6700  

TC2:AS5710:Verify bidirectional tunnel interface
    ${verify_tun_sw5}=  rest verify tunnel status  s3  ${tunnel_sw3_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw3_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw3_sip}  dip=${tunnel_sw3_dip}  mask=${tunnel_sw3_mask}  gip=${tunnel_sw3_gip}      
    Should be true  ${verify_tun_sw5}
    [Tags]  full  feature  Accton-AS4600  Accton-AS5710  Accton-AS6700  

TC3:AS6700:Verify bidirectional tunnel interface   
    ${verify_tun_sw8}=  rest verify tunnel status  s4  ${tunnel_sw4_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw4_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw4_sip}  dip=${tunnel_sw4_dip}  mask=${tunnel_sw4_mask}  gip=${tunnel_sw4_gip}      
    Should be true  ${verify_tun_sw8}
    [Tags]  full  feature  Accton-AS4600  Accton-AS5710  Accton-AS6700  

TC4:Verify policies across Accton 4600 platform are up
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${verify_policy2}=  rest verify bigtap policy  ${policy_name_2}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy2}
    [Tags]  full  feature  Accton-AS4600  Accton-AS5710  Accton-AS6700  
    
TC5:Verify policies across Accton 5710 and Accton 6700 platform are up
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_3}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${verify_policy2}=  rest verify bigtap policy  ${policy_name_4}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy2}
    [Tags]  full  feature  Accton-AS4600  Accton-AS5710  Accton-AS6700  
    
TC6:Verify end-to-end traffic (Accton 4600<==>Accton 4600)
    delete traffic
    sleep  10
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  frame_cnt=100000  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    clear stats    
    start traffic  ${stream_12}
    sleep  10
    stop traffic  ${stream_12} 
    sleep  2    
    verify results  a  d  transmitted_frames  received_data_integrity_frames
    clear stats                
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  frame_cnt=100000  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    clear stats    
    start traffic  ${stream_21}
    sleep  10
    stop traffic  ${stream_21} 
    sleep  2    
    verify results  b  c  transmitted_frames  received_data_integrity_frames
    delete traffic  
    [Tags]  full  feature  traffic  Accton-AS4600

TC7:Verify end-to-end traffic (Accton 5710<==>Accton 6700)
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  frame_cnt=100000  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    clear stats
    start traffic  ${stream_5710_5610}
    sleep  10
    stop traffic  ${stream_5710_5610} 
    sleep  2    
    verify results  e  h  transmitted_frames  received_data_integrity_frames
    clear stats                
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  frame_cnt=100000  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    start traffic  ${stream_5610_5710}
    sleep  10
    stop traffic  ${stream_5610_5710} 
    sleep  2    
    verify results  g  f  transmitted_frames  received_data_integrity_frames           
    delete traffic  
    [Tags]  full  feature  traffic  Accton-AS5710  Accton-AS6700

TC8:Switch HA: Restart Process OFAD on app-as4600-1
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}                      
    bash restart process  s1  ofad
    Sleep  120
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}   
    sleep  10
    delete traffic  
    [Tags]  ha  robustness  full  traffic  Accton-AS4600  process-restart  switch

TC9:Switch HA: Restart Process OFAD on app-as4600-2
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}                      
    bash restart process  s2  ofad
    Sleep  120
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}       
    delete traffic  
    [Tags]  ha  robustness  full  traffic  Accton-AS4600  process-restart  switch

TC10:Switch HA: Restart Process OFAD on as5710
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}                      
    bash restart process  s3  ofad
    Sleep  120
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  traffic  Accton-AS5710  process-restart  switch

TC11:Switch HA: Restart Process OFAD on as6700
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}                      
    bash restart process  s4  ofad  timeout=90
    Sleep  60
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}               
    delete traffic  
    [Tags]  ha  robustness  full  traffic  Accton-AS6700  process-restart  switch


TC12:Switch HA: Restart Process networking on app-as4600-1
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    bash restart process  s1  networking
    Sleep  90
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS4600  traffic  process-restart  switch


TC13:Switch HA: Restart Process networking on app-as4600-2
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    bash restart process  s2  networking
    Sleep  90
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS4600  traffic  process-restart  switch

TC14:Switch HA: Restart Process networking on as5710
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    bash restart process  s3  networking
    Sleep  90
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS5710  traffic  process-restart  switch

TC15:Switch HA: Restart Process networking on as6700
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    bash restart process  s4  networking
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS6700  traffic  process-restart  switch
    
TC16:Switch HA: Restart switch app-as4600-1
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    cli restart switch  s1  save_config="yes"
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS4600  traffic  reboot  switch
    
TC17:Switch HA: Restart switch app-as4600-2
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    cli restart switch  s2  save_config="yes"
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS4600  traffic  reboot  switch
    
TC18:Switch HA: Restart switch as5710
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    cli restart switch  s3  save_config="yes"
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS5710  traffic  reboot  switch
    
TC19:Switch HA: Restart switch as6700
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    cli restart switch  s4  save_config="yes"
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  Accton-AS6700  traffic  reboot  switch
       
TC20:Controller HA: Restart process floodlight on active controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    restart process on controller  floodlight  Master
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  traffic  controller  process-restart

TC21:Controller HA: Restart process floodlight on standby controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    restart process on controller  floodlight  Slave
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  traffic  controller  process-restart


TC22:Controller HA: Restart process keepalived on active controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    restart process on controller  keepalived  Master
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic  process-restart

TC23:Controller HA: Restart process keepalived on standby controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    restart process on controller  keepalived  Slave
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic  process-restart

TC24:Controller HA: Restart process collectd on active controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    restart process on controller  collectd  Master
    Sleep  120
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic  process-restart

TC25:Controller HA: Restart process collectd on standby controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    restart process on controller  collectd  Slave
    Sleep  60
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic  process-restart

TC26:Controller HA: Execute HA Failover and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    rest execute ha failover
    Sleep  90
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic

TC27:Controller HA: Execute HA failback and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    rest execute ha failover
    Sleep  90
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic

TC28:Controller HA: Flap eth0 on active controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    flap eth0 controller  Master
    Sleep  60
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic

TC29:Controller HA: Flap eth0 on standby controller and verify tunnel status
    delete traffic
    sleep  10    
    ${stream_5710_5610}=  L3 add  flow=e->h  frame_rate=10000  frame_size=1518  name=e_h_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2
    ${stream_5610_5710}=  L2 add  flow=g->f  frame_rate=10000  frame_size=128  name=g_f_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_12}=  L2 add  flow=a->d  frame_rate=10000  frame_size=64  name=a_d_flow
    ...     src_mac=00:11:00:00:00:01  dst_mac=00:11:00:00:00:02  ethertype=0800  no_arp=True
    ${stream_21}=  L3 add  flow=c->b  frame_rate=10000  frame_size=1518  name=c_b_flow  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  ethertype=0800  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2    
    start traffic  ${stream_5710_5610}
    start traffic  ${stream_5610_5710}
    start traffic  ${stream_12}
    start traffic  ${stream_21}
    sleep  10
    verify tunnel status
    verify traffic rate across tunnels    
    flap eth0 controller  Slave
    Sleep  60
    verify tunnel status
    verify traffic rate across tunnels    
    sleep  10
    stop traffic  ${stream_5710_5610}
    stop traffic  ${stream_5610_5710}
    stop traffic  ${stream_12}
    stop traffic  ${stream_21}              
    delete traffic  
    [Tags]  ha  robustness  full  controller  traffic


* Keyword
verify results   [Arguments]  ${send_port}  ${recv_port}  ${transmitted_frames}  ${received_valid_frames}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${send_port}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${recv_port}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}
    Should be true  ${in_range}
    
extreme tunnel setup   [Arguments]  ${node}  ${tunnel_name}  ${tunnel_port}  ${tunnel_address}  ${tunnel_mask}
    config  ${node}  create vlan ${tunnel_name}
    config  ${node}  configure vlan ${tunnel_name} add ports ${tunnel_port} untagged
    config  ${node}  configure vlan ${tunnel_name} ipaddress ${tunnel_address} ${tunnel_mask}
    config  ${node}  enable ipforwarding vlan ${tunnel_name}
    config  ${node}  configure ip-mtu 9194 vlan ${tunnel_name} 
    extreme save config  ${node}  
    node disconnect  ${node}  

change tunnel direction to txrx
    ${verify_add_tun_sw1}=  rest add tunnel interface  s1  ${tunnel_sw1_name}  loopback=${tunnel_sw1_loopback}  pinterface=${tunnel_sw1_parent_intf}  tdirection=tx  sip=${tunnel_sw1_sip}  dip=${tunnel_sw1_dip}  mask=${tunnel_sw1_mask}  gip=${tunnel_sw1_gip}
    Should be true  ${verify_add_tun_sw1}          
    ${verify_add_tun_sw2}=  rest add tunnel interface  s2  ${tunnel_sw2_name}  pinterface=${tunnel_sw2_parent_intf}  tdirection=rx  sip=${tunnel_sw2_sip}  dip=${tunnel_sw2_dip}  mask=${tunnel_sw2_mask}  gip=${tunnel_sw2_gip}
    Should be true  ${verify_add_tun_sw2}          
    ${verify_add_tun_sw3}=  rest add tunnel interface  s3  ${tunnel_sw3_name}  loopback=${tunnel_sw3_loopback}  pinterface=${tunnel_sw3_parent_intf}  tdirection=tx  sip=${tunnel_sw3_sip}  dip=${tunnel_sw3_dip}  mask=${tunnel_sw3_mask}  gip=${tunnel_sw3_gip}
    Should be true  ${verify_add_tun_sw3}          
    ${verify_add_tun_sw4}=  rest add tunnel interface  s4  ${tunnel_sw4_name}  pinterface=${tunnel_sw4_parent_intf}  tdirection=rx  sip=${tunnel_sw4_sip}  dip=${tunnel_sw4_dip}  mask=${tunnel_sw4_mask}  gip=${tunnel_sw4_gip}
    Should be true  ${verify_add_tun_sw4}          
    sleep  10

change tunnel direction to bidir
    ${verify_add_tun_sw1}=  rest add tunnel interface  s1  ${tunnel_sw1_name}  loopback=${tunnel_sw1_loopback}  pinterface=${tunnel_sw1_parent_intf}  tdirection=bidir  sip=${tunnel_sw1_sip}  dip=${tunnel_sw1_dip}  mask=${tunnel_sw1_mask}  gip=${tunnel_sw1_gip}
    Should be true  ${verify_add_tun_sw1}          
    ${verify_add_tun_sw2}=  rest add tunnel interface  s2  ${tunnel_sw2_name}  loopback=${tunnel_sw2_loopback}  pinterface=${tunnel_sw2_parent_intf}  tdirection=bidir  sip=${tunnel_sw2_sip}  dip=${tunnel_sw2_dip}  mask=${tunnel_sw2_mask}  gip=${tunnel_sw2_gip}
    Should be true  ${verify_add_tun_sw2}          
    ${verify_add_tun_sw3}=  rest add tunnel interface  s3  ${tunnel_sw3_name}  loopback=${tunnel_sw3_loopback}  pinterface=${tunnel_sw3_parent_intf}  tdirection=bidir  sip=${tunnel_sw3_sip}  dip=${tunnel_sw3_dip}  mask=${tunnel_sw3_mask}  gip=${tunnel_sw3_gip}
    Should be true  ${verify_add_tun_sw3}          
    ${verify_add_tun_sw4}=  rest add tunnel interface  s4  ${tunnel_sw4_name}  loopback=${tunnel_sw4_loopback}  pinterface=${tunnel_sw4_parent_intf}  tdirection=bidir  sip=${tunnel_sw4_sip}  dip=${tunnel_sw4_dip}  mask=${tunnel_sw4_mask}  gip=${tunnel_sw4_gip}
    Should be true  ${verify_add_tun_sw4}          
    sleep  10

verify tunnel status
    ${verify_tun_sw1}=  rest verify tunnel status  s1  ${tunnel_sw1_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw1_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw1_sip}  dip=${tunnel_sw1_dip}  mask=${tunnel_sw1_mask}  gip=${tunnel_sw1_gip}      
    Should be true  ${verify_tun_sw1}
    ${verify_tun_sw2}=  rest verify tunnel status  s2  ${tunnel_sw2_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw2_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw2_sip}  dip=${tunnel_sw2_dip}  mask=${tunnel_sw2_mask}  gip=${tunnel_sw2_gip}      
    Should be true  ${verify_tun_sw2}
    ${verify_tun_sw5}=  rest verify tunnel status  s3  ${tunnel_sw3_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw3_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw3_sip}  dip=${tunnel_sw3_dip}  mask=${tunnel_sw3_mask}  gip=${tunnel_sw3_gip}      
    Should be true  ${verify_tun_sw5}
    ${verify_tun_sw8}=  rest verify tunnel status  s4  ${tunnel_sw4_name}  tunnel_number=376  runtime_state=up  parent_interface=${tunnel_sw4_parent_intf}  tunnel_direction=bidir  sip=${tunnel_sw4_sip}  dip=${tunnel_sw4_dip}  mask=${tunnel_sw4_mask}  gip=${tunnel_sw4_gip}      
    Should be true  ${verify_tun_sw8}

verify traffic rate across tunnels
    verify results  a  d  transmitted_frame_rate  received_valid_frame_rate        
    verify results  c  b  transmitted_frame_rate  received_valid_frame_rate        
    verify results  e  h  transmitted_frame_rate  received_valid_frame_rate        
    verify results  g  f  transmitted_frame_rate  received_valid_frame_rate        

corsair test setup
    ${result}=  write version to file
    Should be true  ${result}
    ${result1}=  start syslog monitor
    Should be true  ${result1}
    
corsair test teardown
    ${result1}=  stop syslog monitor    
    Should be true  ${result1}
    
corsair suite setup
    base suite setup
    ${enable_tunnel}=  rest enable feature  tunneling
    Should be true  ${enable_tunnel}  
    ${enable_fmm}=  rest enable feature  full-match
    Should be true  ${enable_fmm}    
    rest add switch alias  s1  ${switch1_alias}
    rest add switch alias  s2  ${switch2_alias}
    rest add switch alias  s3  ${switch3_alias}
    rest add switch alias  s4  ${switch4_alias}
    rest add switch alias  s5  ${switch5_alias}    
    #CRC packets to be dropped
    bash  s1  ofad-ctl crc enable
    bash  s2  ofad-ctl crc enable
    bash  s3  ofad-ctl crc enable
    bash  s4  ofad-ctl crc enable    
    #Add ip address to 40G ports on arista
    cli arista add ip address  as7  192.168.29.2  30  Ethernet49/1  speed=forced 40gfull
    cli arista add ip address  as7  192.168.22.2  30  Ethernet51/1  speed=forced 40gfull                      
    cli arista add mtu interface  as7  Ethernet49/1  9212
    cli arista add mtu interface  as7  Ethernet51/1  9212     
    Sleep  10    
    #Setup tunnels across  Accton 4600 (app-ac4600-1)
    extreme tunnel setup  s6  ${extreme1_sw1_tunnel_name}  ${extreme1_sw1_tunnel_intf1}  ${extreme1_sw1_tunnel_ip}  ${extreme1_sw1_tunnel_mask}
    Sleep  5    
    ${verify_add_tun_sw1}=  rest add tunnel interface  s1  ${tunnel_sw1_name}  loopback=${tunnel_sw1_loopback}  pinterface=${tunnel_sw1_parent_intf}  tdirection=bidir  sip=${tunnel_sw1_sip}  dip=${tunnel_sw1_dip}  mask=${tunnel_sw1_mask}  gip=${tunnel_sw1_gip}
    Should be true  ${verify_add_tun_sw1}          
    Sleep  5
    #Setup tunnels across  Accton 4600 (app-ac4600-2)
    extreme tunnel setup  s6  ${extreme1_sw2_tunnel_name}  ${extreme1_sw2_tunnel_intf1}  ${extreme1_sw2_tunnel_ip}  ${extreme1_sw2_tunnel_mask}
    Sleep  5    
    ${verify_add_tun_sw2}=  rest add tunnel interface  s2  ${tunnel_sw2_name}  loopback=${tunnel_sw2_loopback}  pinterface=${tunnel_sw2_parent_intf}  tdirection=bidir  sip=${tunnel_sw2_sip}  dip=${tunnel_sw2_dip}  mask=${tunnel_sw2_mask}  gip=${tunnel_sw2_gip}
    Should be true  ${verify_add_tun_sw2}          
    Sleep  5

    #Setup tunnels across Accton 5710 (app-ac5710-4)
    ${verify_add_tun_sw3}=  rest add tunnel interface  s3  ${tunnel_sw3_name}  loopback=${tunnel_sw3_loopback}  pinterface=${tunnel_sw3_parent_intf}  tdirection=bidir  sip=${tunnel_sw3_sip}  dip=${tunnel_sw3_dip}  mask=${tunnel_sw3_mask}  gip=${tunnel_sw3_gip}
    Should be true  ${verify_add_tun_sw3}          
    Sleep  5      
    
    #Setup tunnels across Accton 6700 (app-ac6700-1)
    ${verify_add_tun_sw4}=  rest add tunnel interface  s4  ${tunnel_sw4_name}  loopback=${tunnel_sw4_loopback}  pinterface=${tunnel_sw4_parent_intf}  tdirection=bidir  sip=${tunnel_sw4_sip}  dip=${tunnel_sw4_dip}  mask=${tunnel_sw4_mask}  gip=${tunnel_sw4_gip}
    Should be true  ${verify_add_tun_sw4}          
    Sleep  5

    #Configure IXIA ports as filter ports
    ## On app-ac4600-1
    ${result}=  rest add interface role  s1  ${switch1_filter_intf}  filter  ${switch1_filter_alias}  rewrite_vlan=${vlan_rewrite_1}
    Should be true  ${result}  
    ## On app-ac4600-2
    ${result}=  rest add interface role  s2  ${switch2_filter_intf}  filter  ${switch2_filter_alias}  rewrite_vlan=${vlan_rewrite_2}
    Should be true  ${result}
    ## On app-ac5710-4
    ${result}=  rest add interface role  s3  ${switch3_filter_intf}  filter  ${switch3_filter_alias}  rewrite_vlan=${vlan_rewrite_3}
    Should be true  ${result}
    ## On app-ac5610-1      
    ${result}=  rest add interface role  s5  ${switch5_filter_intf}  filter  ${switch5_filter_alias}  rewrite_vlan=${vlan_rewrite_4}
    Should be true  ${result}

    #Configure IXIA ports as delivery ports
    ## On app-ac4600-1
    ${result}=  rest add interface role  s1  ${switch1_delivery_intf}  delivery  ${switch1_delivery_alias}
    Should be true  ${result}  
    ## On app-ac4600-2
    ${result}=  rest add interface role  s2  ${switch2_delivery_intf}  delivery  ${switch2_delivery_alias}
    Should be true  ${result}
    ## On app-ac5710-4
    ${result}=  rest add interface role  s3  ${switch3_delivery_intf}  delivery  ${switch3_delivery_alias}
    Should be true  ${result}
    ## On app-ac5610-1      
    ${result}=  rest add interface role  s5  ${switch5_delivery_intf}  delivery  ${switch5_delivery_alias}
    Should be true  ${result}
    
    #Configure policies as per Topology:
    ## Policies for traffic across ac4600's
    rest add policy  admin-view  ${policy_name_1}   forward
    rest add policy match  admin-view  ${policy_name_1}   1  {"src-mac": "00:11:00:00:00:01", "ether-type": 2048, "sequence": 1}
    rest add policy interface  admin-view  ${policy_name_1}   ${switch1_filter_alias}  filter
    rest add policy interface  admin-view  ${policy_name_1}   ${switch2_delivery_alias}  delivery 
    Sleep  5  
    rest add policy  admin-view  ${policy_name_2}   forward
    rest add policy match  admin-view  ${policy_name_2}   1  {"src-ip-mask": "255.255.255.255", "src-ip": "100.1.1.1", "sequence": 1}
    rest add policy interface  admin-view  ${policy_name_2}   ${switch2_filter_alias}  filter
    rest add policy interface  admin-view  ${policy_name_2}   ${switch1_delivery_alias}  delivery
    Sleep  60    
    ## Policies for traffic between ac5710 and ac700
    rest add policy  admin-view  ${policy_name_3}   forward
    rest add policy match  admin-view  ${policy_name_3}   1  {"sequence": 1, "dst-ip-mask": "255.255.255.255", "dst-ip": "100.1.1.2"}
    rest add policy interface  admin-view  ${policy_name_3}   ${switch3_filter_alias}  filter
    rest add policy interface  admin-view  ${policy_name_3}   ${switch5_delivery_alias}  delivery 
    Sleep  5  
    rest add policy  admin-view  ${policy_name_4}   forward
    rest add policy match  admin-view  ${policy_name_4}   1  {"dst-mac": "00:11:00:00:00:02", "ether-type": 2048, "sequence": 1}
    rest add policy interface  admin-view  ${policy_name_4}   ${switch5_filter_alias}  filter
    rest add policy interface  admin-view  ${policy_name_4}   ${switch3_delivery_alias}  delivery
    Sleep  60    
    
 
tunnel teardown
    ${verify_del_tun_sw1}=  rest delete tunnel interface  node=s1  tunnel_name=${tunnel_sw1_name}  
    Should be true  ${verify_del_tun_sw1}      
    ${verify_del_tun_sw2}=  rest delete tunnel interface  node=s2  tunnel_name=${tunnel_sw2_name}  
    Should be true  ${verify_del_tun_sw2}  
    ${verify_del_tun_sw3}=  rest delete tunnel interface  node=s3  tunnel_name=${tunnel_sw3_name}  
    Should be true  ${verify_del_tun_sw3}    
    ${verify_del_tun_sw4}=  rest delete tunnel interface  node=s4  tunnel_name=${tunnel_sw4_name}  
    Should be true  ${verify_del_tun_sw4}      
    Sleep  2
    
corsair suite teardown
    tunnel teardown
    #Delete previously added ip address to 40G ports on arista
    cli arista delete ip address  as7  192.168.29.2  30  Ethernet49/1  speed=forced 40gfull
    cli arista delete ip address  as7  192.168.22.2  30  Ethernet51/1  speed=forced 40gfull
    cli arista delete mtu interface  as7  Ethernet49/1  9212
    cli arista delete mtu interface  as7  Ethernet51/1  9212    
    REST delete policy  admin-view  ${policy_name_1}
    REST delete policy  admin-view  ${policy_name_2} 
    REST delete policy  admin-view  ${policy_name_3} 
    REST delete policy  admin-view  ${policy_name_4}            
    rest delete interface role  s1  ${switch1_filter_intf}  filter 
    rest delete interface role  s2  ${switch2_delivery_intf}   delivery    
    rest delete interface role  s3  ${switch3_filter_intf}  filter 
    rest delete interface role  s5  ${switch5_delivery_intf}   delivery    
    rest delete switch alias  s1
    rest delete switch alias  s2
    rest delete switch alias  s3
    rest delete switch alias  s4
    rest delete switch alias  s5    
    rest delete switch  s1
    rest delete switch  s2
    rest delete switch  s3
    rest delete switch  s4
    rest delete switch  s5    
    config  s6  delete vlan ${extreme1_sw1_tunnel_name}
    config  s6  delete vlan ${extreme1_sw2_tunnel_name}
    Sleep  2
    extreme save config  s6
    node disconnect  s6
    rest disable feature  tunneling    
    base suite teardown        
