*Settings
Documentation  BigTap High Availability Test Suite
Suite Setup  ha suite setup
Suite Teardown   ha suite teardown
Test Setup   base test setup
Test Teardown  ha test teardown 
Force Tags   bigtap  ha
Library  keywords/BsnCommon.py
Library  keywords/AppController.py
Library  keywords/BigTap.py
Library  keywords/SwitchLight.py
Library  keywords/Ixia.py

* Variable
${switchlight_version}  SwitchLight 2.0.1


${filter_1}  ethernet1  
${filter_nick_1}  F1
${filter_nick_1A}  FILTER1

${filter_2}  ethernet1  
${filter_nick_2}  F2

${delivery_1}  ethernet2  
${delivery_nick_1}  D1
${delivery_nick_1A}  DELIVERY1

${delivery_2}  ethernet2  
${delivery_nick_2}  D2
${delivery_nick_2A}  DELIVERY2
        
*Test Case
verify configuration is successful
    verify config
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  10
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    stop traffic  ${stream}    
    [Tags]  base 

Flap filter interface and verify traffic is restored        
    verify config
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  5
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    cli disable interface  s1  ${filter_1}
    sleep  5
    cli enable interface  s1  ${filter_1}
    sleep  5
    verify config
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate              
    stop traffic  ${stream}    
    [Tags]  filter 

Flap delivery interfaces and verify traffic is restored        
    verify config
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  5
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    cli disable interface  s1  ${delivery_1}
    cli disable interface  s1  ${delivery_2}    
    sleep  5
    cli enable interface  s1  ${delivery_1}
    cli enable interface  s1  ${delivery_2}    
    sleep  5
    verify config
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate              
    stop traffic  ${stream}    
    [Tags]  delivery 

Shutdown one core interface and verify traffic is unaffected        
    verify config
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  5
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    cli disable interface  s1  port-channel1
    sleep  5
    verify config
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    cli enable interface  s1  port-channel1
    sleep  5
    verify config
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate                      
    stop traffic  ${stream}    
    [Tags]  core 

Rename filter interface and verify traffic flow
    delete bigtap configuration
    base policy config  ${filter_1}  ${filter_2}  ${delivery_1}  ${delivery_2}  ${filter_nick_1A}  ${filter_nick_2}  ${delivery_nick_1}  ${delivery_nick_2}
    verify config
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  10
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    stop traffic  ${stream}
    rest delete policy  admin-view  P1
    rest delete policy  admin-view  ZP1
    base policy config  ${filter_1}  ${filter_2}  ${delivery_1}  ${delivery_2}  ${filter_nick_1}  ${filter_nick_2}  ${delivery_nick_1}  ${delivery_nick_2}    
    [Tags]  renameFilter

Rename delivery interface and verify traffic flow
    delete bigtap configuration
    base policy config  ${filter_1}  ${filter_2}  ${delivery_1}  ${delivery_2}  ${filter_nick_1}  ${filter_nick_2}  ${delivery_nick_1A}  ${delivery_nick_2A}
    verify config
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  10
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    stop traffic  ${stream}
    delete bigtap configuration
    base policy config  ${filter_1}  ${filter_2}  ${delivery_1}  ${delivery_2}  ${filter_nick_1}  ${filter_nick_2}  ${delivery_nick_1}  ${delivery_nick_2}    
    [Tags]  renameDelivery


Add and remove an additional filter interface to policy and verify no traffic drop is seen
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    sleep  5
    rest add policy interface  admin-view  P1  ${filter_nick_2}  filter    
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    sleep  5
    rest delete policy interface  admin-view  P1  ${filter_nick_2}  filter
    verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    verify results  a  transmitted_frame_rate  d  received_valid_frame_rate        
    stop traffic  ${stream}
    [Tags]  add-delete-filter
    
Deactivate and activate bigtap policy 50 times
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    :FOR  ${INDEX}  IN RANGE  1  50
    \   Log  ${INDEX}
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    \   rest update policy action  admin-view  P1  inactive
    \   sleep  2
    \   rest update policy action  admin-view  P1  forward
    \   sleep  2
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate        
    stop traffic  ${stream}
    [Tags]  activate-deactivate                   

Flap between action active and rate-measure in a bigtap policy 50 times
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    :FOR  ${INDEX}  IN RANGE  1  50
    \   Log  ${INDEX}
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    \   rest update policy action  admin-view  P1  rate-measure
    \   sleep  2
    \   rest update policy action  admin-view  P1  forward
    \   sleep  2
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate        
    stop traffic  ${stream}
    [Tags]  active-ratemeasure                   


Delete and re-add bigtap policy 50 times
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    :FOR  ${INDEX}  IN RANGE  1  50
    \   Log  ${INDEX}
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    \   rest delete policy  admin-view  P1
    \   rest delete policy  admin-view  ZP1 
    \   sleep  2
    \   base policy config  ${filter_1}  ${filter_2}  ${delivery_1}  ${delivery_2}  ${filter_nick_1}  ${filter_nick_2}  ${delivery_nick_1}  ${delivery_nick_2}
    \   sleep  2
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate        
    stop traffic  ${stream}
    [Tags]  delete-add                   

Enable and disable feature overlap 50 times     
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    :FOR  ${INDEX}  IN RANGE  1  50
    \   Log  ${INDEX}
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    \   rest disable feature  overlap
    \   sleep  2
    \   rest enable feature  overlap
    \   sleep  2
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate        
    stop traffic  ${stream}
    [Tags]  enable-disable-overlap      

Enable and disable feature inport-mask 50 times     
    ${stream}=  L2 add  flow=a->d  line_rate=100  frame_size=1518  name=a_bd_flow
    clear stats 
    start traffic  ${stream}
    :FOR  ${INDEX}  IN RANGE  1  50
    \   Log  ${INDEX}
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate
    \   rest disable feature  inport-mask
    \   sleep  2
    \   rest enable feature  inport-mask
    \   sleep  2
    \   verify results  a  transmitted_frame_rate  b  received_valid_frame_rate
    \   verify results  a  transmitted_frame_rate  d  received_valid_frame_rate        
    stop traffic  ${stream}
    [Tags]  enable-disable-inport   
                        
* Keyword

ha suite setup
    base suite setup
    rest add switch alias  s1  APP-REGRESS-1
    rest add switch alias  s2  APP-REGRESS-2
    rest add switch alias  s3  APP-REGRESS-5
    rest add switch alias  s4  APP-REGRESS-6    
    base policy config  ${filter_1}  ${filter_2}  ${delivery_1}  ${delivery_2}  ${filter_nick_1}  ${filter_nick_2}  ${delivery_nick_1}  ${delivery_nick_2}      

base policy config   [Arguments]  ${filter_interface_1}  ${filter_interface_2}  ${delivery_interface_1}  ${delivery_interface_2}  ${filterNick1}  ${filterNick2}  ${deliveryNick1}  ${deliveryNick2}  
    rest add interface role  s1  ${filter_interface_1}  filter  ${filterNick1}
    rest add interface role  s2  ${filter_interface_2}  filter  ${filterNick2}          
    rest add interface role  s1  ${delivery_interface_1}  delivery  ${deliveryNick1}
    rest add interface role  s2  ${delivery_interface_2}  delivery  ${deliveryNick2}
    Sleep  2
    rest add policy  admin-view  P1  forward
    rest add policy match  admin-view  P1  1  {"any-traffic": true, "sequence": 1}
    rest add policy interface  admin-view  P1  ${filterNick1}  filter
    rest add policy interface  admin-view  P1  ${deliveryNick1}  delivery 
    Sleep  2  
    rest add policy  admin-view  ZP1  forward
    rest add policy match  admin-view  ZP1  1  {"any-traffic": true, "sequence": 1}
    rest add policy interface  admin-view  ZP1  ${filterNick1}  filter
    rest add policy interface  admin-view  ZP1  ${deliveryNick2}  delivery
    Sleep  30
    
verify config
    ${verify_policy1}=  rest verify bigtap policy  P1  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${verify_policy2}=  rest verify bigtap policy  ZP1  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy2}
    ${verify_policy12}=  rest verify bigtap policy  _ZP1_o_P1  num_filter_intf=1  num_delivery_intf=2
    Should be true  ${verify_policy12}
    ${switchFlowVal1} =   REST show switch flow  s1  
    Should Be Equal As Integers  ${switchFlowVal1}  4  
    ${switchFlowVal2} =   REST show switch flow  s2  
    Should Be Equal As Integers  ${switchFlowVal2}  4

verify results   [Arguments]  ${port_1}  ${tx}  ${port_2}  ${rx}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${port_1}  ${tx}
    ${rx_value}=  verify dict key  ${report}  ${port_2}  ${rx}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}  rangev=100
    Should be true  ${in_range} 

delete bigtap configuration
    rest delete policy  admin-view  P1
    rest delete policy  admin-view  ZP1 
    rest delete interface role  s1  ${filter_1}    filter          
    rest delete interface role  s2  ${filter_2}    filter        
    rest delete interface role  s1  ${delivery_1}    delivery
    rest delete interface role  s2  ${delivery_2}    delivery
    rest delete interface  s1  ${filter_1}          
    rest delete interface  s2  ${filter_2}        
    rest delete interface  s1  ${delivery_1}          
    rest delete interface  s2  ${delivery_2}
    Sleep  30
    
ha test teardown
    delete traffic
    
ha suite teardown
    delete bigtap configuration
    rest delete switch alias  s1
    rest delete switch alias  s2
    rest delete switch alias  s3
    rest delete switch alias  s4
    rest delete switch  s1
    rest delete switch  s2
    rest delete switch  s3
    rest delete switch  s4                           
    base suite teardown   