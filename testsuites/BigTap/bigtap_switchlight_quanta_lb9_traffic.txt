*Settings
Documentation           Quanta-LB9-BigTap SwitchLight Traffic Test Suite
Suite Setup             bigtap suite setup
Suite Teardown          bigtap suite teardown
Test Setup              traffic test setup
Test Teardown           traffic teardown 
Force Tags              BigTap  Blackbird  3.0.0  Quanta-LB9
Library                 keywords/BsnCommon.py
Library                 keywords/AppController.py
Library                 keywords/BigTap.py
Library                 keywords/SwitchLight.py
Library                 keywords/Ixia.py
Library                 Collections.py
Library                 OperatingSystem.py
Library                 String.py

* Variable
${policy_name_1}        policy_lb9_traffic
${filter_1}             ethernet1  
${filter_nick_1}        ixia-2-3
${delivery_1}           ethernet2  
${delivery_nick_1}      ixia-2-4

*Test Case

### L2 Traffic
#### L2 Traffic: Frame Size 64 Bytes
TC1: Verify L2 traffic on LB9: frame size 64 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=64  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic
    
#### L2 Traffic: Frame Size 128 Bytes
TC2: Verify L2 traffic on LB9: frame size 128 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=128  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic

#### L2 Traffic: Frame Size 256 Bytes

TC3: Verify L2 traffic on LB9: frame size 256 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=256  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic

#### L2 Traffic : Frame Size 512 Bytes

TC4: Verify L2 traffic on LB9: frame size 512 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=512  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic
    
#### L2 Traffic : Frame Size 1024 Bytes

TC5: Verify L2 traffic on LB9: frame size 1024 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1024  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic

#### L2 Traffic : Frame Size 1280 Bytes

TC6: Verify L2 traffic on LB9: frame size 1280 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1280  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic

#### L2 Traffic : Frame Size 1518 Bytes

TC7: Verify L2 traffic on LB9: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1518  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic
    
#### L2 Traffic : Frame Size 9216 Bytes

TC8: Verify L2 traffic on LB9: frame size 9216 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=9216  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic

#### L2 Vlan Tagged Traffic : Frame Size 1518 Bytes

TC9: Verify L2 vlan tagged traffic on LB9: frame size 1518 bytes
    #ixia initialize  tg1  init=true
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1518  ethertype=8100  vlan_id=2048  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic
    
###  L2 Traffic with CRC Errors: Frame Size 1518 Bytes


TC10: Verify L2 Traffic with CRC Errors on LB9: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1518  ethertype=0800  crc=True  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic

### L2 Traffic :  Spanning Tree Protocol (for bridges) IEEE 802.1D
TC11: Verify L2 Traffic on Quanta LB9: Spanning Tree Protocol (for bridges) IEEE 802.1D
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1518  ethertype=0802  src_mac=5C:16:C7:13:14:01  dst_mac=01:80:c2:00:00:00  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic
    
### L2 Traffic :  LLDP with ethernet ethertype
TC12: Verify L2 Traffic on Quanta LB9: LLDP with ethernet ethertype
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream}=  L2 add  flow=a->b  line_rate=100  frame_size=1518  ethertype=0800  src_mac=5C:16:C7:13:14:01  dst_mac=01:80:c2:00:00:0E  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate    
    stop traffic  ${stream}
    [Tags]  sanity  feature  traffic
    
### L3 Traffic    
#### L3 IPv4 Traffic : Frame Size 68 Bytes
        
TC13: Verify L3 IPv4 traffic on Quanta LB9: frame size 68 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=68  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv6 Traffic : Frame Size 68 Bytes
        
TC14: Verify L3 IPv6 traffic on Quanta LB9: frame size 68 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=68  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic

#### L3 IPv4 Traffic : Frame Size 128 Bytes

TC15: Verify L3 traffic on Quanta LB9: frame size 128 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=128  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv6 Traffic : Frame Size 128 Bytes
        
TC16: Verify L3 IPv6 traffic on Quanta LB9: frame size 68 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=128  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv4 Traffic : Frame Size 256 Bytes

TC17: Verify L3 traffic on Quanta LB9: frame size 256 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=256  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv6 Traffic : Frame Size 256 Bytes
        
TC18: Verify L3 IPv6 traffic on Quanta LB9: frame size 256 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=256  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv4 Traffic : Frame Size 512 Bytes
    
TC19: Verify L3 traffic on Quanta LB9: frame size 512 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=512  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv6 Traffic : Frame Size 512 Bytes
        
TC20: Verify L3 IPv6 traffic on Quanta LB9: frame size 512 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=512  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv4 Traffic : Frame Size 1024 Bytes

TC21: Verify L3 traffic on Quanta LB9: frame size 1024 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1024  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 IPv6 Traffic : Frame Size 1024 Bytes
        
TC22: Verify L3 IPv6 traffic on Quanta LB9: frame size 1024 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1024  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
        
#### L3 IPv4 Traffic : Frame Size 1280 Bytes

TC23: Verify L3 traffic on Quanta LB9: frame size 1280 bytes
    #ixia initialize  tg1  init=true
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1280  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic

#### L3 IPv6 Traffic : Frame Size 1280 Bytes
        
TC24: Verify L3 IPv6 traffic on Quanta LB9: frame size 1280 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1280  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic

#### L3 Traffic : Frame Size 1518 Bytes

TC25: Verify L3 traffic on Quanta LB9: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1518  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic

#### L3 IPv6 Traffic : Frame Size 1518 Bytes
        
TC26: Verify L3 IPv6 traffic on Quanta LB9: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1518  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 Traffic : Frame Size 9150 Bytes

TC27: Verify L3 traffic on Quanta LB9: frame size 9150 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=9150  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic


#### L3 IPv6 Traffic : Frame Size 9150 Bytes
        
TC28: Verify L3 IPv6 traffic on Quanta LB9: frame size 9150 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=9150  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
#### L3 Vlan Tagged Traffic : Frame Size 1518 Bytes

TC29: Verify L3 vlan tagged traffic on Quanta LB9: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1518  vlan_id=2048  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
        
TC30: Verify L3 IPv6 traffic on Quanta LB9: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1518  vlan_id=2048  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=2001:0:0:0:0:0:0:1  dst_ip=2001:0:0:0:0:0:0:2  ethertype=86dd  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_valid_frame_rate        
    stop traffic  ${stream_l3_lb9}
    [Tags]  sanity  feature  traffic
    
    
## Negative Tests
### Flap ingress/filter interface and verify traffic
TC31: Flap Filter Interface on LB9 and verify traffic: frame size 1518 bytes
    #ixia initialize  tg1  init=true
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1518  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  5
    verify results  a  b  transmitted_frame_rate  received_frame_rate
    cli disable interface  s1  ${filter_1}
    sleep  5
    cli enable interface  s1  ${filter_1}
    sleep  40
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    verify results  a  b  transmitted_frame_rate  received_frame_rate               
    stop traffic  ${stream_l3_lb9}
    [Tags]  full  negative  traffic


### Flap egress/delivery interface and verify traffic
TC32: Flap Delivery Interface on LB9 and verify traffic: frame size 1518 bytes
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    ${stream_l3_lb9}=  L3 add  flow=a->b  line_rate=100  frame_size=1518  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_lb9}
    sleep  5
    verify results  a  b  transmitted_frame_rate  received_frame_rate
    cli disable interface  s1  ${delivery_1}
    sleep  5
    cli enable interface  s1  ${delivery_1}
    sleep  60
    ${verify_policy1}=  rest verify bigtap policy  ${policy_name_1}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy1}
    verify results  a  b  transmitted_frame_rate  received_frame_rate               
    stop traffic  ${stream_l3_lb9}
    [Tags]  full  negative  traffic

* Keywords

bigtap suite setup
    base suite setup
    ${disable_crc_check}=  rest disable feature  crc
    Should be true  ${disable_crc_check}              
    rest add interface role  s1  ${filter_1}  filter  ${filter_nick_1}   
    rest add interface role  s1  ${delivery_1}  delivery  ${delivery_nick_1}    
    Sleep  5
    rest add policy  admin-view  ${policy_name_1}  forward
    rest add policy match  admin-view  ${policy_name_1}  1  {"any-traffic": true, "sequence": 1}
    rest add policy interface  admin-view  ${policy_name_1}  ${filter_nick_1}  filter
    rest add policy interface  admin-view  ${policy_name_1}  ${delivery_nick_1}  delivery
    Sleep  5

traffic test setup
    ${result1}=  write version to file
    Should be true  ${result1}
    ${result}=  start syslog monitor
    Should be true  ${result}
    ixia initialize  tg1  init=true
        
verify results   [Arguments]  ${send_port}  ${recv_port}  ${transmitted_frames}  ${received_valid_frames}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${send_port}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${recv_port}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}  200
    Should be true  ${in_range}
    
traffic teardown
    delete traffic
    sleep  2
    ${result1}=  stop syslog monitor
    Should be true  ${result1}
    
bigtap suite teardown
    rest delete policy  admin-view  ${policy_name_1}
    rest delete interface role  s1  ${filter_1}  filter  ${filter_nick_1} 
    rest delete interface role  s1  ${delivery_1}  delivery  ${delivery_nick_1}
    rest delete interface  s1  ${filter_1}
    rest delete interface  s1  ${delivery_1}
    rest delete switch  s1
    ${enable_crc_check}=  rest enable feature  crc
    Should be true  ${enable_crc_check}     
    base suite teardown                                        
