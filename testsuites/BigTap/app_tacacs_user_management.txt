*Settings
Documentation   App Tacacs Test Suite Release:Blackbird/Bowmore
Suite Setup     base suite setup
Suite Teardown  base suite teardown
Test Setup      tacacs test setup
Test Teardown   tacacs test teardown
Force Tags      bigtap  blackbird  feature
Library         keywords/BsnCommon.py
Library         keywords/AppController.py
Library         keywords/BigTap.py
Library         keywords/SwitchLight.py
Library         keywords/Ixia.py
Library         Collections.py
Library         OperatingSystem.py
Library         String.py
    
* Test Case
TC001: Verify Running-Configuration
    Verify Tacacs Configuration  0  10.2.3.201  300
    Verify AAA Authentication Configuration                      
    [Tags]  verifyconfig

TC002: Verify tacacs server key is not shown in clear text 
    ${myDictionary}=  rest return dictionary from get  /api/v1/data/controller/core/aaa/tacacs?config=true
    ${value}=  Get from dictionary  ${myDictionary[0]}  server
    ${secret}=  Get from dictionary  ${value[0]}  secret
    Should not be equal as strings  ${secret}  secret
    [Tags]  verify-tacacs-secret
        
TC003: Add user tacacsadmin to group admin and verify access
    verify version  tacacsadmin  adminadmin  ${true}
    [Tags]  add-tacacs-user  

TC004: Verify remote authentication with open source tacacs
    rest delete tacacs server  10.2.3.201
    rest add tacacs server  10.9.18.3  secret  300
    verify version  tacacsadmin  adminadmin  ${true}
    rest delete tacacs server  10.9.18.3    
    [Tags]  tacacs-linux

TC005: Verify multiple tacacs servers can be configured 
    rest add tacacs server  10.9.18.3  secret  200
    Verify Tacacs Configuration  0  10.2.3.201  300
    Verify Tacacs Configuration  1  10.9.18.3  200
    rest delete tacacs server  10.9.18.3        
    [Tags]  multiple-tacacs-server

TC006: Verify second tacacs server is used when the first is unreachable   
    rest delete tacacs server  10.2.3.201
    rest add tacacs server  10.192.97.20   secret  300
    rest add tacacs server  10.9.18.3  secret  200 
    Verify Tacacs Configuration  0  10.192.97.20   300    
    Verify Tacacs Configuration  1  10.9.18.3  200
    verify version  tacacsadmin  adminadmin  ${true}
    rest delete tacacs server  10.9.18.3
    rest delete tacacs server  10.192.97.20 
    [Tags]  second-tacacs-server
            
TC007: Configure mismatched tacacs secret and verify tacacs user cannot login
    rest delete tacacs server  10.2.3.201
    rest delete tacacs server  10.9.18.3
    rest delete tacacs server  10.192.97.20   
    rest add tacacs server  10.2.3.201  bsnbsn  300
    sleep  5
    ${content}=  rest show version  string=version  user=tacacsadmin  password=adminadmin
    Should not be true  ${content}
    [Tags]  mismatched-secret  

TC008: Verify that when AAA is configured for tacacs only, local AAA should not work even though local user-accounts are configured
    rest add tacacs authentication  tacacs=${true}  tacacs_priority=1  local=${false}  local_priority=2  username=tacacsadmin  password=adminadmin
    verify version  tacacsadmin  adminadmin   ${false}
    ${content}=  rest show version  string=version  user=admin  password=adminadmin   local=${false}
    Should not be true  ${content}            
    rest add tacacs authentication  tacacs=${true}  tacacs_priority=1  local=${true}  local_priority=2  username=tacacsadmin  password=adminadmin
    [Tags]  only-tacacs  
                
TC009: Delete tacacs server from configuration and verify tacacs user has no access
    rest delete tacacs server  10.2.3.201
    ${content}=  rest show version  string=version  user=tacacsadmin  password=adminadmin
    Should not be true  ${content}
    [Tags]  deletetacacs  

TC010: Delete user tacacsadmin from group admin and verify access
    cli delete user from group  tacacsadmin  admin
    sleep  3
    verify version  tacacsadmin  adminadmin  ${true}
    rest add user to group  tacacsadmin  admin
    [Tags]  deleteuser   

TC011: Verify user tacacsdemoclient from group readers has access to only his group
    rest add rbac group  readers  readers-view
    rest add user to group  tacacsdemoclient  readers
    sleep  5
    ${content}=  cli execute show command  whoami  tacacsdemoclient  clientclient
    Should contain  ${content}  : reader
    Should not contain  ${content}  admin
    ${content}=  cli execute show command  show tacacs  tacacsdemoclient  clientclient
    Should contain  ${content}  Error: Authentication failed: insufficient group privilege for user
    rest delete rbac group  readers
    sleep  3  
    [Tags]  nonadmin-user    

TC012: Verify user tacacsnobody, an unprvileged tacacs user, is denied access
    ${content}=  rest show version  string=version  user=tacacsnobody  password=clientclient  local=${false}
    Should not be true  ${content}
    [Tags]  unprivileged-user  

TC013: Restart process tacacs_plus on Master and verify users can login
    restart process on controller  tacacs_plus  Master
    sleep  1
    verify version  tacacsadmin  adminadmin  ${true}    
    rest add rbac group  readers  readers-view
    rest add user to group  tacacsdemoclient  readers
    sleep  3
    ${content}=  cli execute show command  whoami  tacacsdemoclient  clientclient
    Should contain  ${content}  : reader
    Should not contain  ${content}  admin
    ${content}=  cli execute show command  show tacacs  tacacsdemoclient  clientclient
    Should contain  ${content}  Error: Authentication failed: insufficient group privilege for user
    rest delete rbac group  readers
    [Tags]  restart-tacacs_plus
        
* Keywords

tacacs test setup
    ${result1}=  write version to file
    Should be true  ${result1}
    ${result}=  start syslog monitor
    Should be true  ${result}
    set version from controller
    ${result1}=  rest add tacacs server  10.2.3.201  secret  300
    Should be True  ${result1}
    ${result2}=  rest add tacacs authentication
    Should be True  ${result2}
    ${result3}=  rest add tacacs authorization
    Should be True  ${result3}
    ${result4}=  rest add user to group  tacacsadmin  admin
    Should be True  ${result4}
    sleep  1

set version from controller
    ${version_string}=  rest show version
    ${version}=  split string  ${version_string}
    Set Environment Variable  controller_version  ${version[3]}
    Environment Variable Should Be Set  controller_version 
    
Verify Tacacs Configuration  [Arguments]  ${index}  ${tacacs-server}  ${timeout}
    ${myDictionary}=  rest return dictionary from get  /api/v1/data/controller/core/aaa/tacacs?config=true
    ${value}=  Get from dictionary  ${myDictionary[0]}  server
    ${server-address}=  Get from dictionary  ${value[${index}]}  server-address
    ${timeout}=  Get from dictionary  ${value[${index}]}  timeout
    ${tacacs-timeout}=  Convert to Integer  ${timeout}  
    Should be equal as strings  ${server-address}  ${tacacs-server}
    Should be equal as integers  ${tacacs-timeout}  ${timeout}

Verify AAA Authentication Configuration    
    ${myDictionary}=  rest return dictionary from get  /api/v1/data/controller/core/aaa/authenticator
    ${value}=  Get from dictionary  ${myDictionary[0]}  name
    Should be equal as strings  ${value}  tacacs
    ${priority}=  Get from dictionary  ${myDictionary[0]}  priority
    ${tacacs-priority}=  Convert to Integer  ${priority}
    Should be equal as integers  ${tacacs-priority}  1
    ${value}=  Get from dictionary  ${myDictionary[1]}  name
    Should be equal as strings  ${value}  local
    ${priority}=  Get from dictionary  ${myDictionary[1]}  priority
    ${tacacs-priority}=  Convert to Integer  ${priority}
    Should be equal as integers  ${tacacs-priority}  2

verify version  [Arguments]  ${username}  ${new_password}  ${local}
    ${myversion}=  Get Environment Variable  controller_version
    ${content}=  rest show version  string=version  user=${username}  password=${new_password}  local=${local}
    Should Contain  ${content}  ${myversion}

tacacs test teardown
    ${result1}=  cli delete user from group  tacacsadmin  admin
    Should be True  ${result1}
    ${result2}=  rest delete tacacs server  10.2.3.201
    Should be True  ${result2}
    ${result3}=  rest delete tacacs server  10.9.18.3
    Should be True  ${result3}
    ${result4}=  rest delete tacacs server  10.192.97.20       
    Should be True  ${result4}
    ${result5}=  rest delete tacacs authentication
    Should be True  ${result5}
    ${result6}=  rest delete tacacs authorization  
    Should be True  ${result6}    
    ${result1}=  stop syslog monitor
    Should be true  ${result1}
    
