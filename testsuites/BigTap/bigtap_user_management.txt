*Settings
Documentation           BigTap User Management: Release:Blackbird Feature:User Management
Suite Setup             bigtap suite setup
Suite Teardown          base suite teardown
Test Setup              bigtap test setup
Test Teardown           base test teardown 
Force Tags              platform  sanity  blackbird
Library                 keywords/BsnCommon.py
Library                 keywords/AppController.py
Library                 keywords/BigTap.py
Library                 keywords/SwitchLight.py
Library                 keywords/Ixia.py
Library                 Collections.py
Library                 OperatingSystem.py
Library                 String.py

*Test Case
TC001: Verify username userChkPassword can have all lower-case alphabet password
    verify config  userChkPassword  bsnbsn
    [Tags]  sanity  platform  basic        

TC002: Verify username userChkPassword can have all upper-case alphabet password
    ${result}=  rest add user password    userChkPassword  BSNBSN
    Should be true  ${result}  
    verify config  userChkPassword  BSNBSN

TC003: Verify username userChkPassword can have a mix of lower-case and upper-case alphabet password
    ${result}=  rest add user password    userChkPassword  cLiEnTcLiEnT
    Should be true  ${result}
    verify config  userChkPassword  cLiEnTcLiEnT 
    [Tags]  sanity  platform      

TC004: Verify username userChkPassword can have a numeric password
    ${result}=  rest add user password    userChkPassword  1234567890
    Should be true  ${result}
    verify config  userChkPassword  1234567890
    [Tags]  sanity  platform      
    
TC005: Verify username userChkPassword can have a alphanumeric (alphabet all small) password
    ${result}=  rest add user password    userChkPassword  bsn1234
    Should be true  ${result}
    verify config  userChkPassword  bsn1234
    [Tags]  sanity  platform        
    
TC006: Verify username userChkPassword can have a alphanumeric (alphabet all caps) password
    ${result}=  rest add user password    userChkPassword  BSN1234
    Should be true  ${result}
    verify config  userChkPassword  BSN1234
    [Tags]  sanity  platform        

TC007: Verify username userChkPassword can have a alphanumeric password with a !
    ${result}=  rest add user password    userChkPassword  bSn1234!
    Should be true  ${result}
    verify config  userChkPassword  bSn1234!
    [Tags]  sanity  platform        

TC008: Verify username userChkPassword can have a alphanumeric password with a @
    ${result}=  rest add user password    userChkPassword  bSn1234@
    Should be true  ${result}
    verify config  userChkPassword  bSn1234@
    [Tags]  sanity  platform        

TC009: Verify username userChkPassword can have a alphanumeric password with a #
    ${result}=  rest add user password    userChkPassword  bSn1234%23
    Should be true  ${result}
    verify config  userChkPassword  bSn1234#
    [Tags]  sanity  platform  

TC010: Verify username userChkPassword can have a alphanumeric password with a $
    ${result}=  rest add user password    userChkPassword  bSn1234$
    Should be true  ${result}
    verify config  userChkPassword  bSn1234$
    [Tags]  sanity  platform        

TC011: Verify username userChkPassword can have a alphanumeric password with a ?
    ${result}=  rest add user password    userChkPassword  bSn1234%3F
    Should be true  ${result}
    verify config  userChkPassword  bSn1234?
    [Tags]  sanity  platform       

TC012: Verify username userChkPassword can have a alphanumeric password with a >
    ${result}=  rest add user password    userChkPassword  bSn1234%3E
    Should be true  ${result}
    verify config  userChkPassword  bSn1234>
    [Tags]  sanity  platform   

TC013: Verify username userChkPassword can have a alphanumeric password with a ^
    ${result}=  rest add user password    userChkPassword  bSn1234^
    Should be true  ${result}
    verify config  userChkPassword  bSn1234^    
    [Tags]  sanity  platform        

TC014: Verify username userChkPassword can have a alphanumeric password with a &
    ${result}=  rest add user password    userChkPassword  bSn1234&
    Should be true  ${result}
    verify config  userChkPassword  bSn1234&
    [Tags]  sanity  platform        

TC015: Verify username userChkPassword can have a alphanumeric password with a *
    ${result}=  rest add user password    userChkPassword  bSn1234*
    Should be true  ${result}
    verify config  userChkPassword  bSn1234*
    [Tags]  sanity  platform        

TC016: Verify username userChkPassword can have a alphanumeric password with a (
    ${result}=  rest add user password    userChkPassword  bSn1234(
    Should be true  ${result}
    verify config  userChkPassword  bSn1234(
    [Tags]  sanity  platform        

TC017: Verify username userChkPassword can have a alphanumeric password with a )
    ${result}=  rest add user password    userChkPassword  bSn1234)
    Should be true  ${result}
    verify config  userChkPassword  bSn1234)
    [Tags]  sanity  platform        

TC018: Verify username userChkPassword can have a alphanumeric password with a -
    ${result}=  rest add user password    userChkPassword  bSn1234-
    Should be true  ${result}
    verify config  userChkPassword  bSn1234-
    [Tags]  sanity  platform        

TC019: Verify username userChkPassword can have a alphanumeric password with a _
    ${result}=  rest add user password    userChkPassword  bSn1234_
    Should be true  ${result}
    verify config  userChkPassword  bSn1234_
    [Tags]  sanity  platform        

TC020: Verify username userChkPassword can have a alphanumeric password with a ;
    ${result}=  rest add user password    userChkPassword  bSn1234%3B
    Should be true  ${result}
    verify config  userChkPassword  bSn1234;
    [Tags]  sanity  platform       

TC021: Verify username userChkPassword can have a alphanumeric password with a }
    ${result}=  rest add user password    userChkPassword  bSn1234}
    Should be true  ${result}
    verify config  userChkPassword  bSn1234}
    [Tags]  sanity  platform        

TC022: Verify username userChkPassword can have a alphanumeric password with a {
    ${result}=  rest add user password    userChkPassword  bSn1234{
    Should be true  ${result}
    verify config  userChkPassword  bSn1234{
    [Tags]  sanity  platform    

TC023: Verify username userChkPassword can have a alphanumeric password with a [
    ${result}=  rest add user password    userChkPassword  bSn1234[
    Should be true  ${result}
    verify config  userChkPassword  bSn1234[
    [Tags]  sanity  platform        

TC024: Verify username userChkPassword can have a alphanumeric password with a ]
    ${result}=  rest add user password    userChkPassword  bSn1234]
    Should be true  ${result}
    verify config  userChkPassword  bSn1234]
    [Tags]  sanity  platform        

TC025: Verify username userChkPassword can have a alphanumeric password with a |
    ${result}=  rest add user password    userChkPassword  bSn|1234
    Should be true  ${result}
    verify config  userChkPassword  bSn|1234
    [Tags]  sanity  platform       
        
TC026: Verify username userChkPassword can have a alphanumeric password with a \
    ${result}=  rest add user password    userChkPassword  bSn1234%5C
    Should be true  ${result}
    verify config  userChkPassword  bSn1234\\ 
    [Tags]  sanity  platform        
        
TC027: Verify username userChkPassword can have a alphanumeric password with a :
    ${result}=  rest add user password    userChkPassword  bSn:1234
    Should be true  ${result}
    verify config  userChkPassword  bSn:1234
    [Tags]  sanity  platform        
    
TC028: Verify username userChkPassword can have a alphanumeric password with a ,
    ${result}=  rest add user password    userChkPassword  bSn,1234
    Should be true  ${result}
    verify config  userChkPassword  bSn,1234
    [Tags]  sanity  platform        
    
TC029: Verify username userChkPassword can have a alphanumeric password with a .
    ${result}=  rest add user password    userChkPassword  bSn.1234
    Should be true  ${result}
    verify config  userChkPassword  bSn.1234
    [Tags]  sanity  platform           
    
TC030: Verify username userChkPassword can have a alphanumeric password with a <
    ${result}=  rest add user password    userChkPassword  bSn1234<
    Should be true  ${result}
    verify config  userChkPassword  bSn1234<
    [Tags]  sanity  platform        
    
TC031: Verify username userChkPassword can have a alphanumeric password with a /
    ${result}=  rest add user password  userChkPassword  bSn1234/
    Should be true  ${result}
    verify config  userChkPassword  bSn1234/
    [Tags]  sanity  platform        

TC032: Verify username userChkPassword can have a alphanumeric password with a ~
    ${result}=  rest add user password  userChkPassword  bSn1234~
    Should be true  ${result}
    verify config  userChkPassword  bSn1234~
    [Tags]  sanity  platform     
    
TC033: Verify username userChkPassword can have a alphanumeric password with a `
    ${result}=  rest add user password  userChkPassword  bSn1234`
    Should be true  ${result}
    verify config  userChkPassword  bSn1234`
    [Tags]  sanity  platform  
        
* Keywords

bigtap suite setup
    base suite setup
    set version from controller
    rest add user  userChkPassword
    rest add user password  userChkPassword  bsnbsn
    rest add rbac group  groupChkPassword  chkpassword-view
    rest add user to group  userChkPassword  groupChkPassword
    rest add rbac permission  chkpassword-view
    rest add filter interface to rbac  chkpassword-view  filter_name='allow-all'     
    rest add delivery interface to rbac  chkpassword-view  delivery_name='allow-all' 
    rest add match to rbac  chkpassword-view  match_name='allow-all'       

bigtap test setup
    ${result1}=  write version to file
    Should be true  ${result1}

set version from controller
    ${version_string}=  rest show version
    ${version}=  split string  ${version_string}
    Set Environment Variable  controller_version  ${version[3]}
    Environment Variable Should Be Set  controller_version 
    
verify config  [Arguments]  ${username}  ${new_password}
    ${myversion}=  Get Environment Variable  controller_version
    ${content}=  rest show version  user=${username}  password=${new_password}
    Should Contain  ${content}  ${myversion}
