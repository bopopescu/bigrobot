*Settings
Documentation  Verify CLI Commands
Suite Setup  cli suite setup
Suite Teardown   cli suite teardown
Test Setup   base test setup
Test Teardown  base test teardown 
Force Tags   platform Sanity
Library  keywords/BsnCommon.py
Library  keywords/AppController.py
Library  keywords/BigTap.py
Library  keywords/SwitchLight.py
Library  keywords/Ixia.py
Library  Collections.py
Library  OperatingSystem.py
Library  String.py

*Variable
${switch1_alias}                        app-rlb9-2
${filter_intf_1}                        ethernet1
${filter_alias_1}                       ixia-4-4
${service_pre_intf}                     ethernet47
${service_pre_alias}                    app-lb9-1-pre
${service_post_intf}                    ethernet48
${service_post_alias}                   app-lb9-1-post


${policy_name}                          policy-cli
${service_name}                         app-lb9-1-service

${switch2_alias}                        app-rly2-1
${delivery_intf_1}                      ethernet1
${delivery_alias_1}                     ixia-4-2


*Test Case
TC1: Verify CLI command show bigtap
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    #Verify num-total-switches
    ${value}=  Convert To Integer  ${filter_dictionary[0]['num-total-switches']}  
    Should be equal as integers  ${value}  2
    #Verify inport-mask
    Should be True  ${filter_dictionary[0]['inport-mask']}      
    #Verify num-services
    ${value}=  Convert To Integer  ${filter_dictionary[0]['num-services']}
    Should be equal as integers   ${value}  1
    #Verify num-delivery-interfaces
    Should be equal as integers   ${filter_dictionary[0]['num-delivery-interfaces']}  1
    #Verify num-service-switches
    Should be equal as integers   ${filter_dictionary[0]['num-service-switches']}  1
    #Verify num-service-interfaces
    Should be equal as integers   ${filter_dictionary[0]['num-service-interfaces']}  2
    #Verify match-mode
    Should be equal as strings   ${filter_dictionary[0]['match-mode']}  bigtap-full-match
    #Verify num-delivery-switches
    Should be equal as integers   ${filter_dictionary[0]['num-delivery-switches']}  1
    #Verify overlap
    Should be True  ${filter_dictionary[0]['overlap']}             
    #Verify num-filter-switches
    Should be equal as integers   ${filter_dictionary[0]['num-filter-switches']}  1
    #Verify host-track
    Should be True  ${filter_dictionary[0]['host-track']} 
    #Verify num-filter-interfaces
    Should be equal as integers   ${filter_dictionary[0]['num-filter-interfaces']}  1
    #Verify num-active-policies
    Should be equal as integers   ${filter_dictionary[0]['num-active-policies']}  1
    #Verify num-policies
    Should be equal as integers   ${filter_dictionary[0]['num-policies']}  1
    [Tags]  feature  cli 

TC2: Verify CLI show bigtap completion
    ${myversion}=  Get Environment Variable  controller_version
    ${result}=  Run Keyword If  '${myversion}' == '4.0.0'  cli walk command  show bigtap  17  ELSE IF  '${myversion}' == '3.0.0'   cli walk command  show bigtap  12  
    Should be true  ${result}    
    [Tags]  feature  cli-completion
    
TC3: Disable/enable inport-masking and verify show bigtap
    ${result}=  rest disable feature  inport-mask
    Should be true  ${result}
    sleep  5    
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    Should not be true  ${filter_dictionary[0]['inport-mask']}      
    ${result}=  rest enable feature  inport-mask
    Should be true  ${result}
    sleep  5        
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    Should be True  ${filter_dictionary[0]['inport-mask']}     
    [Tags]  feature  cli  
    
TC4: Disable/enable overlap and verify show bigtap
    ${result}=  rest disable feature  overlap
    Should be true  ${result}
    sleep  5    
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    Should not be true  ${filter_dictionary[0]['overlap']}      
    ${result}=  rest enable feature  overlap
    Should be true  ${result}
    sleep  5        
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    Should be True  ${filter_dictionary[0]['overlap']} 
    [Tags]  feature  cli 

TC5: Disable/enable tracked-host and verify show bigtap
    ${result}=  rest disable feature  tracked-host
    Should be true  ${result}
    sleep  5    
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    Should not be true  ${filter_dictionary[0]['host-track']}      
    ${result}=  rest enable feature  tracked-host
    Should be true  ${result}
    sleep  5        
    ${filter_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/info
    Should be True  ${filter_dictionary[0]['host-track']} 
    [Tags]  feature  cli 
    
TC6: Verify CLI command show bigtap interface-names
    ${command_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/interface-config
    # Verify Filter Interface
    Should be equal as strings   ${command_dictionary[0]['interface']}  ${filter_intf_1}
    Should be equal as strings   ${command_dictionary[0]['name']}  ${filter_alias_1}
    Should be equal as strings   ${command_dictionary[0]['role']}  filter
    # Verify Pre-Service Interface
    Should be equal as strings   ${command_dictionary[1]['interface']}  ${service_pre_intf}
    Should be equal as strings   ${command_dictionary[1]['name']}  ${service_pre_alias}
    Should be equal as strings   ${command_dictionary[1]['role']}  service
    # Verify Post-Service Interface
    Should be equal as strings   ${command_dictionary[2]['interface']}  ${service_post_intf}
    Should be equal as strings   ${command_dictionary[2]['name']}  ${service_post_alias}
    Should be equal as strings   ${command_dictionary[2]['role']}  service
    # Verify Delivery Interface
    Should be equal as strings   ${command_dictionary[3]['interface']}  ${delivery_intf_1}
    Should be equal as strings   ${command_dictionary[3]['name']}  ${delivery_alias_1}
    Should be equal as strings   ${command_dictionary[3]['role']}  delivery
    [Tags]  feature  cli
    
TC7: Verify CLI show bigtap interface-names completion
    ${result}=  cli walk command  show bigtap interface-names  3  
    Should be true  ${result}          
    [Tags]  feature  cli-completion
    
TC8: Verify CLI command show bigtap policy
    ${command_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/view/policy?select=info
    #Verify action
    Should be equal as strings   ${command_dictionary[0]['info']['action']}  forward
    #Verify config-status
    Should be equal as strings   ${command_dictionary[0]['info']['config-status']}  active and forwarding
    #Verify core-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['core-interface-count']}  2
    #Verify delivery-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['delivery-interface-count']}  1    
    #Verify delivery-switch-count
    Should be equal as integers   ${command_dictionary[0]['info']['delivery-switch-count']}  1
    #Verify detailed-status
    Should be equal as strings   ${command_dictionary[0]['info']['detailed-status']}  installed - installed to forward
    #Verify filter-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['filter-interface-count']}  1
    #Verify filter-switch-count
    Should be equal as integers   ${command_dictionary[0]['info']['filter-switch-count']}  1
    #Verify name
    Should be equal as strings   ${command_dictionary[0]['info']['name']}  ${policy_name}  
    #Verify post-service-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['post-service-interface-count']}  0
    #Verify pre-service-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['pre-service-interface-count']}  0 
    #Verify priority
    Should be equal as integers   ${command_dictionary[0]['info']['priority']}  100
    #Verify rewrite-valid
    Should not be true  ${command_dictionary[0]['info']['rewrite-valid']}  
    #Verify rewrite-vlan
    Should be equal as integers   ${command_dictionary[0]['info']['rewrite-vlan']}  0
    #Verify runtime-status
    Should be equal as strings   ${command_dictionary[0]['info']['runtime-status']}  installed
    #Verify service-count
    Should be equal as integers   ${command_dictionary[0]['info']['service-count']}  0
    #Verify service-switch-count
    Should be equal as integers   ${command_dictionary[0]['info']['service-switch-count']}  0
    #Verify strip-vlan
    Should not be true  ${command_dictionary[0]['info']['strip-vlan']}
    #Verify type
    Should be equal as strings   ${command_dictionary[0]['info']['type']}  Configured  
    [Tags]  feature  cli
        
TC9: Verify CLI show bigtap policy completion
    ${result}=  cli walk command  show bigtap policy  4  cmd_argument=${policy_name}  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC10: Verify CLI show bigtap policy policy-name completion
    ${result}=  cli walk command  show bigtap policy ${policy_name}   11  
    Should be true  ${result}
    [Tags]  feature  cli-completion
         
TC11: Verify CLI show bigtap policy policy-name core completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} core   1  
    Should be true  ${result}
    [Tags]  feature  cli-completion     
TC12: Verify CLI show bigtap policy policy-name delivery-interfaces completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} delivery-interfaces   1  
    Should be true  ${result} 
    [Tags]  feature  cli-completion     
TC13: Verify CLI show bigtap policy policy-name drops completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} drops   1  
    Should be true  ${result} 
    [Tags]  feature  cli-completion     
TC14: Verify CLI show bigtap policy policy-name failed-paths completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} failed-paths   1  
    Should be true  ${result}     
    [Tags]  feature  cli-completion     
TC15: Verify CLI show bigtap policy policy-name history completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} history   1  
    Should be true  ${result}                     
    [Tags]  feature  cli-completion     
TC16: Verify CLI show bigtap policy policy-name match-rules completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} match-rules   1  
    Should be true  ${result}     
    [Tags]  feature  cli-completion     
TC17: Verify CLI show bigtap policy policy-name optimized-match completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} optimized-match   1  
    Should be true  ${result} 
    [Tags]  feature  cli-completion     
TC18: Verify CLI show bigtap policy policy-name services completion
    ${result}=  cli walk command  show bigtap policy ${policy_name} services   1  
    Should be true  ${result} 
    [Tags]  feature  cli-completion     
TC19: Verify CLI show bigtap policy-flow completion
    ${result}=  cli walk command  show bigtap policy-flow  3  cmd_argument=${policy_name}  
    Should be true  ${result} 
    [Tags]  feature  cli-completion     
TC20: Verify CLI show bigtap policy-flow policy-name completion
    ${result}=  cli walk command  show bigtap policy-flow ${policy_name}  1  
    Should be true  ${result} 
    [Tags]  feature  cli-completion
TC21: Verify CLI show bigtap rbac-permission completion
    ${result}=  cli walk command  show bigtap rbac-permission   3  cmd_argument=admin-view  
    Should be true  ${result} 
    [Tags]  feature  cli-completion     
TC22: Verify CLI show bigtap rbac-permission rbac-name completion
    ${result}=  cli walk command  show bigtap rbac-permission admin-view   1  
    Should be true  ${result} 
    [Tags]  feature  cli-completion    
TC23: Verify CLI show bigtap services completion
    ${result}=  cli walk command  show bigtap services   3  cmd_argument=${service_name}  
    Should be true  ${result}   
    [Tags]  feature  cli-completion
TC24: Verify CLI show bigtap services service-name completion
    ${result}=  cli walk command  show bigtap services ${service_name}  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC25: Verify CLI show bigtap topology completion
    ${result}=  cli walk command  show bigtap topology   6  
    Should be true  ${result}   
    [Tags]  feature  cli-completion
TC26: Verify CLI show bigtap services topology core completion
    ${result}=  cli walk command  show bigtap topology core  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC27: Verify CLI show bigtap services topology delivery completion
    ${result}=  cli walk command  show bigtap topology delivery  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC28: Verify CLI show bigtap services topology filter completion
    ${result}=  cli walk command  show bigtap topology filter  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC29: Verify CLI show bigtap services topology service completion
    ${result}=  cli walk command  show bigtap topology service  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC30: Verify CLI show bigtap services topology statistics completion
    ${result}=  cli walk command  show bigtap topology statistics  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC31: Verify CLI show bigtap services tracked-hosts completion
    ${result}=  cli walk command  show bigtap tracked-hosts  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC32: Verify CLI show bigtap services connected-devices completion
    ${result}=  cli walk command  show bigtap connected-devices  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC33: Verify CLI show bigtap services interface-names completion
    ${result}=  cli walk command  show bigtap interface-names  3  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC34: Verify CLI show bigtap services interface-names brief completion
    ${result}=  cli walk command  show bigtap interface-names brief  1  
    Should be true  ${result}
    [Tags]  feature  cli-completion
TC35: Verify CLI show bigtap services interface-names details completion
    ${result}=  cli walk command  show bigtap interface-names details  1  
    Should be true  ${result}    
    [Tags]  feature  cli-completion
TC36: Verify CLI show bigtap services observed-ip completion
    ${result}=  cli walk command  show bigtap observed-ip  1  
    Should be true  ${result}    
    [Tags]  feature  cli-completion
TC37: Add service to policy and verify show bigtap policy
    ${result}=  rest add service to policy  admin-view  ${policy_name}  ${service_name}  1
    Should be true  ${result}
    Sleep  10
    ${command_dictionary}=  rest return dictionary from get  /api/v1/data/controller/applications/bigtap/view/policy?select=info
    #Verify action
    Should be equal as strings   ${command_dictionary[0]['info']['action']}  forward
    #Verify config-status
    Should be equal as strings   ${command_dictionary[0]['info']['config-status']}  active and forwarding
    #Verify detailed-status
    Should be equal as strings   ${command_dictionary[0]['info']['detailed-status']}  installed - installed to forward
    #Verify post-service-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['post-service-interface-count']}  1
    #Verify pre-service-interface-count
    Should be equal as integers   ${command_dictionary[0]['info']['pre-service-interface-count']}  1 
    #Verify service-count
    Should be equal as integers   ${command_dictionary[0]['info']['service-count']}  1
    #Verify service-switch-count
    Should be equal as integers   ${command_dictionary[0]['info']['service-switch-count']}  1
    [Tags]  feature  cli  service
    
TC38: Verify CLI command show bigtap topology service
    ${myversion}=  Get Environment Variable  controller_version
    ${result}=  Run Keyword If  '${myversion}' == '4.0.0'  cli verify command  show bigtap topology service  6  ${service_pre_alias}  ELSE IF  '${myversion}' == '3.0.0'   cli verify command  show bigtap topology service  4  ${service_pre_alias}  
    Should be true  ${result}  
    ${result}=  Run Keyword If  '${myversion}' == '4.0.0'  cli verify command  show bigtap topology service  6  ${service_post_alias}  ELSE IF  '${myversion}' == '3.0.0'   cli verify command  show bigtap topology service  4  ${service_post_alias}  
    Should be true  ${result}           
    [Tags]  feature  cli        

* Keyword

cli suite setup
    base suite setup
    set version from controller
    rest enable feature  tracked-host
    rest enable feature  overlap
    rest enable feature  inport-mask
    rest add switch alias  s1  ${switch1_alias}
    rest add switch alias  s2  ${switch2_alias}    
    # Configure filter interfaces on all switches
    rest add interface role  s1  ${filter_intf_1}  filter    intf_nickname=${filter_alias_1}
    # Configure delivery interfaces on all switches    
    rest add interface role  s2  ${delivery_intf_1}  delivery    intf_nickname=${delivery_alias_1}
    # Configure service interface
    rest add interface role  s1  ${service_pre_intf}  service    intf_nickname=${service_pre_alias}
    rest add interface role  s1  ${service_post_intf}  service    intf_nickname=${service_post_alias}
    #  Add a Service
    rest add service  ${service_name}  ${service_pre_alias}  ${service_post_alias}    
    # Configure BigTap Policy
    rest add policy  admin-view  ${policy_name}  forward     
    rest add policy interface  admin-view   ${policy_name}   ${filter_alias_1}    filter
    rest add policy interface  admin-view   ${policy_name}   ${delivery_alias_1}  delivery
    rest add policy match  admin-view  ${policy_name}  1  {"src-tp-port": 1234, "ether-type": 2048, "ip-proto": 6, "sequence": 1}
    sleep  10
    ${verify_policy}=  rest verify bigtap policy  ${policy_name}  num_filter_intf=1  num_delivery_intf=1
    Should be true  ${verify_policy}

set version from controller
    ${version_string}=  rest show version
    ${version}=  split string  ${version_string}
    Set Environment Variable  controller_version  ${version[3]}
    Environment Variable Should Be Set  controller_version    

cli suite teardown
    rest delete policy  admin-view  ${policy_name}
    rest delete service  ${service_name}
    rest delete interface role  s1  ${filter_intf_1}         filter 
    rest delete interface role  s2  ${delivery_intf_1}       delivery
    rest delete interface role  s1  ${service_pre_intf}      service
    rest delete interface role  s1  ${service_post_intf}     service
    rest delete interface  s1  ${filter_intf_1}        
    rest delete interface  s2  ${delivery_intf_1} 
    rest delete interface  s1  ${service_pre_intf}
    rest delete interface  s1  ${service_post_intf}     
    rest delete switch alias  s1
    rest delete switch alias  s2
    rest delete switch  s1 
    rest delete switch  s2 
    base suite teardown
