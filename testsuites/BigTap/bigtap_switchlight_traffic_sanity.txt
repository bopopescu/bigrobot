*Settings
Documentation  BigTap SwitchLight Traffic Test Suite
Suite Setup  bigtap suite setup
Suite Teardown   bigtap suite teardown
Test Setup   base test setup
Test Teardown  base test teardown 
Force Tags   platform Sanity
Library  keywords/BsnCommon.py
Library  keywords/AppController.py
Library  keywords/BigTap.py
Library  keywords/SwitchLight.py
Library  keywords/Ixia.py

* Variable
${switch_1_alias}  AF1
${switchlight_version}  SwitchLight 2.0.0
${netmask}  18
${gateway}  10.192.64.1
${dns_server}  10.192.3.1
${dns_domain}  bigswitch.com
${filter_1}  ethernet1  
${filter_nick}  F1
${delivery_1}  ethernet2  
${delivery_nick}  D1
  


*Test Case

Verify L2 traffic: frame size 64 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  name=a_b_flow
    clear stats    
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 traffic: frame size 68 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=68  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity

Verify L2 traffic: frame size 128 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=128  frame_cnt=50000  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 traffic: frame size 128 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=128  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity

Verify L2 traffic: frame size 256 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=256  frame_cnt=50000  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 traffic: frame size 256 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=256  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity
    
Verify L2 traffic: frame size 512 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=512  frame_cnt=50000  name=a_b_flow
    start traffic  ${stream}
    clear stats
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 traffic: frame size 512 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=512  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity
    
Verify L2 traffic: frame size 1024 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=1024  frame_cnt=50000  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  
    
Verify L3 traffic: frame size 1024 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=1024  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity
    
Verify L2 traffic: frame size 1518 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=1518  frame_cnt=50000  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 traffic: frame size 1518 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=1518  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
      
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity
    
Verify L2 traffic: frame size 9216 bytes
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=9216  frame_cnt=50000  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 traffic: frame size 9216 bytes
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=9216  frame_cnt=50000
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity

Verify L2 Traffic: VLAN Tagged Traffic
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=8100  vlan_id=2048  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L3 Traffic: VLAN Tagged Traffic
    ${stream}=  L3 add  flow=a->b  frame_rate=10000  frame_size=9216  frame_cnt=50000  ethertype=8100  vlan_id=2048  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream}
    sleep  10
    stop traffic   ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity

Verify L2 Traffic: Spanning Tree Protocol (for bridges) IEEE 802.1D
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=0802  src_mac=00:11:12:13:14:01  dst_mac=01:80:c2:00:00:00  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L2 Traffic: Spanning Tree Protocol (for provider bridges) IEEE 802.1AD
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=0802  src_mac=00:11:12:13:14:01  dst_mac=01:80:c2:00:00:08  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L2 Traffic: Ethernet flow control (Pause frame) IEEE 802.3x
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=0800  src_mac=00:11:12:13:14:01  dst_mac=01:80:c2:00:00:01  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L2 Traffic: LLDP with ethernet ethertype
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=0800  src_mac=00:11:12:13:14:01  dst_mac=01:80:c2:00:00:0E  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames
    [Tags]  traffic  sanity  

Verify L2 Traffic: Ethernet OAM Protocol IEEE 802.3ah/Slow Protocols
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=8809  src_mac=00:11:12:13:14:01  dst_mac=01:80:c2:00:00:02  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_frames  
    [Tags]  traffic  sanity     
    
Verify L2 Traffic: Traffic with CRC Errors
    cli enable crc forwarding  s1
    ${stream}=  L2 add  flow=a->b  frame_rate=10000  frame_size=64  frame_cnt=50000  ethertype=0800  crc=True  name=a_b_flow
    clear stats
    start traffic  ${stream}
    sleep  10
    stop traffic  ${stream}
    verify results  transmitted_frames  received_crc_errored_frames
    cli disable crc forwarding  s1  
    [Tags]  traffic  sanity          
        
* Keywords

bigtap suite setup
    base suite setup
    rest add switch alias  s1  AF1
    rest add switch alias  s2  AF2
    rest add interface role  s1  ${filter_1}  filter  ${filter_nick}   
    rest add interface role  s2  ${delivery_1}  delivery  ${delivery_nick}
    rest add policy  admin-view  P1  forward
    rest add policy match  admin-view  P1  1  {"any-traffic": true, "sequence": 1}
    rest add policy interface  admin-view  P1  F1  filter
    rest add policy interface  admin-view  P1  D1  delivery    
        
verify results   [Arguments]  ${transmitted_frames}  ${received_frames}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  a  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  b  ${received_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}
    Should be true  ${in_range} 

bigtap suite teardown
    rest delete policy  admin-view  P1
    rest delete interface role  s1  ${filter_1}  filter  ${filter_nick} 
    rest delete interface role  s1  ${delivery_1}  delivery  ${delivery_nick}
    rest delete interface  s1  ${filter_1}  switch_alias=${switch_1_alias}
    rest delete interface  s2  ${delivery_1}  switch_alias=${switch_1_alias}
    rest delete switch alias  s1
    rest delete switch alias  s2
    rest delete switch  s1
    rest delete switch  s2
    base suite teardown