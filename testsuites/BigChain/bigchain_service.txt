*Settings
Documentation                           BigChain Service Test Suite
Suite Setup                             service suite setup
Suite Teardown                          service suite teardown
Test Setup                              service test setup
Test Teardown                           service test teardown
Force Tags                              bigchain  corsair-plus  4.5.0  accton  AS5710
Library                                 keywords/BsnCommon.py
Library                                 keywords/AppController.py
Library                                 keywords/BigTap.py
Library                                 keywords/BigChain.py
Library                                 keywords/SwitchLight.py
Library                                 keywords/Ixia.py
Library                                 Collections.py
Library                                 OperatingSystem.py
Library                                 String.py

* Variable
${switch1_alias}                        app-ras5710-1
${chain_name}                           CHAIN1
${service_name}                         SERVICE1
${chain_interface_1}                    ethernet1
${chain_interface_2}                    ethernet2
${service_in_interface1}                ethernet13
${service_out_interface1}               ethernet14

${s1s2_10g_name_1}                      port-channel1
${s1s2_10g_port_range_1}                13,15,17,21
${s1s2_10g_number_1}                    2
${s1s2_10g_name_2}                      port-channel2
${s1s2_10g_port_range_2}                14,16,18,22
${s1s2_10g_number_2}                    3

* Test Case

TC001: Verify service description can be configured via rest a call
    ${result1}=  rest add a bigchain service  chain_service_name=${service_name}  service_type=custom  instance_id=1
    Should be True  ${result1}
    ${result2}=  rest add a bigchain service description  chain_service_name=${service_name}  descrption=TestBigChainService
    Should be True  ${result2}
    [Tags]  feature

TC002: Verify service description can be deleted via rest a call
    ${result1}=  rest add a bigchain service  chain_service_name=${service_name}  service_type=custom  instance_id=1
    Should be True  ${result1}
    ${result2}=  rest add a bigchain service description  chain_service_name=${service_name}  descrption=TestBigChainService
    Should be True  ${result2}
    sleep  5
    ${result3}=  rest delete a bigchain service description  chain_service_name=${service_name}  descrption=TestBigChainService
    Should be True  ${result3}
    [Tags]  feature

TC003: Verify service description can be configured via cli
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=description "Test Description"
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error    
    [Tags]  feature

TC004: Verify service description can be deleted via cli
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=description "Test Description"
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    sleep  2
    config  node=master  cmd=no description "Test Description"
    ${content3}=  cli_content  node=master
    Should Not Contain  ${content3}  Error
    [Tags]  feature  jira-BT-1831  skipped

TC005: Verify service type bluecoat can be configured
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type bluecoat
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    [Tags]  feature

TC006: Verify service type bluecoat can be deleted
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type bluecoat
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    sleep  2
    config  node=master  cmd=no type bluecoat
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error    
    [Tags]  feature

TC007: Verify service type custom can be configured
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type custom
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    [Tags]  feature

TC008: Verify service type custom can be deleted
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type custom
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    sleep  2
    config  node=master  cmd=no type custom
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error    
    [Tags]  feature

TC009: Verify service type fireeye can be configured
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type fireeye
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    [Tags]  feature

TC010: Verify service type fireeye can be deleted
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type fireeye
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    sleep  2
    config  node=master  cmd=no type fireeye
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error    
    [Tags]  feature

TC011: Verify service type ips can be configured
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type ips
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    [Tags]  feature

TC012: Verify service type ips can be deleted
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type ips
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    sleep  2
    config  node=master  cmd=no type ips
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error    
    [Tags]  feature

TC013: Verify service type paloalto-firewall can be configured
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type paloalto-firewall
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    [Tags]  feature

TC014: Verify service type paloalto-firewall can be deleted
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type paloalto-firewall
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    sleep  2
    config  node=master  cmd=no type paloalto-firewall
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error    
    [Tags]  feature

TC015: Verify standard ethernet interface can be used as interface-pair
    ${result1}=  rest add a bigchain service  chain_service_name=${service_name}  service_type=custom  instance_id=1
    Should be True  ${result1}
    ${result2}=  rest add a bigchain service description  chain_service_name=${service_name}  descrption=TestBigChainService
    Should be True  ${result2}
    ${result3}=  rest add a bigchain service instance interface pair  node=s1  chain_service_name=${service_name}  instance_id=1  inintf=${service_in_interface1}  outintf=${service_out_interface1}
    Should be True  ${result3}
    ${result4}=  rest update bigchain policy action  chain_service_name=${service_name}
    Should be True  ${result4}
    ${result5}=  rest add a bigchain policy match  chain_service_name=${service_name}  match_number=1  data={"ether-type": 2048, "dst-tp-port": 80, "ip-proto": 6, "sequence": 1}
    Should be True  ${result5}
    sleep  5
    ${result6}=  rest verify bigchain service instance  node=s1  chain_service_name=${service_name}  chain_service_type=custom  instance_id=1  inport=${service_in_interface1}  outport=${service_out_interface1}  chain_service_description=TestBigChainService
    Should be True  ${result6}
    [Tags]  feature  jira-bt-1832

TC016: Verify port-channel interface can be used as interface-pair
    ${result1}=  rest add a bigchain service  chain_service_name=${service_name}  service_type=custom  instance_id=1
    Should be True  ${result1}
    ${result2}=  rest add a bigchain service description  chain_service_name=${service_name}  descrption=TestBigChainService
    Should be True  ${result2}
    ${result3}=  rest add a bigchain service instance interface pair  node=s1  chain_service_name=${service_name}  instance_id=1  inintf=${s1s2_10g_name_1}  outintf=${s1s2_10g_name_2}
    Should be True  ${result3}
    ${result4}=  rest update bigchain policy action  chain_service_name=${service_name}
    Should be True  ${result4}
    ${result5}=  rest add a bigchain policy match  chain_service_name=${service_name}  match_number=1  data={"ether-type": 2048, "dst-tp-port": 80, "ip-proto": 6, "sequence": 1}
    Should be True  ${result5}
    sleep  5
    ${result6}=  rest verify bigchain service instance  node=s1  chain_service_name=${service_name}  chain_service_type=custom  instance_id=1  inport=${s1s2_10g_name_1}  outport=${s1s2_10g_name_2}  chain_service_description=TestBigChainService
    Should be True  ${result6}
    [Tags]  feature

TC017: Verify bigchain service instance can deleted
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=type custom
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    config  node=master  cmd=instance 1
    ${content3}=  cli_content  node=master
    Should Not Contain  ${content3}  Error
    config  node=master  cmd=interface-pair switch ${switch1_alias} in ${service_in_interface1} out ${service_out_interface1}
    ${content4}=  cli_content  node=master
    Should Not Contain  ${content4}  Error
    sleep  5
    config  node=master  cmd=no instance 1
    ${content5}=  cli_content  node=master
    Should Not Contain  ${content5}  Error
    [Tags]  feature

TC018: Verify a bigchain service can be added to a bigchain chain via cli
    add a service and attach it to a chain via cli
    ${result1}=  rest verify bigchain chain  s1  chain_name=${chain_name}  interface1=${chain_interface_1}  interface2=${chain_interface_2}  service1=${service_name}
    Should be true  ${result1}
    ${stream_l3_as5710}=  L3 add  flow=a->b  frame_cnt=100000  frame_rate=10000  frame_size=9150  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_as5710}
    sleep  10
    stop traffic  ${stream_l3_as5710}
    verify results  a  b  transmitted_frames  received_valid_frames
    [Tags]  feature  runthis
    
TC019: Verify a bigchain service can be added to a bigchain chain via rest
    add a service and attach it to a chain via rest
    ${result1}=  rest verify bigchain chain  s1  chain_name=${chain_name}  interface1=${chain_interface_1}  interface2=${chain_interface_2}  service1=${service_name}
    Should be true  ${result1}
    ${stream_l3_as5710}=  L3 add  flow=a->b  line_rate=100  frame_size=9150  
    ...     src_mac=00:02:03:04:05:06  dst_mac=00:02:03:04:05:07  no_arp=True
    ...     src_ip=100.1.1.1  dst_ip=100.1.1.2  name=a_b_flow
    clear stats  
    start traffic  ${stream_l3_as5710}
    sleep  10
    verify results  a  b  transmitted_frame_rate  received_frame_rate        
    stop traffic  ${stream_l3_as5710}
    [Tags]  feature


    
* Keywords

service suite setup
    base suite setup
    ${result1}=  rest add switch alias  s1  ${switch1_alias}
    Should be true  ${result1}
    ${result2}=  rest add switch role  node=s1  mode=bigchain
    Should be true  ${result2}
    cli add portchannel  s1  ${s1s2_10g_number_1}  ${s1s2_10g_port_range_1}  L3
    cli add portchannel  s1  ${s1s2_10g_number_2}  ${s1s2_10g_port_range_2}  L3
    Sleep   5

service test setup
    ${result1}=  write version to file
    Should be true  ${result1}
    ${result}=  start syslog monitor
    Should be true  ${result}
    ixia initialize  tg1  init=true
    
service test teardown
    config  node=master  cmd=no bigchain chain ${chain_name}    
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=no bigchain service ${service_name}
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    delete traffic
    sleep  2
    ${result1}=  stop syslog monitor
    Should be true  ${result1}

add a service and attach it to a chain via rest
    ${result1}=  rest add a bigchain service  chain_service_name=${service_name}  service_type=custom  instance_id=1
    Should be True  ${result1}
    ${result2}=  rest add a bigchain service description  chain_service_name=${service_name}  descrption=TestBigChainService
    Should be True  ${result2}
    ${result3}=  rest add a bigchain service instance interface pair  node=s1  chain_service_name=${service_name}  instance_id=1  inintf=${service_in_interface1}  outintf=${service_out_interface1}
    Should be True  ${result3}
    ${result4}=  rest update bigchain policy action  chain_service_name=${service_name}
    Should be True  ${result4}
    ${result5}=  rest add a bigchain policy match  chain_service_name=${service_name}  match_number=1  data={"ether-type": 2048, "dst-tp-port": 80, "ip-proto": 6, "sequence": 1}
    Should be True  ${result5}
    sleep  5
    ${result6}=  rest add a chain  chain_name=${chain_name}
    Should be True  ${result6}
    ${result7}=  rest add chain endpoint  s1  chain_name=${chain_name}  interface1=${chain_interface_1}  interface2=${chain_interface_2}
    Should be True  ${result7}
    ${result8}=  rest add service to chain  chain_name=${chain_name}  service_name=${service_name}  instance=1  sequence=1
    Should be True  ${result8}
    sleep  5

add a service and attach it to a chain via cli
    config  node=master  cmd=bigchain service ${service_name}
    ${content1}=  cli_content  node=master
    Should Not Contain  ${content1}  Error
    config  node=master  cmd=description TestBigChainService
    ${content2}=  cli_content  node=master
    Should Not Contain  ${content2}  Error
    config  node=master  cmd=instance 1
    ${content3}=  cli_content  node=master
    Should Not Contain  ${content3}  Error
    config  node=master  cmd=interface-pair switch ${switch1_alias} in ${service_in_interface1} out ${service_out_interface1}
    ${content4}=  cli_content  node=master
    Should Not Contain  ${content4}  Error
    config  node=master  cmd=exit
    config  node=master  cmd=policy
    ${content5}=  cli_content  node=master
    Should Not Contain  ${content5}  Error
    config  node=master  cmd=1 match tcp dst-port 80
    ${content6}=  cli_content  node=master
    Should Not Contain  ${content6}  Error
    config  node=master  cmd=exit
    config  node=master  cmd=exit
    sleep  5
    config  node=master  cmd=bigchain chain ${chain_name}
    ${content6}=  cli_content  node=master
    Should Not Contain  ${content6}  Error
    config  node=master  cmd=endpoint-pair switch ${switch1_alias} endpoint1 ${chain_interface_1} endpoint2 ${chain_interface_2}
    ${content7}=  cli_content  node=master
    Should Not Contain  ${content7}  Error
    config  node=master  cmd=use-service ${service_name} instance 1 sequence 1
    ${content8}=  cli_content  node=master
    Should Not Contain  ${content8}  Error
    sleep  5

verify results   [Arguments]  ${send_port}  ${recv_port}  ${transmitted_frames}  ${received_valid_frames}
    Sleep  5
    ${report}=  fetch port stats
    ${tx_value}=  verify dict key  ${report}  ${send_port}  ${transmitted_frames}
    ${rx_value}=  verify dict key  ${report}  ${recv_port}  ${received_valid_frames}
    ${in_range}=  ixia verify traffic rate  ${tx_value}  ${rx_value}  200
    Should be true  ${in_range}

service suite teardown
    cli delete portchannel  s1  ${s1s2_10g_number_1}
    cli delete portchannel  s1  ${s1s2_10g_number_2}
    ${result1}=  rest add switch role  node=s1  mode=bigtap
    Should be true  ${result1}
    sleep  5
    ${result2}=  rest verify switch mode show  node=s1  mode=bigtap-full-match
    Should be true  ${result2}
    ${result3}=  rest delete switch alias  s1
    Should be true  ${result3}
    ${result4}=  rest delete switch  s1
    Should be true  ${result4}
    base suite teardown