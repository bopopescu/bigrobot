HANDBOOKS=en
IN_BASENAME=exscript
OUT_BASENAME=exscript
PUBLISH_LOCAL_PATH=/var/www/docs/projects/$(OUT_BASENAME)

all: handbook apidocs

pdf:
	# Generate a latex file that defines the version number.
	cd ..; ./version.sh
	cd ..; VERSION=`python setup.py --version`; cd -; \
	echo '% This file is automatically generated; do not edit' > version.tex; \
	echo '\newcommand{\productversion}{'$$VERSION' }' >> version.tex
	
	# Generate a latex file that includes Exscript's command line options.
	echo '% This file is automatically generated; do not edit' > cliopt.tex
	echo '\begin{lstlisting}' >> cliopt.tex
	python ../exscript --help | tail -n+3 >> cliopt.tex
	echo '\end{lstlisting}' >> cliopt.tex
	
	# Copy the stdlib Python directory and modify it such that the
	# generated documentation does not leak implementation details.
	rm -Rf latex stdlib
	cp -r ../src/Exscript/stdlib .
	mv stdlib/mysys.py stdlib/sys.py
	sed -i 's/\(def [^(]*(\)scope,? ?/\1/' stdlib/*.py # Remove the scope arg
	sed -i 's/\(def [^(]*\)_(/\1(/' stdlib/*.py      	 # Remove trailing _

	# Generate a latex file that includes Exscript's stdlib commands.
	epydoc --latex --parse-only --no-source --exclude __init__.py stdlib
	echo '% This file is automatically generated; do not edit' > stdlib.tex
	for f in latex/stdlib.*.tex; do \
		f=`echo $$f | sed 's/.tex$$//'`; \
		echo "\include{$$f}" >> stdlib.tex; \
	done
	sed -i 's/\subsection/\subsubsection/; s/\section/\subsection/' latex/*.tex

	# Generate GraphViz figures. Unfortunately, pdflatex does not work when 
	# including these figures in PDF, tex, or PS format, so we are stuck with 
	# png.
	#for FILE in figures/*.dot; do \
	#	DESTFILE=`echo $$FILE | sed 's/.dot\$$//'`.png; \
	#	dot -Tpng -Gmargin=0 $$FILE -o $$DESTFILE; \
	#done

	# Run each call of pdflatex twice, required to resolve references.
	for LOCALE in $(HANDBOOKS); do \
		FILE=$(IN_BASENAME).$$LOCALE; \
		pdflatex -halt-on-error $$FILE.tex && pdflatex $$FILE.tex; \
		rm $$FILE.aux $$FILE.log $$FILE.out $$FILE.toc; \
		[ ! -e handbook/$$LOCALE ] && mkdir -p handbook/$$LOCALE/; \
		mv $$FILE.pdf handbook/$$LOCALE/$(OUT_BASENAME).$$LOCALE.pdf; \
	done
	cd ..; ./version.sh --reset

handbook: pdf
	for LOCALE in $(HANDBOOKS); do \
		FILE=$(IN_BASENAME).$$LOCALE; \
		latex2html -nonavigation -toc_depth 5 -split 0 -html_version 4.0,unicode -mkdir -dir handbook/$$LOCALE/ $$FILE.tex; \
	done

apidocs:
	cd ..; ./version.sh
	python mkapidoc.py
	cd ..; ./version.sh --reset

clean:
	rm -Rf api handbook latex stdlib cloned_repo
	rm -f *.aux *.log *.out exscript.*.pdf *.toc version.tex figures/*.png
	cd ..; ./version.sh --reset

publish-local: handbook apidocs
	mkdir -p $(PUBLISH_LOCAL_PATH)
	rsync -azr handbook/* api/* $(PUBLISH_LOCAL_PATH)/
	chmod -R o-w,g+w,a+rX $(PUBLISH_LOCAL_PATH) 2>/dev/null
	make clean

publish: apidocs
	# Create a temporary copy of this repository.
	# Switch it to the HTML repository branch and delete the old docs,
	# then install the new ones in the right directory.
	git clone https://knipknap@github.com/knipknap/exscript.git cloned_repo
	cd cloned_repo \
	&& git checkout gh-pages \
	&& rm -Rf api/ \
	&& git rm -rf api/; true \
	&& mv ../api/ . \
	&& git add api \
	&& git commit -nam "Update API docs (automatically by doc/Makefile)." \
	&& git push origin gh-pages
	make clean
